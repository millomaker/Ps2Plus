

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Apr 01 13:46:10 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F18876
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0xCA0,32
    41                           	dabs	1,0xC20,80
    42                           	dabs	1,0xBA0,80
    43                           	dabs	1,0xB30,64
    44                           	dabs	1,0xB20,16
    45                           	dabs	1,0xAA0,80
    46                           	dabs	1,0xA20,80
    47                           	dabs	1,0x9A0,80
    48                           	dabs	1,0x920,80
    49                           	dabs	1,0x8A0,80
    50                           	dabs	1,0x820,80
    51                           	dabs	1,0x7E0,16
    52                           	dabs	1,0x7A0,64
    53                           	dabs	1,0x720,80
    54                           	dabs	1,0x6A0,80
    55                           	dabs	1,0x650,32
    56                           	dabs	1,0x23F0,0,_lutRY
    57                           	dabs	1,0x24F0,0,_lutRX
    58                           	dabs	1,0x25F0,0,_lutLY
    59                           	dabs	1,0x26F0,0,_lutLX
    60                           	dabs	1,0x7E,2
    61  0000                     
    62                           ; Version 2.20
    63                           ; Generated 09/04/2020 GMT
    64                           ; 
    65                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC16F18876 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96  0000                     	;# 
    97  0001                     	;# 
    98  0002                     	;# 
    99  0003                     	;# 
   100  0004                     	;# 
   101  0005                     	;# 
   102  0006                     	;# 
   103  0007                     	;# 
   104  0008                     	;# 
   105  0009                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0014                     	;# 
   117  0015                     	;# 
   118  0016                     	;# 
   119  0017                     	;# 
   120  0018                     	;# 
   121  0019                     	;# 
   122  001A                     	;# 
   123  001C                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  008C                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0110                     	;# 
   156  0110                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0112                     	;# 
   160  0113                     	;# 
   161  0114                     	;# 
   162  0114                     	;# 
   163  0115                     	;# 
   164  0116                     	;# 
   165  0116                     	;# 
   166  0117                     	;# 
   167  0119                     	;# 
   168  0119                     	;# 
   169  0119                     	;# 
   170  011A                     	;# 
   171  011A                     	;# 
   172  011A                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011B                     	;# 
   177  011B                     	;# 
   178  011C                     	;# 
   179  011C                     	;# 
   180  011C                     	;# 
   181  011D                     	;# 
   182  011D                     	;# 
   183  011D                     	;# 
   184  011E                     	;# 
   185  011E                     	;# 
   186  011E                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  011F                     	;# 
   191  011F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  018E                     	;# 
   195  018F                     	;# 
   196  0190                     	;# 
   197  0191                     	;# 
   198  0192                     	;# 
   199  0196                     	;# 
   200  0197                     	;# 
   201  0198                     	;# 
   202  0199                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019C                     	;# 
   206  020C                     	;# 
   207  020C                     	;# 
   208  020D                     	;# 
   209  020E                     	;# 
   210  020F                     	;# 
   211  020F                     	;# 
   212  0210                     	;# 
   213  0210                     	;# 
   214  0211                     	;# 
   215  0211                     	;# 
   216  0212                     	;# 
   217  0212                     	;# 
   218  0213                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0216                     	;# 
   223  0216                     	;# 
   224  0217                     	;# 
   225  0217                     	;# 
   226  0218                     	;# 
   227  0218                     	;# 
   228  0219                     	;# 
   229  021A                     	;# 
   230  021B                     	;# 
   231  021B                     	;# 
   232  021C                     	;# 
   233  021C                     	;# 
   234  021D                     	;# 
   235  021D                     	;# 
   236  021E                     	;# 
   237  021F                     	;# 
   238  028C                     	;# 
   239  028C                     	;# 
   240  028D                     	;# 
   241  028D                     	;# 
   242  028E                     	;# 
   243  028F                     	;# 
   244  0290                     	;# 
   245  0290                     	;# 
   246  0291                     	;# 
   247  0292                     	;# 
   248  0292                     	;# 
   249  0293                     	;# 
   250  0293                     	;# 
   251  0294                     	;# 
   252  0295                     	;# 
   253  0296                     	;# 
   254  0296                     	;# 
   255  0297                     	;# 
   256  0298                     	;# 
   257  0298                     	;# 
   258  0299                     	;# 
   259  0299                     	;# 
   260  029A                     	;# 
   261  029B                     	;# 
   262  029C                     	;# 
   263  029C                     	;# 
   264  029D                     	;# 
   265  030C                     	;# 
   266  030C                     	;# 
   267  030D                     	;# 
   268  030E                     	;# 
   269  030F                     	;# 
   270  0310                     	;# 
   271  0310                     	;# 
   272  0311                     	;# 
   273  0312                     	;# 
   274  0313                     	;# 
   275  0314                     	;# 
   276  0314                     	;# 
   277  0315                     	;# 
   278  0316                     	;# 
   279  0317                     	;# 
   280  0318                     	;# 
   281  0318                     	;# 
   282  0319                     	;# 
   283  031A                     	;# 
   284  031B                     	;# 
   285  031C                     	;# 
   286  031C                     	;# 
   287  031D                     	;# 
   288  031E                     	;# 
   289  031F                     	;# 
   290  038C                     	;# 
   291  038C                     	;# 
   292  038D                     	;# 
   293  038E                     	;# 
   294  0390                     	;# 
   295  0390                     	;# 
   296  0391                     	;# 
   297  0392                     	;# 
   298  040C                     	;# 
   299  040D                     	;# 
   300  040E                     	;# 
   301  040F                     	;# 
   302  0410                     	;# 
   303  0411                     	;# 
   304  0416                     	;# 
   305  0416                     	;# 
   306  0417                     	;# 
   307  0418                     	;# 
   308  0418                     	;# 
   309  0419                     	;# 
   310  041A                     	;# 
   311  041A                     	;# 
   312  041B                     	;# 
   313  041C                     	;# 
   314  041C                     	;# 
   315  041D                     	;# 
   316  041E                     	;# 
   317  041F                     	;# 
   318  048C                     	;# 
   319  048C                     	;# 
   320  048D                     	;# 
   321  048E                     	;# 
   322  048F                     	;# 
   323  048F                     	;# 
   324  0490                     	;# 
   325  0491                     	;# 
   326  0492                     	;# 
   327  0492                     	;# 
   328  0493                     	;# 
   329  0494                     	;# 
   330  0495                     	;# 
   331  0495                     	;# 
   332  0496                     	;# 
   333  0497                     	;# 
   334  0498                     	;# 
   335  0499                     	;# 
   336  049A                     	;# 
   337  049B                     	;# 
   338  049C                     	;# 
   339  049D                     	;# 
   340  050C                     	;# 
   341  050C                     	;# 
   342  050D                     	;# 
   343  050E                     	;# 
   344  050F                     	;# 
   345  050F                     	;# 
   346  0510                     	;# 
   347  0511                     	;# 
   348  0512                     	;# 
   349  0512                     	;# 
   350  0513                     	;# 
   351  0514                     	;# 
   352  0515                     	;# 
   353  0515                     	;# 
   354  0516                     	;# 
   355  0517                     	;# 
   356  0518                     	;# 
   357  0519                     	;# 
   358  051A                     	;# 
   359  051B                     	;# 
   360  051C                     	;# 
   361  051D                     	;# 
   362  058C                     	;# 
   363  058C                     	;# 
   364  058D                     	;# 
   365  058E                     	;# 
   366  058F                     	;# 
   367  058F                     	;# 
   368  0590                     	;# 
   369  0591                     	;# 
   370  0592                     	;# 
   371  0593                     	;# 
   372  060C                     	;# 
   373  060D                     	;# 
   374  060E                     	;# 
   375  060F                     	;# 
   376  0610                     	;# 
   377  0611                     	;# 
   378  0612                     	;# 
   379  0613                     	;# 
   380  0614                     	;# 
   381  0616                     	;# 
   382  0617                     	;# 
   383  0618                     	;# 
   384  0619                     	;# 
   385  061A                     	;# 
   386  061B                     	;# 
   387  061C                     	;# 
   388  061D                     	;# 
   389  061E                     	;# 
   390  068C                     	;# 
   391  068D                     	;# 
   392  068E                     	;# 
   393  068F                     	;# 
   394  0690                     	;# 
   395  0691                     	;# 
   396  0692                     	;# 
   397  0693                     	;# 
   398  0694                     	;# 
   399  070C                     	;# 
   400  070D                     	;# 
   401  070E                     	;# 
   402  070F                     	;# 
   403  0710                     	;# 
   404  0711                     	;# 
   405  0712                     	;# 
   406  0713                     	;# 
   407  0714                     	;# 
   408  0716                     	;# 
   409  0717                     	;# 
   410  0718                     	;# 
   411  0719                     	;# 
   412  071A                     	;# 
   413  071B                     	;# 
   414  071C                     	;# 
   415  071D                     	;# 
   416  071E                     	;# 
   417  0796                     	;# 
   418  0797                     	;# 
   419  0798                     	;# 
   420  0799                     	;# 
   421  079A                     	;# 
   422  079B                     	;# 
   423  080C                     	;# 
   424  080D                     	;# 
   425  080E                     	;# 
   426  080F                     	;# 
   427  0810                     	;# 
   428  0811                     	;# 
   429  0812                     	;# 
   430  0813                     	;# 
   431  0814                     	;# 
   432  081A                     	;# 
   433  081B                     	;# 
   434  081C                     	;# 
   435  081D                     	;# 
   436  081E                     	;# 
   437  081F                     	;# 
   438  088C                     	;# 
   439  088D                     	;# 
   440  088E                     	;# 
   441  088F                     	;# 
   442  0890                     	;# 
   443  0891                     	;# 
   444  0892                     	;# 
   445  0893                     	;# 
   446  0895                     	;# 
   447  0896                     	;# 
   448  0897                     	;# 
   449  0898                     	;# 
   450  0899                     	;# 
   451  089A                     	;# 
   452  089B                     	;# 
   453  090C                     	;# 
   454  090E                     	;# 
   455  090F                     	;# 
   456  091F                     	;# 
   457  098F                     	;# 
   458  098F                     	;# 
   459  0990                     	;# 
   460  0991                     	;# 
   461  0992                     	;# 
   462  0993                     	;# 
   463  0994                     	;# 
   464  0995                     	;# 
   465  0996                     	;# 
   466  0997                     	;# 
   467  0E0F                     	;# 
   468  0E10                     	;# 
   469  0E11                     	;# 
   470  0E12                     	;# 
   471  0E13                     	;# 
   472  0E14                     	;# 
   473  0E15                     	;# 
   474  0E16                     	;# 
   475  0E17                     	;# 
   476  0E18                     	;# 
   477  0E19                     	;# 
   478  0E1A                     	;# 
   479  0E1B                     	;# 
   480  0E1C                     	;# 
   481  0E1D                     	;# 
   482  0E1E                     	;# 
   483  0E1F                     	;# 
   484  0E20                     	;# 
   485  0E21                     	;# 
   486  0E22                     	;# 
   487  0E23                     	;# 
   488  0E24                     	;# 
   489  0E25                     	;# 
   490  0E26                     	;# 
   491  0E27                     	;# 
   492  0E28                     	;# 
   493  0E29                     	;# 
   494  0E2A                     	;# 
   495  0E2B                     	;# 
   496  0E2C                     	;# 
   497  0E2D                     	;# 
   498  0E2E                     	;# 
   499  0E2F                     	;# 
   500  0E30                     	;# 
   501  0E31                     	;# 
   502  0E32                     	;# 
   503  0E33                     	;# 
   504  0E34                     	;# 
   505  0E35                     	;# 
   506  0E36                     	;# 
   507  0E37                     	;# 
   508  0E8F                     	;# 
   509  0E90                     	;# 
   510  0E91                     	;# 
   511  0E92                     	;# 
   512  0E93                     	;# 
   513  0E94                     	;# 
   514  0E95                     	;# 
   515  0E96                     	;# 
   516  0E97                     	;# 
   517  0E9C                     	;# 
   518  0E9D                     	;# 
   519  0E9E                     	;# 
   520  0EA1                     	;# 
   521  0EA2                     	;# 
   522  0EA3                     	;# 
   523  0EA4                     	;# 
   524  0EA5                     	;# 
   525  0EA9                     	;# 
   526  0EAA                     	;# 
   527  0EAB                     	;# 
   528  0EAC                     	;# 
   529  0EB1                     	;# 
   530  0EB2                     	;# 
   531  0EB3                     	;# 
   532  0EB8                     	;# 
   533  0EB9                     	;# 
   534  0EBA                     	;# 
   535  0EBB                     	;# 
   536  0EBC                     	;# 
   537  0EBD                     	;# 
   538  0EBE                     	;# 
   539  0EC3                     	;# 
   540  0EC5                     	;# 
   541  0EC6                     	;# 
   542  0EC7                     	;# 
   543  0EC8                     	;# 
   544  0EC9                     	;# 
   545  0ECA                     	;# 
   546  0ECB                     	;# 
   547  0ECC                     	;# 
   548  0F10                     	;# 
   549  0F11                     	;# 
   550  0F12                     	;# 
   551  0F13                     	;# 
   552  0F14                     	;# 
   553  0F15                     	;# 
   554  0F16                     	;# 
   555  0F17                     	;# 
   556  0F18                     	;# 
   557  0F19                     	;# 
   558  0F1A                     	;# 
   559  0F1B                     	;# 
   560  0F1C                     	;# 
   561  0F1D                     	;# 
   562  0F1E                     	;# 
   563  0F1F                     	;# 
   564  0F20                     	;# 
   565  0F21                     	;# 
   566  0F22                     	;# 
   567  0F23                     	;# 
   568  0F24                     	;# 
   569  0F25                     	;# 
   570  0F26                     	;# 
   571  0F27                     	;# 
   572  0F28                     	;# 
   573  0F29                     	;# 
   574  0F2A                     	;# 
   575  0F2B                     	;# 
   576  0F2C                     	;# 
   577  0F2D                     	;# 
   578  0F2E                     	;# 
   579  0F2F                     	;# 
   580  0F30                     	;# 
   581  0F31                     	;# 
   582  0F32                     	;# 
   583  0F38                     	;# 
   584  0F39                     	;# 
   585  0F3A                     	;# 
   586  0F3B                     	;# 
   587  0F3C                     	;# 
   588  0F3D                     	;# 
   589  0F3E                     	;# 
   590  0F3F                     	;# 
   591  0F40                     	;# 
   592  0F41                     	;# 
   593  0F43                     	;# 
   594  0F44                     	;# 
   595  0F45                     	;# 
   596  0F46                     	;# 
   597  0F47                     	;# 
   598  0F48                     	;# 
   599  0F49                     	;# 
   600  0F4A                     	;# 
   601  0F4B                     	;# 
   602  0F4C                     	;# 
   603  0F4E                     	;# 
   604  0F4F                     	;# 
   605  0F50                     	;# 
   606  0F51                     	;# 
   607  0F52                     	;# 
   608  0F53                     	;# 
   609  0F54                     	;# 
   610  0F55                     	;# 
   611  0F56                     	;# 
   612  0F57                     	;# 
   613  0F59                     	;# 
   614  0F5A                     	;# 
   615  0F5B                     	;# 
   616  0F5C                     	;# 
   617  0F5D                     	;# 
   618  0F61                     	;# 
   619  0F62                     	;# 
   620  0F64                     	;# 
   621  0F65                     	;# 
   622  0F66                     	;# 
   623  0F67                     	;# 
   624  0F68                     	;# 
   625  0F69                     	;# 
   626  0F6A                     	;# 
   627  0F6B                     	;# 
   628  0F6C                     	;# 
   629  0F6D                     	;# 
   630  0FE4                     	;# 
   631  0FE5                     	;# 
   632  0FE6                     	;# 
   633  0FE7                     	;# 
   634  0FE8                     	;# 
   635  0FE9                     	;# 
   636  0FEA                     	;# 
   637  0FEB                     	;# 
   638  0FED                     	;# 
   639  0FEE                     	;# 
   640  0FEF                     	;# 
   641  0000                     	;# 
   642  0001                     	;# 
   643  0002                     	;# 
   644  0003                     	;# 
   645  0004                     	;# 
   646  0005                     	;# 
   647  0006                     	;# 
   648  0007                     	;# 
   649  0008                     	;# 
   650  0009                     	;# 
   651  000A                     	;# 
   652  000B                     	;# 
   653  000C                     	;# 
   654  000D                     	;# 
   655  000E                     	;# 
   656  000F                     	;# 
   657  0010                     	;# 
   658  0011                     	;# 
   659  0012                     	;# 
   660  0013                     	;# 
   661  0014                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0017                     	;# 
   665  0018                     	;# 
   666  0019                     	;# 
   667  001A                     	;# 
   668  001C                     	;# 
   669  001C                     	;# 
   670  001D                     	;# 
   671  001D                     	;# 
   672  001E                     	;# 
   673  001F                     	;# 
   674  008C                     	;# 
   675  008C                     	;# 
   676  008D                     	;# 
   677  008E                     	;# 
   678  008E                     	;# 
   679  008F                     	;# 
   680  0090                     	;# 
   681  0090                     	;# 
   682  0091                     	;# 
   683  0093                     	;# 
   684  0094                     	;# 
   685  0095                     	;# 
   686  0096                     	;# 
   687  0097                     	;# 
   688  0098                     	;# 
   689  0099                     	;# 
   690  009A                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  010C                     	;# 
   696  010D                     	;# 
   697  010E                     	;# 
   698  010E                     	;# 
   699  010F                     	;# 
   700  0110                     	;# 
   701  0110                     	;# 
   702  0111                     	;# 
   703  0112                     	;# 
   704  0112                     	;# 
   705  0113                     	;# 
   706  0114                     	;# 
   707  0114                     	;# 
   708  0115                     	;# 
   709  0116                     	;# 
   710  0116                     	;# 
   711  0117                     	;# 
   712  0119                     	;# 
   713  0119                     	;# 
   714  0119                     	;# 
   715  011A                     	;# 
   716  011A                     	;# 
   717  011A                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011B                     	;# 
   723  011C                     	;# 
   724  011C                     	;# 
   725  011C                     	;# 
   726  011D                     	;# 
   727  011D                     	;# 
   728  011D                     	;# 
   729  011E                     	;# 
   730  011E                     	;# 
   731  011E                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  011F                     	;# 
   737  018C                     	;# 
   738  018D                     	;# 
   739  018E                     	;# 
   740  018F                     	;# 
   741  0190                     	;# 
   742  0191                     	;# 
   743  0192                     	;# 
   744  0196                     	;# 
   745  0197                     	;# 
   746  0198                     	;# 
   747  0199                     	;# 
   748  019A                     	;# 
   749  019B                     	;# 
   750  019C                     	;# 
   751  020C                     	;# 
   752  020C                     	;# 
   753  020D                     	;# 
   754  020E                     	;# 
   755  020F                     	;# 
   756  020F                     	;# 
   757  0210                     	;# 
   758  0210                     	;# 
   759  0211                     	;# 
   760  0211                     	;# 
   761  0212                     	;# 
   762  0212                     	;# 
   763  0213                     	;# 
   764  0214                     	;# 
   765  0215                     	;# 
   766  0215                     	;# 
   767  0216                     	;# 
   768  0216                     	;# 
   769  0217                     	;# 
   770  0217                     	;# 
   771  0218                     	;# 
   772  0218                     	;# 
   773  0219                     	;# 
   774  021A                     	;# 
   775  021B                     	;# 
   776  021B                     	;# 
   777  021C                     	;# 
   778  021C                     	;# 
   779  021D                     	;# 
   780  021D                     	;# 
   781  021E                     	;# 
   782  021F                     	;# 
   783  028C                     	;# 
   784  028C                     	;# 
   785  028D                     	;# 
   786  028D                     	;# 
   787  028E                     	;# 
   788  028F                     	;# 
   789  0290                     	;# 
   790  0290                     	;# 
   791  0291                     	;# 
   792  0292                     	;# 
   793  0292                     	;# 
   794  0293                     	;# 
   795  0293                     	;# 
   796  0294                     	;# 
   797  0295                     	;# 
   798  0296                     	;# 
   799  0296                     	;# 
   800  0297                     	;# 
   801  0298                     	;# 
   802  0298                     	;# 
   803  0299                     	;# 
   804  0299                     	;# 
   805  029A                     	;# 
   806  029B                     	;# 
   807  029C                     	;# 
   808  029C                     	;# 
   809  029D                     	;# 
   810  030C                     	;# 
   811  030C                     	;# 
   812  030D                     	;# 
   813  030E                     	;# 
   814  030F                     	;# 
   815  0310                     	;# 
   816  0310                     	;# 
   817  0311                     	;# 
   818  0312                     	;# 
   819  0313                     	;# 
   820  0314                     	;# 
   821  0314                     	;# 
   822  0315                     	;# 
   823  0316                     	;# 
   824  0317                     	;# 
   825  0318                     	;# 
   826  0318                     	;# 
   827  0319                     	;# 
   828  031A                     	;# 
   829  031B                     	;# 
   830  031C                     	;# 
   831  031C                     	;# 
   832  031D                     	;# 
   833  031E                     	;# 
   834  031F                     	;# 
   835  038C                     	;# 
   836  038C                     	;# 
   837  038D                     	;# 
   838  038E                     	;# 
   839  0390                     	;# 
   840  0390                     	;# 
   841  0391                     	;# 
   842  0392                     	;# 
   843  040C                     	;# 
   844  040D                     	;# 
   845  040E                     	;# 
   846  040F                     	;# 
   847  0410                     	;# 
   848  0411                     	;# 
   849  0416                     	;# 
   850  0416                     	;# 
   851  0417                     	;# 
   852  0418                     	;# 
   853  0418                     	;# 
   854  0419                     	;# 
   855  041A                     	;# 
   856  041A                     	;# 
   857  041B                     	;# 
   858  041C                     	;# 
   859  041C                     	;# 
   860  041D                     	;# 
   861  041E                     	;# 
   862  041F                     	;# 
   863  048C                     	;# 
   864  048C                     	;# 
   865  048D                     	;# 
   866  048E                     	;# 
   867  048F                     	;# 
   868  048F                     	;# 
   869  0490                     	;# 
   870  0491                     	;# 
   871  0492                     	;# 
   872  0492                     	;# 
   873  0493                     	;# 
   874  0494                     	;# 
   875  0495                     	;# 
   876  0495                     	;# 
   877  0496                     	;# 
   878  0497                     	;# 
   879  0498                     	;# 
   880  0499                     	;# 
   881  049A                     	;# 
   882  049B                     	;# 
   883  049C                     	;# 
   884  049D                     	;# 
   885  050C                     	;# 
   886  050C                     	;# 
   887  050D                     	;# 
   888  050E                     	;# 
   889  050F                     	;# 
   890  050F                     	;# 
   891  0510                     	;# 
   892  0511                     	;# 
   893  0512                     	;# 
   894  0512                     	;# 
   895  0513                     	;# 
   896  0514                     	;# 
   897  0515                     	;# 
   898  0515                     	;# 
   899  0516                     	;# 
   900  0517                     	;# 
   901  0518                     	;# 
   902  0519                     	;# 
   903  051A                     	;# 
   904  051B                     	;# 
   905  051C                     	;# 
   906  051D                     	;# 
   907  058C                     	;# 
   908  058C                     	;# 
   909  058D                     	;# 
   910  058E                     	;# 
   911  058F                     	;# 
   912  058F                     	;# 
   913  0590                     	;# 
   914  0591                     	;# 
   915  0592                     	;# 
   916  0593                     	;# 
   917  060C                     	;# 
   918  060D                     	;# 
   919  060E                     	;# 
   920  060F                     	;# 
   921  0610                     	;# 
   922  0611                     	;# 
   923  0612                     	;# 
   924  0613                     	;# 
   925  0614                     	;# 
   926  0616                     	;# 
   927  0617                     	;# 
   928  0618                     	;# 
   929  0619                     	;# 
   930  061A                     	;# 
   931  061B                     	;# 
   932  061C                     	;# 
   933  061D                     	;# 
   934  061E                     	;# 
   935  068C                     	;# 
   936  068D                     	;# 
   937  068E                     	;# 
   938  068F                     	;# 
   939  0690                     	;# 
   940  0691                     	;# 
   941  0692                     	;# 
   942  0693                     	;# 
   943  0694                     	;# 
   944  070C                     	;# 
   945  070D                     	;# 
   946  070E                     	;# 
   947  070F                     	;# 
   948  0710                     	;# 
   949  0711                     	;# 
   950  0712                     	;# 
   951  0713                     	;# 
   952  0714                     	;# 
   953  0716                     	;# 
   954  0717                     	;# 
   955  0718                     	;# 
   956  0719                     	;# 
   957  071A                     	;# 
   958  071B                     	;# 
   959  071C                     	;# 
   960  071D                     	;# 
   961  071E                     	;# 
   962  0796                     	;# 
   963  0797                     	;# 
   964  0798                     	;# 
   965  0799                     	;# 
   966  079A                     	;# 
   967  079B                     	;# 
   968  080C                     	;# 
   969  080D                     	;# 
   970  080E                     	;# 
   971  080F                     	;# 
   972  0810                     	;# 
   973  0811                     	;# 
   974  0812                     	;# 
   975  0813                     	;# 
   976  0814                     	;# 
   977  081A                     	;# 
   978  081B                     	;# 
   979  081C                     	;# 
   980  081D                     	;# 
   981  081E                     	;# 
   982  081F                     	;# 
   983  088C                     	;# 
   984  088D                     	;# 
   985  088E                     	;# 
   986  088F                     	;# 
   987  0890                     	;# 
   988  0891                     	;# 
   989  0892                     	;# 
   990  0893                     	;# 
   991  0895                     	;# 
   992  0896                     	;# 
   993  0897                     	;# 
   994  0898                     	;# 
   995  0899                     	;# 
   996  089A                     	;# 
   997  089B                     	;# 
   998  090C                     	;# 
   999  090E                     	;# 
  1000  090F                     	;# 
  1001  091F                     	;# 
  1002  098F                     	;# 
  1003  098F                     	;# 
  1004  0990                     	;# 
  1005  0991                     	;# 
  1006  0992                     	;# 
  1007  0993                     	;# 
  1008  0994                     	;# 
  1009  0995                     	;# 
  1010  0996                     	;# 
  1011  0997                     	;# 
  1012  0E0F                     	;# 
  1013  0E10                     	;# 
  1014  0E11                     	;# 
  1015  0E12                     	;# 
  1016  0E13                     	;# 
  1017  0E14                     	;# 
  1018  0E15                     	;# 
  1019  0E16                     	;# 
  1020  0E17                     	;# 
  1021  0E18                     	;# 
  1022  0E19                     	;# 
  1023  0E1A                     	;# 
  1024  0E1B                     	;# 
  1025  0E1C                     	;# 
  1026  0E1D                     	;# 
  1027  0E1E                     	;# 
  1028  0E1F                     	;# 
  1029  0E20                     	;# 
  1030  0E21                     	;# 
  1031  0E22                     	;# 
  1032  0E23                     	;# 
  1033  0E24                     	;# 
  1034  0E25                     	;# 
  1035  0E26                     	;# 
  1036  0E27                     	;# 
  1037  0E28                     	;# 
  1038  0E29                     	;# 
  1039  0E2A                     	;# 
  1040  0E2B                     	;# 
  1041  0E2C                     	;# 
  1042  0E2D                     	;# 
  1043  0E2E                     	;# 
  1044  0E2F                     	;# 
  1045  0E30                     	;# 
  1046  0E31                     	;# 
  1047  0E32                     	;# 
  1048  0E33                     	;# 
  1049  0E34                     	;# 
  1050  0E35                     	;# 
  1051  0E36                     	;# 
  1052  0E37                     	;# 
  1053  0E8F                     	;# 
  1054  0E90                     	;# 
  1055  0E91                     	;# 
  1056  0E92                     	;# 
  1057  0E93                     	;# 
  1058  0E94                     	;# 
  1059  0E95                     	;# 
  1060  0E96                     	;# 
  1061  0E97                     	;# 
  1062  0E9C                     	;# 
  1063  0E9D                     	;# 
  1064  0E9E                     	;# 
  1065  0EA1                     	;# 
  1066  0EA2                     	;# 
  1067  0EA3                     	;# 
  1068  0EA4                     	;# 
  1069  0EA5                     	;# 
  1070  0EA9                     	;# 
  1071  0EAA                     	;# 
  1072  0EAB                     	;# 
  1073  0EAC                     	;# 
  1074  0EB1                     	;# 
  1075  0EB2                     	;# 
  1076  0EB3                     	;# 
  1077  0EB8                     	;# 
  1078  0EB9                     	;# 
  1079  0EBA                     	;# 
  1080  0EBB                     	;# 
  1081  0EBC                     	;# 
  1082  0EBD                     	;# 
  1083  0EBE                     	;# 
  1084  0EC3                     	;# 
  1085  0EC5                     	;# 
  1086  0EC6                     	;# 
  1087  0EC7                     	;# 
  1088  0EC8                     	;# 
  1089  0EC9                     	;# 
  1090  0ECA                     	;# 
  1091  0ECB                     	;# 
  1092  0ECC                     	;# 
  1093  0F10                     	;# 
  1094  0F11                     	;# 
  1095  0F12                     	;# 
  1096  0F13                     	;# 
  1097  0F14                     	;# 
  1098  0F15                     	;# 
  1099  0F16                     	;# 
  1100  0F17                     	;# 
  1101  0F18                     	;# 
  1102  0F19                     	;# 
  1103  0F1A                     	;# 
  1104  0F1B                     	;# 
  1105  0F1C                     	;# 
  1106  0F1D                     	;# 
  1107  0F1E                     	;# 
  1108  0F1F                     	;# 
  1109  0F20                     	;# 
  1110  0F21                     	;# 
  1111  0F22                     	;# 
  1112  0F23                     	;# 
  1113  0F24                     	;# 
  1114  0F25                     	;# 
  1115  0F26                     	;# 
  1116  0F27                     	;# 
  1117  0F28                     	;# 
  1118  0F29                     	;# 
  1119  0F2A                     	;# 
  1120  0F2B                     	;# 
  1121  0F2C                     	;# 
  1122  0F2D                     	;# 
  1123  0F2E                     	;# 
  1124  0F2F                     	;# 
  1125  0F30                     	;# 
  1126  0F31                     	;# 
  1127  0F32                     	;# 
  1128  0F38                     	;# 
  1129  0F39                     	;# 
  1130  0F3A                     	;# 
  1131  0F3B                     	;# 
  1132  0F3C                     	;# 
  1133  0F3D                     	;# 
  1134  0F3E                     	;# 
  1135  0F3F                     	;# 
  1136  0F40                     	;# 
  1137  0F41                     	;# 
  1138  0F43                     	;# 
  1139  0F44                     	;# 
  1140  0F45                     	;# 
  1141  0F46                     	;# 
  1142  0F47                     	;# 
  1143  0F48                     	;# 
  1144  0F49                     	;# 
  1145  0F4A                     	;# 
  1146  0F4B                     	;# 
  1147  0F4C                     	;# 
  1148  0F4E                     	;# 
  1149  0F4F                     	;# 
  1150  0F50                     	;# 
  1151  0F51                     	;# 
  1152  0F52                     	;# 
  1153  0F53                     	;# 
  1154  0F54                     	;# 
  1155  0F55                     	;# 
  1156  0F56                     	;# 
  1157  0F57                     	;# 
  1158  0F59                     	;# 
  1159  0F5A                     	;# 
  1160  0F5B                     	;# 
  1161  0F5C                     	;# 
  1162  0F5D                     	;# 
  1163  0F61                     	;# 
  1164  0F62                     	;# 
  1165  0F64                     	;# 
  1166  0F65                     	;# 
  1167  0F66                     	;# 
  1168  0F67                     	;# 
  1169  0F68                     	;# 
  1170  0F69                     	;# 
  1171  0F6A                     	;# 
  1172  0F6B                     	;# 
  1173  0F6C                     	;# 
  1174  0F6D                     	;# 
  1175  0FE4                     	;# 
  1176  0FE5                     	;# 
  1177  0FE6                     	;# 
  1178  0FE7                     	;# 
  1179  0FE8                     	;# 
  1180  0FE9                     	;# 
  1181  0FEA                     	;# 
  1182  0FEB                     	;# 
  1183  0FED                     	;# 
  1184  0FEE                     	;# 
  1185  0FEF                     	;# 
  1186  0000                     	;# 
  1187  0001                     	;# 
  1188  0002                     	;# 
  1189  0003                     	;# 
  1190  0004                     	;# 
  1191  0005                     	;# 
  1192  0006                     	;# 
  1193  0007                     	;# 
  1194  0008                     	;# 
  1195  0009                     	;# 
  1196  000A                     	;# 
  1197  000B                     	;# 
  1198  000C                     	;# 
  1199  000D                     	;# 
  1200  000E                     	;# 
  1201  000F                     	;# 
  1202  0010                     	;# 
  1203  0011                     	;# 
  1204  0012                     	;# 
  1205  0013                     	;# 
  1206  0014                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001C                     	;# 
  1214  001C                     	;# 
  1215  001D                     	;# 
  1216  001D                     	;# 
  1217  001E                     	;# 
  1218  001F                     	;# 
  1219  008C                     	;# 
  1220  008C                     	;# 
  1221  008D                     	;# 
  1222  008E                     	;# 
  1223  008E                     	;# 
  1224  008F                     	;# 
  1225  0090                     	;# 
  1226  0090                     	;# 
  1227  0091                     	;# 
  1228  0093                     	;# 
  1229  0094                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0097                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009A                     	;# 
  1236  009B                     	;# 
  1237  009C                     	;# 
  1238  009D                     	;# 
  1239  009E                     	;# 
  1240  010C                     	;# 
  1241  010D                     	;# 
  1242  010E                     	;# 
  1243  010E                     	;# 
  1244  010F                     	;# 
  1245  0110                     	;# 
  1246  0110                     	;# 
  1247  0111                     	;# 
  1248  0112                     	;# 
  1249  0112                     	;# 
  1250  0113                     	;# 
  1251  0114                     	;# 
  1252  0114                     	;# 
  1253  0115                     	;# 
  1254  0116                     	;# 
  1255  0116                     	;# 
  1256  0117                     	;# 
  1257  0119                     	;# 
  1258  0119                     	;# 
  1259  0119                     	;# 
  1260  011A                     	;# 
  1261  011A                     	;# 
  1262  011A                     	;# 
  1263  011B                     	;# 
  1264  011B                     	;# 
  1265  011B                     	;# 
  1266  011B                     	;# 
  1267  011B                     	;# 
  1268  011C                     	;# 
  1269  011C                     	;# 
  1270  011C                     	;# 
  1271  011D                     	;# 
  1272  011D                     	;# 
  1273  011D                     	;# 
  1274  011E                     	;# 
  1275  011E                     	;# 
  1276  011E                     	;# 
  1277  011F                     	;# 
  1278  011F                     	;# 
  1279  011F                     	;# 
  1280  011F                     	;# 
  1281  011F                     	;# 
  1282  018C                     	;# 
  1283  018D                     	;# 
  1284  018E                     	;# 
  1285  018F                     	;# 
  1286  0190                     	;# 
  1287  0191                     	;# 
  1288  0192                     	;# 
  1289  0196                     	;# 
  1290  0197                     	;# 
  1291  0198                     	;# 
  1292  0199                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019C                     	;# 
  1296  020C                     	;# 
  1297  020C                     	;# 
  1298  020D                     	;# 
  1299  020E                     	;# 
  1300  020F                     	;# 
  1301  020F                     	;# 
  1302  0210                     	;# 
  1303  0210                     	;# 
  1304  0211                     	;# 
  1305  0211                     	;# 
  1306  0212                     	;# 
  1307  0212                     	;# 
  1308  0213                     	;# 
  1309  0214                     	;# 
  1310  0215                     	;# 
  1311  0215                     	;# 
  1312  0216                     	;# 
  1313  0216                     	;# 
  1314  0217                     	;# 
  1315  0217                     	;# 
  1316  0218                     	;# 
  1317  0218                     	;# 
  1318  0219                     	;# 
  1319  021A                     	;# 
  1320  021B                     	;# 
  1321  021B                     	;# 
  1322  021C                     	;# 
  1323  021C                     	;# 
  1324  021D                     	;# 
  1325  021D                     	;# 
  1326  021E                     	;# 
  1327  021F                     	;# 
  1328  028C                     	;# 
  1329  028C                     	;# 
  1330  028D                     	;# 
  1331  028D                     	;# 
  1332  028E                     	;# 
  1333  028F                     	;# 
  1334  0290                     	;# 
  1335  0290                     	;# 
  1336  0291                     	;# 
  1337  0292                     	;# 
  1338  0292                     	;# 
  1339  0293                     	;# 
  1340  0293                     	;# 
  1341  0294                     	;# 
  1342  0295                     	;# 
  1343  0296                     	;# 
  1344  0296                     	;# 
  1345  0297                     	;# 
  1346  0298                     	;# 
  1347  0298                     	;# 
  1348  0299                     	;# 
  1349  0299                     	;# 
  1350  029A                     	;# 
  1351  029B                     	;# 
  1352  029C                     	;# 
  1353  029C                     	;# 
  1354  029D                     	;# 
  1355  030C                     	;# 
  1356  030C                     	;# 
  1357  030D                     	;# 
  1358  030E                     	;# 
  1359  030F                     	;# 
  1360  0310                     	;# 
  1361  0310                     	;# 
  1362  0311                     	;# 
  1363  0312                     	;# 
  1364  0313                     	;# 
  1365  0314                     	;# 
  1366  0314                     	;# 
  1367  0315                     	;# 
  1368  0316                     	;# 
  1369  0317                     	;# 
  1370  0318                     	;# 
  1371  0318                     	;# 
  1372  0319                     	;# 
  1373  031A                     	;# 
  1374  031B                     	;# 
  1375  031C                     	;# 
  1376  031C                     	;# 
  1377  031D                     	;# 
  1378  031E                     	;# 
  1379  031F                     	;# 
  1380  038C                     	;# 
  1381  038C                     	;# 
  1382  038D                     	;# 
  1383  038E                     	;# 
  1384  0390                     	;# 
  1385  0390                     	;# 
  1386  0391                     	;# 
  1387  0392                     	;# 
  1388  040C                     	;# 
  1389  040D                     	;# 
  1390  040E                     	;# 
  1391  040F                     	;# 
  1392  0410                     	;# 
  1393  0411                     	;# 
  1394  0416                     	;# 
  1395  0416                     	;# 
  1396  0417                     	;# 
  1397  0418                     	;# 
  1398  0418                     	;# 
  1399  0419                     	;# 
  1400  041A                     	;# 
  1401  041A                     	;# 
  1402  041B                     	;# 
  1403  041C                     	;# 
  1404  041C                     	;# 
  1405  041D                     	;# 
  1406  041E                     	;# 
  1407  041F                     	;# 
  1408  048C                     	;# 
  1409  048C                     	;# 
  1410  048D                     	;# 
  1411  048E                     	;# 
  1412  048F                     	;# 
  1413  048F                     	;# 
  1414  0490                     	;# 
  1415  0491                     	;# 
  1416  0492                     	;# 
  1417  0492                     	;# 
  1418  0493                     	;# 
  1419  0494                     	;# 
  1420  0495                     	;# 
  1421  0495                     	;# 
  1422  0496                     	;# 
  1423  0497                     	;# 
  1424  0498                     	;# 
  1425  0499                     	;# 
  1426  049A                     	;# 
  1427  049B                     	;# 
  1428  049C                     	;# 
  1429  049D                     	;# 
  1430  050C                     	;# 
  1431  050C                     	;# 
  1432  050D                     	;# 
  1433  050E                     	;# 
  1434  050F                     	;# 
  1435  050F                     	;# 
  1436  0510                     	;# 
  1437  0511                     	;# 
  1438  0512                     	;# 
  1439  0512                     	;# 
  1440  0513                     	;# 
  1441  0514                     	;# 
  1442  0515                     	;# 
  1443  0515                     	;# 
  1444  0516                     	;# 
  1445  0517                     	;# 
  1446  0518                     	;# 
  1447  0519                     	;# 
  1448  051A                     	;# 
  1449  051B                     	;# 
  1450  051C                     	;# 
  1451  051D                     	;# 
  1452  058C                     	;# 
  1453  058C                     	;# 
  1454  058D                     	;# 
  1455  058E                     	;# 
  1456  058F                     	;# 
  1457  058F                     	;# 
  1458  0590                     	;# 
  1459  0591                     	;# 
  1460  0592                     	;# 
  1461  0593                     	;# 
  1462  060C                     	;# 
  1463  060D                     	;# 
  1464  060E                     	;# 
  1465  060F                     	;# 
  1466  0610                     	;# 
  1467  0611                     	;# 
  1468  0612                     	;# 
  1469  0613                     	;# 
  1470  0614                     	;# 
  1471  0616                     	;# 
  1472  0617                     	;# 
  1473  0618                     	;# 
  1474  0619                     	;# 
  1475  061A                     	;# 
  1476  061B                     	;# 
  1477  061C                     	;# 
  1478  061D                     	;# 
  1479  061E                     	;# 
  1480  068C                     	;# 
  1481  068D                     	;# 
  1482  068E                     	;# 
  1483  068F                     	;# 
  1484  0690                     	;# 
  1485  0691                     	;# 
  1486  0692                     	;# 
  1487  0693                     	;# 
  1488  0694                     	;# 
  1489  070C                     	;# 
  1490  070D                     	;# 
  1491  070E                     	;# 
  1492  070F                     	;# 
  1493  0710                     	;# 
  1494  0711                     	;# 
  1495  0712                     	;# 
  1496  0713                     	;# 
  1497  0714                     	;# 
  1498  0716                     	;# 
  1499  0717                     	;# 
  1500  0718                     	;# 
  1501  0719                     	;# 
  1502  071A                     	;# 
  1503  071B                     	;# 
  1504  071C                     	;# 
  1505  071D                     	;# 
  1506  071E                     	;# 
  1507  0796                     	;# 
  1508  0797                     	;# 
  1509  0798                     	;# 
  1510  0799                     	;# 
  1511  079A                     	;# 
  1512  079B                     	;# 
  1513  080C                     	;# 
  1514  080D                     	;# 
  1515  080E                     	;# 
  1516  080F                     	;# 
  1517  0810                     	;# 
  1518  0811                     	;# 
  1519  0812                     	;# 
  1520  0813                     	;# 
  1521  0814                     	;# 
  1522  081A                     	;# 
  1523  081B                     	;# 
  1524  081C                     	;# 
  1525  081D                     	;# 
  1526  081E                     	;# 
  1527  081F                     	;# 
  1528  088C                     	;# 
  1529  088D                     	;# 
  1530  088E                     	;# 
  1531  088F                     	;# 
  1532  0890                     	;# 
  1533  0891                     	;# 
  1534  0892                     	;# 
  1535  0893                     	;# 
  1536  0895                     	;# 
  1537  0896                     	;# 
  1538  0897                     	;# 
  1539  0898                     	;# 
  1540  0899                     	;# 
  1541  089A                     	;# 
  1542  089B                     	;# 
  1543  090C                     	;# 
  1544  090E                     	;# 
  1545  090F                     	;# 
  1546  091F                     	;# 
  1547  098F                     	;# 
  1548  098F                     	;# 
  1549  0990                     	;# 
  1550  0991                     	;# 
  1551  0992                     	;# 
  1552  0993                     	;# 
  1553  0994                     	;# 
  1554  0995                     	;# 
  1555  0996                     	;# 
  1556  0997                     	;# 
  1557  0E0F                     	;# 
  1558  0E10                     	;# 
  1559  0E11                     	;# 
  1560  0E12                     	;# 
  1561  0E13                     	;# 
  1562  0E14                     	;# 
  1563  0E15                     	;# 
  1564  0E16                     	;# 
  1565  0E17                     	;# 
  1566  0E18                     	;# 
  1567  0E19                     	;# 
  1568  0E1A                     	;# 
  1569  0E1B                     	;# 
  1570  0E1C                     	;# 
  1571  0E1D                     	;# 
  1572  0E1E                     	;# 
  1573  0E1F                     	;# 
  1574  0E20                     	;# 
  1575  0E21                     	;# 
  1576  0E22                     	;# 
  1577  0E23                     	;# 
  1578  0E24                     	;# 
  1579  0E25                     	;# 
  1580  0E26                     	;# 
  1581  0E27                     	;# 
  1582  0E28                     	;# 
  1583  0E29                     	;# 
  1584  0E2A                     	;# 
  1585  0E2B                     	;# 
  1586  0E2C                     	;# 
  1587  0E2D                     	;# 
  1588  0E2E                     	;# 
  1589  0E2F                     	;# 
  1590  0E30                     	;# 
  1591  0E31                     	;# 
  1592  0E32                     	;# 
  1593  0E33                     	;# 
  1594  0E34                     	;# 
  1595  0E35                     	;# 
  1596  0E36                     	;# 
  1597  0E37                     	;# 
  1598  0E8F                     	;# 
  1599  0E90                     	;# 
  1600  0E91                     	;# 
  1601  0E92                     	;# 
  1602  0E93                     	;# 
  1603  0E94                     	;# 
  1604  0E95                     	;# 
  1605  0E96                     	;# 
  1606  0E97                     	;# 
  1607  0E9C                     	;# 
  1608  0E9D                     	;# 
  1609  0E9E                     	;# 
  1610  0EA1                     	;# 
  1611  0EA2                     	;# 
  1612  0EA3                     	;# 
  1613  0EA4                     	;# 
  1614  0EA5                     	;# 
  1615  0EA9                     	;# 
  1616  0EAA                     	;# 
  1617  0EAB                     	;# 
  1618  0EAC                     	;# 
  1619  0EB1                     	;# 
  1620  0EB2                     	;# 
  1621  0EB3                     	;# 
  1622  0EB8                     	;# 
  1623  0EB9                     	;# 
  1624  0EBA                     	;# 
  1625  0EBB                     	;# 
  1626  0EBC                     	;# 
  1627  0EBD                     	;# 
  1628  0EBE                     	;# 
  1629  0EC3                     	;# 
  1630  0EC5                     	;# 
  1631  0EC6                     	;# 
  1632  0EC7                     	;# 
  1633  0EC8                     	;# 
  1634  0EC9                     	;# 
  1635  0ECA                     	;# 
  1636  0ECB                     	;# 
  1637  0ECC                     	;# 
  1638  0F10                     	;# 
  1639  0F11                     	;# 
  1640  0F12                     	;# 
  1641  0F13                     	;# 
  1642  0F14                     	;# 
  1643  0F15                     	;# 
  1644  0F16                     	;# 
  1645  0F17                     	;# 
  1646  0F18                     	;# 
  1647  0F19                     	;# 
  1648  0F1A                     	;# 
  1649  0F1B                     	;# 
  1650  0F1C                     	;# 
  1651  0F1D                     	;# 
  1652  0F1E                     	;# 
  1653  0F1F                     	;# 
  1654  0F20                     	;# 
  1655  0F21                     	;# 
  1656  0F22                     	;# 
  1657  0F23                     	;# 
  1658  0F24                     	;# 
  1659  0F25                     	;# 
  1660  0F26                     	;# 
  1661  0F27                     	;# 
  1662  0F28                     	;# 
  1663  0F29                     	;# 
  1664  0F2A                     	;# 
  1665  0F2B                     	;# 
  1666  0F2C                     	;# 
  1667  0F2D                     	;# 
  1668  0F2E                     	;# 
  1669  0F2F                     	;# 
  1670  0F30                     	;# 
  1671  0F31                     	;# 
  1672  0F32                     	;# 
  1673  0F38                     	;# 
  1674  0F39                     	;# 
  1675  0F3A                     	;# 
  1676  0F3B                     	;# 
  1677  0F3C                     	;# 
  1678  0F3D                     	;# 
  1679  0F3E                     	;# 
  1680  0F3F                     	;# 
  1681  0F40                     	;# 
  1682  0F41                     	;# 
  1683  0F43                     	;# 
  1684  0F44                     	;# 
  1685  0F45                     	;# 
  1686  0F46                     	;# 
  1687  0F47                     	;# 
  1688  0F48                     	;# 
  1689  0F49                     	;# 
  1690  0F4A                     	;# 
  1691  0F4B                     	;# 
  1692  0F4C                     	;# 
  1693  0F4E                     	;# 
  1694  0F4F                     	;# 
  1695  0F50                     	;# 
  1696  0F51                     	;# 
  1697  0F52                     	;# 
  1698  0F53                     	;# 
  1699  0F54                     	;# 
  1700  0F55                     	;# 
  1701  0F56                     	;# 
  1702  0F57                     	;# 
  1703  0F59                     	;# 
  1704  0F5A                     	;# 
  1705  0F5B                     	;# 
  1706  0F5C                     	;# 
  1707  0F5D                     	;# 
  1708  0F61                     	;# 
  1709  0F62                     	;# 
  1710  0F64                     	;# 
  1711  0F65                     	;# 
  1712  0F66                     	;# 
  1713  0F67                     	;# 
  1714  0F68                     	;# 
  1715  0F69                     	;# 
  1716  0F6A                     	;# 
  1717  0F6B                     	;# 
  1718  0F6C                     	;# 
  1719  0F6D                     	;# 
  1720  0FE4                     	;# 
  1721  0FE5                     	;# 
  1722  0FE6                     	;# 
  1723  0FE7                     	;# 
  1724  0FE8                     	;# 
  1725  0FE9                     	;# 
  1726  0FEA                     	;# 
  1727  0FEB                     	;# 
  1728  0FED                     	;# 
  1729  0FEE                     	;# 
  1730  0FEF                     	;# 
  1731  0000                     	;# 
  1732  0001                     	;# 
  1733  0002                     	;# 
  1734  0003                     	;# 
  1735  0004                     	;# 
  1736  0005                     	;# 
  1737  0006                     	;# 
  1738  0007                     	;# 
  1739  0008                     	;# 
  1740  0009                     	;# 
  1741  000A                     	;# 
  1742  000B                     	;# 
  1743  000C                     	;# 
  1744  000D                     	;# 
  1745  000E                     	;# 
  1746  000F                     	;# 
  1747  0010                     	;# 
  1748  0011                     	;# 
  1749  0012                     	;# 
  1750  0013                     	;# 
  1751  0014                     	;# 
  1752  0015                     	;# 
  1753  0016                     	;# 
  1754  0017                     	;# 
  1755  0018                     	;# 
  1756  0019                     	;# 
  1757  001A                     	;# 
  1758  001C                     	;# 
  1759  001C                     	;# 
  1760  001D                     	;# 
  1761  001D                     	;# 
  1762  001E                     	;# 
  1763  001F                     	;# 
  1764  008C                     	;# 
  1765  008C                     	;# 
  1766  008D                     	;# 
  1767  008E                     	;# 
  1768  008E                     	;# 
  1769  008F                     	;# 
  1770  0090                     	;# 
  1771  0090                     	;# 
  1772  0091                     	;# 
  1773  0093                     	;# 
  1774  0094                     	;# 
  1775  0095                     	;# 
  1776  0096                     	;# 
  1777  0097                     	;# 
  1778  0098                     	;# 
  1779  0099                     	;# 
  1780  009A                     	;# 
  1781  009B                     	;# 
  1782  009C                     	;# 
  1783  009D                     	;# 
  1784  009E                     	;# 
  1785  010C                     	;# 
  1786  010D                     	;# 
  1787  010E                     	;# 
  1788  010E                     	;# 
  1789  010F                     	;# 
  1790  0110                     	;# 
  1791  0110                     	;# 
  1792  0111                     	;# 
  1793  0112                     	;# 
  1794  0112                     	;# 
  1795  0113                     	;# 
  1796  0114                     	;# 
  1797  0114                     	;# 
  1798  0115                     	;# 
  1799  0116                     	;# 
  1800  0116                     	;# 
  1801  0117                     	;# 
  1802  0119                     	;# 
  1803  0119                     	;# 
  1804  0119                     	;# 
  1805  011A                     	;# 
  1806  011A                     	;# 
  1807  011A                     	;# 
  1808  011B                     	;# 
  1809  011B                     	;# 
  1810  011B                     	;# 
  1811  011B                     	;# 
  1812  011B                     	;# 
  1813  011C                     	;# 
  1814  011C                     	;# 
  1815  011C                     	;# 
  1816  011D                     	;# 
  1817  011D                     	;# 
  1818  011D                     	;# 
  1819  011E                     	;# 
  1820  011E                     	;# 
  1821  011E                     	;# 
  1822  011F                     	;# 
  1823  011F                     	;# 
  1824  011F                     	;# 
  1825  011F                     	;# 
  1826  011F                     	;# 
  1827  018C                     	;# 
  1828  018D                     	;# 
  1829  018E                     	;# 
  1830  018F                     	;# 
  1831  0190                     	;# 
  1832  0191                     	;# 
  1833  0192                     	;# 
  1834  0196                     	;# 
  1835  0197                     	;# 
  1836  0198                     	;# 
  1837  0199                     	;# 
  1838  019A                     	;# 
  1839  019B                     	;# 
  1840  019C                     	;# 
  1841  020C                     	;# 
  1842  020C                     	;# 
  1843  020D                     	;# 
  1844  020E                     	;# 
  1845  020F                     	;# 
  1846  020F                     	;# 
  1847  0210                     	;# 
  1848  0210                     	;# 
  1849  0211                     	;# 
  1850  0211                     	;# 
  1851  0212                     	;# 
  1852  0212                     	;# 
  1853  0213                     	;# 
  1854  0214                     	;# 
  1855  0215                     	;# 
  1856  0215                     	;# 
  1857  0216                     	;# 
  1858  0216                     	;# 
  1859  0217                     	;# 
  1860  0217                     	;# 
  1861  0218                     	;# 
  1862  0218                     	;# 
  1863  0219                     	;# 
  1864  021A                     	;# 
  1865  021B                     	;# 
  1866  021B                     	;# 
  1867  021C                     	;# 
  1868  021C                     	;# 
  1869  021D                     	;# 
  1870  021D                     	;# 
  1871  021E                     	;# 
  1872  021F                     	;# 
  1873  028C                     	;# 
  1874  028C                     	;# 
  1875  028D                     	;# 
  1876  028D                     	;# 
  1877  028E                     	;# 
  1878  028F                     	;# 
  1879  0290                     	;# 
  1880  0290                     	;# 
  1881  0291                     	;# 
  1882  0292                     	;# 
  1883  0292                     	;# 
  1884  0293                     	;# 
  1885  0293                     	;# 
  1886  0294                     	;# 
  1887  0295                     	;# 
  1888  0296                     	;# 
  1889  0296                     	;# 
  1890  0297                     	;# 
  1891  0298                     	;# 
  1892  0298                     	;# 
  1893  0299                     	;# 
  1894  0299                     	;# 
  1895  029A                     	;# 
  1896  029B                     	;# 
  1897  029C                     	;# 
  1898  029C                     	;# 
  1899  029D                     	;# 
  1900  030C                     	;# 
  1901  030C                     	;# 
  1902  030D                     	;# 
  1903  030E                     	;# 
  1904  030F                     	;# 
  1905  0310                     	;# 
  1906  0310                     	;# 
  1907  0311                     	;# 
  1908  0312                     	;# 
  1909  0313                     	;# 
  1910  0314                     	;# 
  1911  0314                     	;# 
  1912  0315                     	;# 
  1913  0316                     	;# 
  1914  0317                     	;# 
  1915  0318                     	;# 
  1916  0318                     	;# 
  1917  0319                     	;# 
  1918  031A                     	;# 
  1919  031B                     	;# 
  1920  031C                     	;# 
  1921  031C                     	;# 
  1922  031D                     	;# 
  1923  031E                     	;# 
  1924  031F                     	;# 
  1925  038C                     	;# 
  1926  038C                     	;# 
  1927  038D                     	;# 
  1928  038E                     	;# 
  1929  0390                     	;# 
  1930  0390                     	;# 
  1931  0391                     	;# 
  1932  0392                     	;# 
  1933  040C                     	;# 
  1934  040D                     	;# 
  1935  040E                     	;# 
  1936  040F                     	;# 
  1937  0410                     	;# 
  1938  0411                     	;# 
  1939  0416                     	;# 
  1940  0416                     	;# 
  1941  0417                     	;# 
  1942  0418                     	;# 
  1943  0418                     	;# 
  1944  0419                     	;# 
  1945  041A                     	;# 
  1946  041A                     	;# 
  1947  041B                     	;# 
  1948  041C                     	;# 
  1949  041C                     	;# 
  1950  041D                     	;# 
  1951  041E                     	;# 
  1952  041F                     	;# 
  1953  048C                     	;# 
  1954  048C                     	;# 
  1955  048D                     	;# 
  1956  048E                     	;# 
  1957  048F                     	;# 
  1958  048F                     	;# 
  1959  0490                     	;# 
  1960  0491                     	;# 
  1961  0492                     	;# 
  1962  0492                     	;# 
  1963  0493                     	;# 
  1964  0494                     	;# 
  1965  0495                     	;# 
  1966  0495                     	;# 
  1967  0496                     	;# 
  1968  0497                     	;# 
  1969  0498                     	;# 
  1970  0499                     	;# 
  1971  049A                     	;# 
  1972  049B                     	;# 
  1973  049C                     	;# 
  1974  049D                     	;# 
  1975  050C                     	;# 
  1976  050C                     	;# 
  1977  050D                     	;# 
  1978  050E                     	;# 
  1979  050F                     	;# 
  1980  050F                     	;# 
  1981  0510                     	;# 
  1982  0511                     	;# 
  1983  0512                     	;# 
  1984  0512                     	;# 
  1985  0513                     	;# 
  1986  0514                     	;# 
  1987  0515                     	;# 
  1988  0515                     	;# 
  1989  0516                     	;# 
  1990  0517                     	;# 
  1991  0518                     	;# 
  1992  0519                     	;# 
  1993  051A                     	;# 
  1994  051B                     	;# 
  1995  051C                     	;# 
  1996  051D                     	;# 
  1997  058C                     	;# 
  1998  058C                     	;# 
  1999  058D                     	;# 
  2000  058E                     	;# 
  2001  058F                     	;# 
  2002  058F                     	;# 
  2003  0590                     	;# 
  2004  0591                     	;# 
  2005  0592                     	;# 
  2006  0593                     	;# 
  2007  060C                     	;# 
  2008  060D                     	;# 
  2009  060E                     	;# 
  2010  060F                     	;# 
  2011  0610                     	;# 
  2012  0611                     	;# 
  2013  0612                     	;# 
  2014  0613                     	;# 
  2015  0614                     	;# 
  2016  0616                     	;# 
  2017  0617                     	;# 
  2018  0618                     	;# 
  2019  0619                     	;# 
  2020  061A                     	;# 
  2021  061B                     	;# 
  2022  061C                     	;# 
  2023  061D                     	;# 
  2024  061E                     	;# 
  2025  068C                     	;# 
  2026  068D                     	;# 
  2027  068E                     	;# 
  2028  068F                     	;# 
  2029  0690                     	;# 
  2030  0691                     	;# 
  2031  0692                     	;# 
  2032  0693                     	;# 
  2033  0694                     	;# 
  2034  070C                     	;# 
  2035  070D                     	;# 
  2036  070E                     	;# 
  2037  070F                     	;# 
  2038  0710                     	;# 
  2039  0711                     	;# 
  2040  0712                     	;# 
  2041  0713                     	;# 
  2042  0714                     	;# 
  2043  0716                     	;# 
  2044  0717                     	;# 
  2045  0718                     	;# 
  2046  0719                     	;# 
  2047  071A                     	;# 
  2048  071B                     	;# 
  2049  071C                     	;# 
  2050  071D                     	;# 
  2051  071E                     	;# 
  2052  0796                     	;# 
  2053  0797                     	;# 
  2054  0798                     	;# 
  2055  0799                     	;# 
  2056  079A                     	;# 
  2057  079B                     	;# 
  2058  080C                     	;# 
  2059  080D                     	;# 
  2060  080E                     	;# 
  2061  080F                     	;# 
  2062  0810                     	;# 
  2063  0811                     	;# 
  2064  0812                     	;# 
  2065  0813                     	;# 
  2066  0814                     	;# 
  2067  081A                     	;# 
  2068  081B                     	;# 
  2069  081C                     	;# 
  2070  081D                     	;# 
  2071  081E                     	;# 
  2072  081F                     	;# 
  2073  088C                     	;# 
  2074  088D                     	;# 
  2075  088E                     	;# 
  2076  088F                     	;# 
  2077  0890                     	;# 
  2078  0891                     	;# 
  2079  0892                     	;# 
  2080  0893                     	;# 
  2081  0895                     	;# 
  2082  0896                     	;# 
  2083  0897                     	;# 
  2084  0898                     	;# 
  2085  0899                     	;# 
  2086  089A                     	;# 
  2087  089B                     	;# 
  2088  090C                     	;# 
  2089  090E                     	;# 
  2090  090F                     	;# 
  2091  091F                     	;# 
  2092  098F                     	;# 
  2093  098F                     	;# 
  2094  0990                     	;# 
  2095  0991                     	;# 
  2096  0992                     	;# 
  2097  0993                     	;# 
  2098  0994                     	;# 
  2099  0995                     	;# 
  2100  0996                     	;# 
  2101  0997                     	;# 
  2102  0E0F                     	;# 
  2103  0E10                     	;# 
  2104  0E11                     	;# 
  2105  0E12                     	;# 
  2106  0E13                     	;# 
  2107  0E14                     	;# 
  2108  0E15                     	;# 
  2109  0E16                     	;# 
  2110  0E17                     	;# 
  2111  0E18                     	;# 
  2112  0E19                     	;# 
  2113  0E1A                     	;# 
  2114  0E1B                     	;# 
  2115  0E1C                     	;# 
  2116  0E1D                     	;# 
  2117  0E1E                     	;# 
  2118  0E1F                     	;# 
  2119  0E20                     	;# 
  2120  0E21                     	;# 
  2121  0E22                     	;# 
  2122  0E23                     	;# 
  2123  0E24                     	;# 
  2124  0E25                     	;# 
  2125  0E26                     	;# 
  2126  0E27                     	;# 
  2127  0E28                     	;# 
  2128  0E29                     	;# 
  2129  0E2A                     	;# 
  2130  0E2B                     	;# 
  2131  0E2C                     	;# 
  2132  0E2D                     	;# 
  2133  0E2E                     	;# 
  2134  0E2F                     	;# 
  2135  0E30                     	;# 
  2136  0E31                     	;# 
  2137  0E32                     	;# 
  2138  0E33                     	;# 
  2139  0E34                     	;# 
  2140  0E35                     	;# 
  2141  0E36                     	;# 
  2142  0E37                     	;# 
  2143  0E8F                     	;# 
  2144  0E90                     	;# 
  2145  0E91                     	;# 
  2146  0E92                     	;# 
  2147  0E93                     	;# 
  2148  0E94                     	;# 
  2149  0E95                     	;# 
  2150  0E96                     	;# 
  2151  0E97                     	;# 
  2152  0E9C                     	;# 
  2153  0E9D                     	;# 
  2154  0E9E                     	;# 
  2155  0EA1                     	;# 
  2156  0EA2                     	;# 
  2157  0EA3                     	;# 
  2158  0EA4                     	;# 
  2159  0EA5                     	;# 
  2160  0EA9                     	;# 
  2161  0EAA                     	;# 
  2162  0EAB                     	;# 
  2163  0EAC                     	;# 
  2164  0EB1                     	;# 
  2165  0EB2                     	;# 
  2166  0EB3                     	;# 
  2167  0EB8                     	;# 
  2168  0EB9                     	;# 
  2169  0EBA                     	;# 
  2170  0EBB                     	;# 
  2171  0EBC                     	;# 
  2172  0EBD                     	;# 
  2173  0EBE                     	;# 
  2174  0EC3                     	;# 
  2175  0EC5                     	;# 
  2176  0EC6                     	;# 
  2177  0EC7                     	;# 
  2178  0EC8                     	;# 
  2179  0EC9                     	;# 
  2180  0ECA                     	;# 
  2181  0ECB                     	;# 
  2182  0ECC                     	;# 
  2183  0F10                     	;# 
  2184  0F11                     	;# 
  2185  0F12                     	;# 
  2186  0F13                     	;# 
  2187  0F14                     	;# 
  2188  0F15                     	;# 
  2189  0F16                     	;# 
  2190  0F17                     	;# 
  2191  0F18                     	;# 
  2192  0F19                     	;# 
  2193  0F1A                     	;# 
  2194  0F1B                     	;# 
  2195  0F1C                     	;# 
  2196  0F1D                     	;# 
  2197  0F1E                     	;# 
  2198  0F1F                     	;# 
  2199  0F20                     	;# 
  2200  0F21                     	;# 
  2201  0F22                     	;# 
  2202  0F23                     	;# 
  2203  0F24                     	;# 
  2204  0F25                     	;# 
  2205  0F26                     	;# 
  2206  0F27                     	;# 
  2207  0F28                     	;# 
  2208  0F29                     	;# 
  2209  0F2A                     	;# 
  2210  0F2B                     	;# 
  2211  0F2C                     	;# 
  2212  0F2D                     	;# 
  2213  0F2E                     	;# 
  2214  0F2F                     	;# 
  2215  0F30                     	;# 
  2216  0F31                     	;# 
  2217  0F32                     	;# 
  2218  0F38                     	;# 
  2219  0F39                     	;# 
  2220  0F3A                     	;# 
  2221  0F3B                     	;# 
  2222  0F3C                     	;# 
  2223  0F3D                     	;# 
  2224  0F3E                     	;# 
  2225  0F3F                     	;# 
  2226  0F40                     	;# 
  2227  0F41                     	;# 
  2228  0F43                     	;# 
  2229  0F44                     	;# 
  2230  0F45                     	;# 
  2231  0F46                     	;# 
  2232  0F47                     	;# 
  2233  0F48                     	;# 
  2234  0F49                     	;# 
  2235  0F4A                     	;# 
  2236  0F4B                     	;# 
  2237  0F4C                     	;# 
  2238  0F4E                     	;# 
  2239  0F4F                     	;# 
  2240  0F50                     	;# 
  2241  0F51                     	;# 
  2242  0F52                     	;# 
  2243  0F53                     	;# 
  2244  0F54                     	;# 
  2245  0F55                     	;# 
  2246  0F56                     	;# 
  2247  0F57                     	;# 
  2248  0F59                     	;# 
  2249  0F5A                     	;# 
  2250  0F5B                     	;# 
  2251  0F5C                     	;# 
  2252  0F5D                     	;# 
  2253  0F61                     	;# 
  2254  0F62                     	;# 
  2255  0F64                     	;# 
  2256  0F65                     	;# 
  2257  0F66                     	;# 
  2258  0F67                     	;# 
  2259  0F68                     	;# 
  2260  0F69                     	;# 
  2261  0F6A                     	;# 
  2262  0F6B                     	;# 
  2263  0F6C                     	;# 
  2264  0F6D                     	;# 
  2265  0FE4                     	;# 
  2266  0FE5                     	;# 
  2267  0FE6                     	;# 
  2268  0FE7                     	;# 
  2269  0FE8                     	;# 
  2270  0FE9                     	;# 
  2271  0FEA                     	;# 
  2272  0FEB                     	;# 
  2273  0FED                     	;# 
  2274  0FEE                     	;# 
  2275  0FEF                     	;# 
  2276  0000                     	;# 
  2277  0001                     	;# 
  2278  0002                     	;# 
  2279  0003                     	;# 
  2280  0004                     	;# 
  2281  0005                     	;# 
  2282  0006                     	;# 
  2283  0007                     	;# 
  2284  0008                     	;# 
  2285  0009                     	;# 
  2286  000A                     	;# 
  2287  000B                     	;# 
  2288  000C                     	;# 
  2289  000D                     	;# 
  2290  000E                     	;# 
  2291  000F                     	;# 
  2292  0010                     	;# 
  2293  0011                     	;# 
  2294  0012                     	;# 
  2295  0013                     	;# 
  2296  0014                     	;# 
  2297  0015                     	;# 
  2298  0016                     	;# 
  2299  0017                     	;# 
  2300  0018                     	;# 
  2301  0019                     	;# 
  2302  001A                     	;# 
  2303  001C                     	;# 
  2304  001C                     	;# 
  2305  001D                     	;# 
  2306  001D                     	;# 
  2307  001E                     	;# 
  2308  001F                     	;# 
  2309  008C                     	;# 
  2310  008C                     	;# 
  2311  008D                     	;# 
  2312  008E                     	;# 
  2313  008E                     	;# 
  2314  008F                     	;# 
  2315  0090                     	;# 
  2316  0090                     	;# 
  2317  0091                     	;# 
  2318  0093                     	;# 
  2319  0094                     	;# 
  2320  0095                     	;# 
  2321  0096                     	;# 
  2322  0097                     	;# 
  2323  0098                     	;# 
  2324  0099                     	;# 
  2325  009A                     	;# 
  2326  009B                     	;# 
  2327  009C                     	;# 
  2328  009D                     	;# 
  2329  009E                     	;# 
  2330  010C                     	;# 
  2331  010D                     	;# 
  2332  010E                     	;# 
  2333  010E                     	;# 
  2334  010F                     	;# 
  2335  0110                     	;# 
  2336  0110                     	;# 
  2337  0111                     	;# 
  2338  0112                     	;# 
  2339  0112                     	;# 
  2340  0113                     	;# 
  2341  0114                     	;# 
  2342  0114                     	;# 
  2343  0115                     	;# 
  2344  0116                     	;# 
  2345  0116                     	;# 
  2346  0117                     	;# 
  2347  0119                     	;# 
  2348  0119                     	;# 
  2349  0119                     	;# 
  2350  011A                     	;# 
  2351  011A                     	;# 
  2352  011A                     	;# 
  2353  011B                     	;# 
  2354  011B                     	;# 
  2355  011B                     	;# 
  2356  011B                     	;# 
  2357  011B                     	;# 
  2358  011C                     	;# 
  2359  011C                     	;# 
  2360  011C                     	;# 
  2361  011D                     	;# 
  2362  011D                     	;# 
  2363  011D                     	;# 
  2364  011E                     	;# 
  2365  011E                     	;# 
  2366  011E                     	;# 
  2367  011F                     	;# 
  2368  011F                     	;# 
  2369  011F                     	;# 
  2370  011F                     	;# 
  2371  011F                     	;# 
  2372  018C                     	;# 
  2373  018D                     	;# 
  2374  018E                     	;# 
  2375  018F                     	;# 
  2376  0190                     	;# 
  2377  0191                     	;# 
  2378  0192                     	;# 
  2379  0196                     	;# 
  2380  0197                     	;# 
  2381  0198                     	;# 
  2382  0199                     	;# 
  2383  019A                     	;# 
  2384  019B                     	;# 
  2385  019C                     	;# 
  2386  020C                     	;# 
  2387  020C                     	;# 
  2388  020D                     	;# 
  2389  020E                     	;# 
  2390  020F                     	;# 
  2391  020F                     	;# 
  2392  0210                     	;# 
  2393  0210                     	;# 
  2394  0211                     	;# 
  2395  0211                     	;# 
  2396  0212                     	;# 
  2397  0212                     	;# 
  2398  0213                     	;# 
  2399  0214                     	;# 
  2400  0215                     	;# 
  2401  0215                     	;# 
  2402  0216                     	;# 
  2403  0216                     	;# 
  2404  0217                     	;# 
  2405  0217                     	;# 
  2406  0218                     	;# 
  2407  0218                     	;# 
  2408  0219                     	;# 
  2409  021A                     	;# 
  2410  021B                     	;# 
  2411  021B                     	;# 
  2412  021C                     	;# 
  2413  021C                     	;# 
  2414  021D                     	;# 
  2415  021D                     	;# 
  2416  021E                     	;# 
  2417  021F                     	;# 
  2418  028C                     	;# 
  2419  028C                     	;# 
  2420  028D                     	;# 
  2421  028D                     	;# 
  2422  028E                     	;# 
  2423  028F                     	;# 
  2424  0290                     	;# 
  2425  0290                     	;# 
  2426  0291                     	;# 
  2427  0292                     	;# 
  2428  0292                     	;# 
  2429  0293                     	;# 
  2430  0293                     	;# 
  2431  0294                     	;# 
  2432  0295                     	;# 
  2433  0296                     	;# 
  2434  0296                     	;# 
  2435  0297                     	;# 
  2436  0298                     	;# 
  2437  0298                     	;# 
  2438  0299                     	;# 
  2439  0299                     	;# 
  2440  029A                     	;# 
  2441  029B                     	;# 
  2442  029C                     	;# 
  2443  029C                     	;# 
  2444  029D                     	;# 
  2445  030C                     	;# 
  2446  030C                     	;# 
  2447  030D                     	;# 
  2448  030E                     	;# 
  2449  030F                     	;# 
  2450  0310                     	;# 
  2451  0310                     	;# 
  2452  0311                     	;# 
  2453  0312                     	;# 
  2454  0313                     	;# 
  2455  0314                     	;# 
  2456  0314                     	;# 
  2457  0315                     	;# 
  2458  0316                     	;# 
  2459  0317                     	;# 
  2460  0318                     	;# 
  2461  0318                     	;# 
  2462  0319                     	;# 
  2463  031A                     	;# 
  2464  031B                     	;# 
  2465  031C                     	;# 
  2466  031C                     	;# 
  2467  031D                     	;# 
  2468  031E                     	;# 
  2469  031F                     	;# 
  2470  038C                     	;# 
  2471  038C                     	;# 
  2472  038D                     	;# 
  2473  038E                     	;# 
  2474  0390                     	;# 
  2475  0390                     	;# 
  2476  0391                     	;# 
  2477  0392                     	;# 
  2478  040C                     	;# 
  2479  040D                     	;# 
  2480  040E                     	;# 
  2481  040F                     	;# 
  2482  0410                     	;# 
  2483  0411                     	;# 
  2484  0416                     	;# 
  2485  0416                     	;# 
  2486  0417                     	;# 
  2487  0418                     	;# 
  2488  0418                     	;# 
  2489  0419                     	;# 
  2490  041A                     	;# 
  2491  041A                     	;# 
  2492  041B                     	;# 
  2493  041C                     	;# 
  2494  041C                     	;# 
  2495  041D                     	;# 
  2496  041E                     	;# 
  2497  041F                     	;# 
  2498  048C                     	;# 
  2499  048C                     	;# 
  2500  048D                     	;# 
  2501  048E                     	;# 
  2502  048F                     	;# 
  2503  048F                     	;# 
  2504  0490                     	;# 
  2505  0491                     	;# 
  2506  0492                     	;# 
  2507  0492                     	;# 
  2508  0493                     	;# 
  2509  0494                     	;# 
  2510  0495                     	;# 
  2511  0495                     	;# 
  2512  0496                     	;# 
  2513  0497                     	;# 
  2514  0498                     	;# 
  2515  0499                     	;# 
  2516  049A                     	;# 
  2517  049B                     	;# 
  2518  049C                     	;# 
  2519  049D                     	;# 
  2520  050C                     	;# 
  2521  050C                     	;# 
  2522  050D                     	;# 
  2523  050E                     	;# 
  2524  050F                     	;# 
  2525  050F                     	;# 
  2526  0510                     	;# 
  2527  0511                     	;# 
  2528  0512                     	;# 
  2529  0512                     	;# 
  2530  0513                     	;# 
  2531  0514                     	;# 
  2532  0515                     	;# 
  2533  0515                     	;# 
  2534  0516                     	;# 
  2535  0517                     	;# 
  2536  0518                     	;# 
  2537  0519                     	;# 
  2538  051A                     	;# 
  2539  051B                     	;# 
  2540  051C                     	;# 
  2541  051D                     	;# 
  2542  058C                     	;# 
  2543  058C                     	;# 
  2544  058D                     	;# 
  2545  058E                     	;# 
  2546  058F                     	;# 
  2547  058F                     	;# 
  2548  0590                     	;# 
  2549  0591                     	;# 
  2550  0592                     	;# 
  2551  0593                     	;# 
  2552  060C                     	;# 
  2553  060D                     	;# 
  2554  060E                     	;# 
  2555  060F                     	;# 
  2556  0610                     	;# 
  2557  0611                     	;# 
  2558  0612                     	;# 
  2559  0613                     	;# 
  2560  0614                     	;# 
  2561  0616                     	;# 
  2562  0617                     	;# 
  2563  0618                     	;# 
  2564  0619                     	;# 
  2565  061A                     	;# 
  2566  061B                     	;# 
  2567  061C                     	;# 
  2568  061D                     	;# 
  2569  061E                     	;# 
  2570  068C                     	;# 
  2571  068D                     	;# 
  2572  068E                     	;# 
  2573  068F                     	;# 
  2574  0690                     	;# 
  2575  0691                     	;# 
  2576  0692                     	;# 
  2577  0693                     	;# 
  2578  0694                     	;# 
  2579  070C                     	;# 
  2580  070D                     	;# 
  2581  070E                     	;# 
  2582  070F                     	;# 
  2583  0710                     	;# 
  2584  0711                     	;# 
  2585  0712                     	;# 
  2586  0713                     	;# 
  2587  0714                     	;# 
  2588  0716                     	;# 
  2589  0717                     	;# 
  2590  0718                     	;# 
  2591  0719                     	;# 
  2592  071A                     	;# 
  2593  071B                     	;# 
  2594  071C                     	;# 
  2595  071D                     	;# 
  2596  071E                     	;# 
  2597  0796                     	;# 
  2598  0797                     	;# 
  2599  0798                     	;# 
  2600  0799                     	;# 
  2601  079A                     	;# 
  2602  079B                     	;# 
  2603  080C                     	;# 
  2604  080D                     	;# 
  2605  080E                     	;# 
  2606  080F                     	;# 
  2607  0810                     	;# 
  2608  0811                     	;# 
  2609  0812                     	;# 
  2610  0813                     	;# 
  2611  0814                     	;# 
  2612  081A                     	;# 
  2613  081B                     	;# 
  2614  081C                     	;# 
  2615  081D                     	;# 
  2616  081E                     	;# 
  2617  081F                     	;# 
  2618  088C                     	;# 
  2619  088D                     	;# 
  2620  088E                     	;# 
  2621  088F                     	;# 
  2622  0890                     	;# 
  2623  0891                     	;# 
  2624  0892                     	;# 
  2625  0893                     	;# 
  2626  0895                     	;# 
  2627  0896                     	;# 
  2628  0897                     	;# 
  2629  0898                     	;# 
  2630  0899                     	;# 
  2631  089A                     	;# 
  2632  089B                     	;# 
  2633  090C                     	;# 
  2634  090E                     	;# 
  2635  090F                     	;# 
  2636  091F                     	;# 
  2637  098F                     	;# 
  2638  098F                     	;# 
  2639  0990                     	;# 
  2640  0991                     	;# 
  2641  0992                     	;# 
  2642  0993                     	;# 
  2643  0994                     	;# 
  2644  0995                     	;# 
  2645  0996                     	;# 
  2646  0997                     	;# 
  2647  0E0F                     	;# 
  2648  0E10                     	;# 
  2649  0E11                     	;# 
  2650  0E12                     	;# 
  2651  0E13                     	;# 
  2652  0E14                     	;# 
  2653  0E15                     	;# 
  2654  0E16                     	;# 
  2655  0E17                     	;# 
  2656  0E18                     	;# 
  2657  0E19                     	;# 
  2658  0E1A                     	;# 
  2659  0E1B                     	;# 
  2660  0E1C                     	;# 
  2661  0E1D                     	;# 
  2662  0E1E                     	;# 
  2663  0E1F                     	;# 
  2664  0E20                     	;# 
  2665  0E21                     	;# 
  2666  0E22                     	;# 
  2667  0E23                     	;# 
  2668  0E24                     	;# 
  2669  0E25                     	;# 
  2670  0E26                     	;# 
  2671  0E27                     	;# 
  2672  0E28                     	;# 
  2673  0E29                     	;# 
  2674  0E2A                     	;# 
  2675  0E2B                     	;# 
  2676  0E2C                     	;# 
  2677  0E2D                     	;# 
  2678  0E2E                     	;# 
  2679  0E2F                     	;# 
  2680  0E30                     	;# 
  2681  0E31                     	;# 
  2682  0E32                     	;# 
  2683  0E33                     	;# 
  2684  0E34                     	;# 
  2685  0E35                     	;# 
  2686  0E36                     	;# 
  2687  0E37                     	;# 
  2688  0E8F                     	;# 
  2689  0E90                     	;# 
  2690  0E91                     	;# 
  2691  0E92                     	;# 
  2692  0E93                     	;# 
  2693  0E94                     	;# 
  2694  0E95                     	;# 
  2695  0E96                     	;# 
  2696  0E97                     	;# 
  2697  0E9C                     	;# 
  2698  0E9D                     	;# 
  2699  0E9E                     	;# 
  2700  0EA1                     	;# 
  2701  0EA2                     	;# 
  2702  0EA3                     	;# 
  2703  0EA4                     	;# 
  2704  0EA5                     	;# 
  2705  0EA9                     	;# 
  2706  0EAA                     	;# 
  2707  0EAB                     	;# 
  2708  0EAC                     	;# 
  2709  0EB1                     	;# 
  2710  0EB2                     	;# 
  2711  0EB3                     	;# 
  2712  0EB8                     	;# 
  2713  0EB9                     	;# 
  2714  0EBA                     	;# 
  2715  0EBB                     	;# 
  2716  0EBC                     	;# 
  2717  0EBD                     	;# 
  2718  0EBE                     	;# 
  2719  0EC3                     	;# 
  2720  0EC5                     	;# 
  2721  0EC6                     	;# 
  2722  0EC7                     	;# 
  2723  0EC8                     	;# 
  2724  0EC9                     	;# 
  2725  0ECA                     	;# 
  2726  0ECB                     	;# 
  2727  0ECC                     	;# 
  2728  0F10                     	;# 
  2729  0F11                     	;# 
  2730  0F12                     	;# 
  2731  0F13                     	;# 
  2732  0F14                     	;# 
  2733  0F15                     	;# 
  2734  0F16                     	;# 
  2735  0F17                     	;# 
  2736  0F18                     	;# 
  2737  0F19                     	;# 
  2738  0F1A                     	;# 
  2739  0F1B                     	;# 
  2740  0F1C                     	;# 
  2741  0F1D                     	;# 
  2742  0F1E                     	;# 
  2743  0F1F                     	;# 
  2744  0F20                     	;# 
  2745  0F21                     	;# 
  2746  0F22                     	;# 
  2747  0F23                     	;# 
  2748  0F24                     	;# 
  2749  0F25                     	;# 
  2750  0F26                     	;# 
  2751  0F27                     	;# 
  2752  0F28                     	;# 
  2753  0F29                     	;# 
  2754  0F2A                     	;# 
  2755  0F2B                     	;# 
  2756  0F2C                     	;# 
  2757  0F2D                     	;# 
  2758  0F2E                     	;# 
  2759  0F2F                     	;# 
  2760  0F30                     	;# 
  2761  0F31                     	;# 
  2762  0F32                     	;# 
  2763  0F38                     	;# 
  2764  0F39                     	;# 
  2765  0F3A                     	;# 
  2766  0F3B                     	;# 
  2767  0F3C                     	;# 
  2768  0F3D                     	;# 
  2769  0F3E                     	;# 
  2770  0F3F                     	;# 
  2771  0F40                     	;# 
  2772  0F41                     	;# 
  2773  0F43                     	;# 
  2774  0F44                     	;# 
  2775  0F45                     	;# 
  2776  0F46                     	;# 
  2777  0F47                     	;# 
  2778  0F48                     	;# 
  2779  0F49                     	;# 
  2780  0F4A                     	;# 
  2781  0F4B                     	;# 
  2782  0F4C                     	;# 
  2783  0F4E                     	;# 
  2784  0F4F                     	;# 
  2785  0F50                     	;# 
  2786  0F51                     	;# 
  2787  0F52                     	;# 
  2788  0F53                     	;# 
  2789  0F54                     	;# 
  2790  0F55                     	;# 
  2791  0F56                     	;# 
  2792  0F57                     	;# 
  2793  0F59                     	;# 
  2794  0F5A                     	;# 
  2795  0F5B                     	;# 
  2796  0F5C                     	;# 
  2797  0F5D                     	;# 
  2798  0F61                     	;# 
  2799  0F62                     	;# 
  2800  0F64                     	;# 
  2801  0F65                     	;# 
  2802  0F66                     	;# 
  2803  0F67                     	;# 
  2804  0F68                     	;# 
  2805  0F69                     	;# 
  2806  0F6A                     	;# 
  2807  0F6B                     	;# 
  2808  0F6C                     	;# 
  2809  0F6D                     	;# 
  2810  0FE4                     	;# 
  2811  0FE5                     	;# 
  2812  0FE6                     	;# 
  2813  0FE7                     	;# 
  2814  0FE8                     	;# 
  2815  0FE9                     	;# 
  2816  0FEA                     	;# 
  2817  0FEB                     	;# 
  2818  0FED                     	;# 
  2819  0FEE                     	;# 
  2820  0FEF                     	;# 
  2821  0000                     	;# 
  2822  0001                     	;# 
  2823  0002                     	;# 
  2824  0003                     	;# 
  2825  0004                     	;# 
  2826  0005                     	;# 
  2827  0006                     	;# 
  2828  0007                     	;# 
  2829  0008                     	;# 
  2830  0009                     	;# 
  2831  000A                     	;# 
  2832  000B                     	;# 
  2833  000C                     	;# 
  2834  000D                     	;# 
  2835  000E                     	;# 
  2836  000F                     	;# 
  2837  0010                     	;# 
  2838  0011                     	;# 
  2839  0012                     	;# 
  2840  0013                     	;# 
  2841  0014                     	;# 
  2842  0015                     	;# 
  2843  0016                     	;# 
  2844  0017                     	;# 
  2845  0018                     	;# 
  2846  0019                     	;# 
  2847  001A                     	;# 
  2848  001C                     	;# 
  2849  001C                     	;# 
  2850  001D                     	;# 
  2851  001D                     	;# 
  2852  001E                     	;# 
  2853  001F                     	;# 
  2854  008C                     	;# 
  2855  008C                     	;# 
  2856  008D                     	;# 
  2857  008E                     	;# 
  2858  008E                     	;# 
  2859  008F                     	;# 
  2860  0090                     	;# 
  2861  0090                     	;# 
  2862  0091                     	;# 
  2863  0093                     	;# 
  2864  0094                     	;# 
  2865  0095                     	;# 
  2866  0096                     	;# 
  2867  0097                     	;# 
  2868  0098                     	;# 
  2869  0099                     	;# 
  2870  009A                     	;# 
  2871  009B                     	;# 
  2872  009C                     	;# 
  2873  009D                     	;# 
  2874  009E                     	;# 
  2875  010C                     	;# 
  2876  010D                     	;# 
  2877  010E                     	;# 
  2878  010E                     	;# 
  2879  010F                     	;# 
  2880  0110                     	;# 
  2881  0110                     	;# 
  2882  0111                     	;# 
  2883  0112                     	;# 
  2884  0112                     	;# 
  2885  0113                     	;# 
  2886  0114                     	;# 
  2887  0114                     	;# 
  2888  0115                     	;# 
  2889  0116                     	;# 
  2890  0116                     	;# 
  2891  0117                     	;# 
  2892  0119                     	;# 
  2893  0119                     	;# 
  2894  0119                     	;# 
  2895  011A                     	;# 
  2896  011A                     	;# 
  2897  011A                     	;# 
  2898  011B                     	;# 
  2899  011B                     	;# 
  2900  011B                     	;# 
  2901  011B                     	;# 
  2902  011B                     	;# 
  2903  011C                     	;# 
  2904  011C                     	;# 
  2905  011C                     	;# 
  2906  011D                     	;# 
  2907  011D                     	;# 
  2908  011D                     	;# 
  2909  011E                     	;# 
  2910  011E                     	;# 
  2911  011E                     	;# 
  2912  011F                     	;# 
  2913  011F                     	;# 
  2914  011F                     	;# 
  2915  011F                     	;# 
  2916  011F                     	;# 
  2917  018C                     	;# 
  2918  018D                     	;# 
  2919  018E                     	;# 
  2920  018F                     	;# 
  2921  0190                     	;# 
  2922  0191                     	;# 
  2923  0192                     	;# 
  2924  0196                     	;# 
  2925  0197                     	;# 
  2926  0198                     	;# 
  2927  0199                     	;# 
  2928  019A                     	;# 
  2929  019B                     	;# 
  2930  019C                     	;# 
  2931  020C                     	;# 
  2932  020C                     	;# 
  2933  020D                     	;# 
  2934  020E                     	;# 
  2935  020F                     	;# 
  2936  020F                     	;# 
  2937  0210                     	;# 
  2938  0210                     	;# 
  2939  0211                     	;# 
  2940  0211                     	;# 
  2941  0212                     	;# 
  2942  0212                     	;# 
  2943  0213                     	;# 
  2944  0214                     	;# 
  2945  0215                     	;# 
  2946  0215                     	;# 
  2947  0216                     	;# 
  2948  0216                     	;# 
  2949  0217                     	;# 
  2950  0217                     	;# 
  2951  0218                     	;# 
  2952  0218                     	;# 
  2953  0219                     	;# 
  2954  021A                     	;# 
  2955  021B                     	;# 
  2956  021B                     	;# 
  2957  021C                     	;# 
  2958  021C                     	;# 
  2959  021D                     	;# 
  2960  021D                     	;# 
  2961  021E                     	;# 
  2962  021F                     	;# 
  2963  028C                     	;# 
  2964  028C                     	;# 
  2965  028D                     	;# 
  2966  028D                     	;# 
  2967  028E                     	;# 
  2968  028F                     	;# 
  2969  0290                     	;# 
  2970  0290                     	;# 
  2971  0291                     	;# 
  2972  0292                     	;# 
  2973  0292                     	;# 
  2974  0293                     	;# 
  2975  0293                     	;# 
  2976  0294                     	;# 
  2977  0295                     	;# 
  2978  0296                     	;# 
  2979  0296                     	;# 
  2980  0297                     	;# 
  2981  0298                     	;# 
  2982  0298                     	;# 
  2983  0299                     	;# 
  2984  0299                     	;# 
  2985  029A                     	;# 
  2986  029B                     	;# 
  2987  029C                     	;# 
  2988  029C                     	;# 
  2989  029D                     	;# 
  2990  030C                     	;# 
  2991  030C                     	;# 
  2992  030D                     	;# 
  2993  030E                     	;# 
  2994  030F                     	;# 
  2995  0310                     	;# 
  2996  0310                     	;# 
  2997  0311                     	;# 
  2998  0312                     	;# 
  2999  0313                     	;# 
  3000  0314                     	;# 
  3001  0314                     	;# 
  3002  0315                     	;# 
  3003  0316                     	;# 
  3004  0317                     	;# 
  3005  0318                     	;# 
  3006  0318                     	;# 
  3007  0319                     	;# 
  3008  031A                     	;# 
  3009  031B                     	;# 
  3010  031C                     	;# 
  3011  031C                     	;# 
  3012  031D                     	;# 
  3013  031E                     	;# 
  3014  031F                     	;# 
  3015  038C                     	;# 
  3016  038C                     	;# 
  3017  038D                     	;# 
  3018  038E                     	;# 
  3019  0390                     	;# 
  3020  0390                     	;# 
  3021  0391                     	;# 
  3022  0392                     	;# 
  3023  040C                     	;# 
  3024  040D                     	;# 
  3025  040E                     	;# 
  3026  040F                     	;# 
  3027  0410                     	;# 
  3028  0411                     	;# 
  3029  0416                     	;# 
  3030  0416                     	;# 
  3031  0417                     	;# 
  3032  0418                     	;# 
  3033  0418                     	;# 
  3034  0419                     	;# 
  3035  041A                     	;# 
  3036  041A                     	;# 
  3037  041B                     	;# 
  3038  041C                     	;# 
  3039  041C                     	;# 
  3040  041D                     	;# 
  3041  041E                     	;# 
  3042  041F                     	;# 
  3043  048C                     	;# 
  3044  048C                     	;# 
  3045  048D                     	;# 
  3046  048E                     	;# 
  3047  048F                     	;# 
  3048  048F                     	;# 
  3049  0490                     	;# 
  3050  0491                     	;# 
  3051  0492                     	;# 
  3052  0492                     	;# 
  3053  0493                     	;# 
  3054  0494                     	;# 
  3055  0495                     	;# 
  3056  0495                     	;# 
  3057  0496                     	;# 
  3058  0497                     	;# 
  3059  0498                     	;# 
  3060  0499                     	;# 
  3061  049A                     	;# 
  3062  049B                     	;# 
  3063  049C                     	;# 
  3064  049D                     	;# 
  3065  050C                     	;# 
  3066  050C                     	;# 
  3067  050D                     	;# 
  3068  050E                     	;# 
  3069  050F                     	;# 
  3070  050F                     	;# 
  3071  0510                     	;# 
  3072  0511                     	;# 
  3073  0512                     	;# 
  3074  0512                     	;# 
  3075  0513                     	;# 
  3076  0514                     	;# 
  3077  0515                     	;# 
  3078  0515                     	;# 
  3079  0516                     	;# 
  3080  0517                     	;# 
  3081  0518                     	;# 
  3082  0519                     	;# 
  3083  051A                     	;# 
  3084  051B                     	;# 
  3085  051C                     	;# 
  3086  051D                     	;# 
  3087  058C                     	;# 
  3088  058C                     	;# 
  3089  058D                     	;# 
  3090  058E                     	;# 
  3091  058F                     	;# 
  3092  058F                     	;# 
  3093  0590                     	;# 
  3094  0591                     	;# 
  3095  0592                     	;# 
  3096  0593                     	;# 
  3097  060C                     	;# 
  3098  060D                     	;# 
  3099  060E                     	;# 
  3100  060F                     	;# 
  3101  0610                     	;# 
  3102  0611                     	;# 
  3103  0612                     	;# 
  3104  0613                     	;# 
  3105  0614                     	;# 
  3106  0616                     	;# 
  3107  0617                     	;# 
  3108  0618                     	;# 
  3109  0619                     	;# 
  3110  061A                     	;# 
  3111  061B                     	;# 
  3112  061C                     	;# 
  3113  061D                     	;# 
  3114  061E                     	;# 
  3115  068C                     	;# 
  3116  068D                     	;# 
  3117  068E                     	;# 
  3118  068F                     	;# 
  3119  0690                     	;# 
  3120  0691                     	;# 
  3121  0692                     	;# 
  3122  0693                     	;# 
  3123  0694                     	;# 
  3124  070C                     	;# 
  3125  070D                     	;# 
  3126  070E                     	;# 
  3127  070F                     	;# 
  3128  0710                     	;# 
  3129  0711                     	;# 
  3130  0712                     	;# 
  3131  0713                     	;# 
  3132  0714                     	;# 
  3133  0716                     	;# 
  3134  0717                     	;# 
  3135  0718                     	;# 
  3136  0719                     	;# 
  3137  071A                     	;# 
  3138  071B                     	;# 
  3139  071C                     	;# 
  3140  071D                     	;# 
  3141  071E                     	;# 
  3142  0796                     	;# 
  3143  0797                     	;# 
  3144  0798                     	;# 
  3145  0799                     	;# 
  3146  079A                     	;# 
  3147  079B                     	;# 
  3148  080C                     	;# 
  3149  080D                     	;# 
  3150  080E                     	;# 
  3151  080F                     	;# 
  3152  0810                     	;# 
  3153  0811                     	;# 
  3154  0812                     	;# 
  3155  0813                     	;# 
  3156  0814                     	;# 
  3157  081A                     	;# 
  3158  081B                     	;# 
  3159  081C                     	;# 
  3160  081D                     	;# 
  3161  081E                     	;# 
  3162  081F                     	;# 
  3163  088C                     	;# 
  3164  088D                     	;# 
  3165  088E                     	;# 
  3166  088F                     	;# 
  3167  0890                     	;# 
  3168  0891                     	;# 
  3169  0892                     	;# 
  3170  0893                     	;# 
  3171  0895                     	;# 
  3172  0896                     	;# 
  3173  0897                     	;# 
  3174  0898                     	;# 
  3175  0899                     	;# 
  3176  089A                     	;# 
  3177  089B                     	;# 
  3178  090C                     	;# 
  3179  090E                     	;# 
  3180  090F                     	;# 
  3181  091F                     	;# 
  3182  098F                     	;# 
  3183  098F                     	;# 
  3184  0990                     	;# 
  3185  0991                     	;# 
  3186  0992                     	;# 
  3187  0993                     	;# 
  3188  0994                     	;# 
  3189  0995                     	;# 
  3190  0996                     	;# 
  3191  0997                     	;# 
  3192  0E0F                     	;# 
  3193  0E10                     	;# 
  3194  0E11                     	;# 
  3195  0E12                     	;# 
  3196  0E13                     	;# 
  3197  0E14                     	;# 
  3198  0E15                     	;# 
  3199  0E16                     	;# 
  3200  0E17                     	;# 
  3201  0E18                     	;# 
  3202  0E19                     	;# 
  3203  0E1A                     	;# 
  3204  0E1B                     	;# 
  3205  0E1C                     	;# 
  3206  0E1D                     	;# 
  3207  0E1E                     	;# 
  3208  0E1F                     	;# 
  3209  0E20                     	;# 
  3210  0E21                     	;# 
  3211  0E22                     	;# 
  3212  0E23                     	;# 
  3213  0E24                     	;# 
  3214  0E25                     	;# 
  3215  0E26                     	;# 
  3216  0E27                     	;# 
  3217  0E28                     	;# 
  3218  0E29                     	;# 
  3219  0E2A                     	;# 
  3220  0E2B                     	;# 
  3221  0E2C                     	;# 
  3222  0E2D                     	;# 
  3223  0E2E                     	;# 
  3224  0E2F                     	;# 
  3225  0E30                     	;# 
  3226  0E31                     	;# 
  3227  0E32                     	;# 
  3228  0E33                     	;# 
  3229  0E34                     	;# 
  3230  0E35                     	;# 
  3231  0E36                     	;# 
  3232  0E37                     	;# 
  3233  0E8F                     	;# 
  3234  0E90                     	;# 
  3235  0E91                     	;# 
  3236  0E92                     	;# 
  3237  0E93                     	;# 
  3238  0E94                     	;# 
  3239  0E95                     	;# 
  3240  0E96                     	;# 
  3241  0E97                     	;# 
  3242  0E9C                     	;# 
  3243  0E9D                     	;# 
  3244  0E9E                     	;# 
  3245  0EA1                     	;# 
  3246  0EA2                     	;# 
  3247  0EA3                     	;# 
  3248  0EA4                     	;# 
  3249  0EA5                     	;# 
  3250  0EA9                     	;# 
  3251  0EAA                     	;# 
  3252  0EAB                     	;# 
  3253  0EAC                     	;# 
  3254  0EB1                     	;# 
  3255  0EB2                     	;# 
  3256  0EB3                     	;# 
  3257  0EB8                     	;# 
  3258  0EB9                     	;# 
  3259  0EBA                     	;# 
  3260  0EBB                     	;# 
  3261  0EBC                     	;# 
  3262  0EBD                     	;# 
  3263  0EBE                     	;# 
  3264  0EC3                     	;# 
  3265  0EC5                     	;# 
  3266  0EC6                     	;# 
  3267  0EC7                     	;# 
  3268  0EC8                     	;# 
  3269  0EC9                     	;# 
  3270  0ECA                     	;# 
  3271  0ECB                     	;# 
  3272  0ECC                     	;# 
  3273  0F10                     	;# 
  3274  0F11                     	;# 
  3275  0F12                     	;# 
  3276  0F13                     	;# 
  3277  0F14                     	;# 
  3278  0F15                     	;# 
  3279  0F16                     	;# 
  3280  0F17                     	;# 
  3281  0F18                     	;# 
  3282  0F19                     	;# 
  3283  0F1A                     	;# 
  3284  0F1B                     	;# 
  3285  0F1C                     	;# 
  3286  0F1D                     	;# 
  3287  0F1E                     	;# 
  3288  0F1F                     	;# 
  3289  0F20                     	;# 
  3290  0F21                     	;# 
  3291  0F22                     	;# 
  3292  0F23                     	;# 
  3293  0F24                     	;# 
  3294  0F25                     	;# 
  3295  0F26                     	;# 
  3296  0F27                     	;# 
  3297  0F28                     	;# 
  3298  0F29                     	;# 
  3299  0F2A                     	;# 
  3300  0F2B                     	;# 
  3301  0F2C                     	;# 
  3302  0F2D                     	;# 
  3303  0F2E                     	;# 
  3304  0F2F                     	;# 
  3305  0F30                     	;# 
  3306  0F31                     	;# 
  3307  0F32                     	;# 
  3308  0F38                     	;# 
  3309  0F39                     	;# 
  3310  0F3A                     	;# 
  3311  0F3B                     	;# 
  3312  0F3C                     	;# 
  3313  0F3D                     	;# 
  3314  0F3E                     	;# 
  3315  0F3F                     	;# 
  3316  0F40                     	;# 
  3317  0F41                     	;# 
  3318  0F43                     	;# 
  3319  0F44                     	;# 
  3320  0F45                     	;# 
  3321  0F46                     	;# 
  3322  0F47                     	;# 
  3323  0F48                     	;# 
  3324  0F49                     	;# 
  3325  0F4A                     	;# 
  3326  0F4B                     	;# 
  3327  0F4C                     	;# 
  3328  0F4E                     	;# 
  3329  0F4F                     	;# 
  3330  0F50                     	;# 
  3331  0F51                     	;# 
  3332  0F52                     	;# 
  3333  0F53                     	;# 
  3334  0F54                     	;# 
  3335  0F55                     	;# 
  3336  0F56                     	;# 
  3337  0F57                     	;# 
  3338  0F59                     	;# 
  3339  0F5A                     	;# 
  3340  0F5B                     	;# 
  3341  0F5C                     	;# 
  3342  0F5D                     	;# 
  3343  0F61                     	;# 
  3344  0F62                     	;# 
  3345  0F64                     	;# 
  3346  0F65                     	;# 
  3347  0F66                     	;# 
  3348  0F67                     	;# 
  3349  0F68                     	;# 
  3350  0F69                     	;# 
  3351  0F6A                     	;# 
  3352  0F6B                     	;# 
  3353  0F6C                     	;# 
  3354  0F6D                     	;# 
  3355  0FE4                     	;# 
  3356  0FE5                     	;# 
  3357  0FE6                     	;# 
  3358  0FE7                     	;# 
  3359  0FE8                     	;# 
  3360  0FE9                     	;# 
  3361  0FEA                     	;# 
  3362  0FEB                     	;# 
  3363  0FED                     	;# 
  3364  0FEE                     	;# 
  3365  0FEF                     	;_lutRY
  3366                           
  3367                           	psect	idataCOMMON
  3368  0F6E                     __pidataCOMMON:
  3369                           
  3370                           ;initializer for _analogMode
  3371  0F6E  3401               	retlw	1
  3372                           
  3373                           ;initializer for _digitalStateSecond
  3374  0F6F  34FF               	retlw	255
  3375                           
  3376                           ;initializer for _digitalStateFirst
  3377  0F70  34FF               	retlw	255
  3378                           
  3379                           	psect	idataBANK0
  3380  07E5                     __pidataBANK0:
  3381                           
  3382                           ;initializer for _responseLength
  3383  07E5  3409               	retlw	9
  3384                           
  3385                           ;initializer for _debounceLoops
  3386  07E6  3403               	retlw	3
  3387                           
  3388                           ;initializer for _lyData
  3389  07E7  34F7               	retlw	247
  3390                           
  3391                           ;initializer for _lxData
  3392  07E8  34F7               	retlw	247
  3393                           
  3394                           ;initializer for _ryData
  3395  07E9  34F7               	retlw	247
  3396                           
  3397                           ;initializer for _rxData
  3398  07EA  34F7               	retlw	247
  3399                           
  3400                           ;initializer for _response
  3401  07EB  349E               	retlw	158
  3402  07EC  345A               	retlw	90
  3403  07ED  3400               	retlw	0
  3404  07EE  3400               	retlw	0
  3405  07EF  3400               	retlw	0
  3406  07F0  3400               	retlw	0
  3407  07F1  3400               	retlw	0
  3408  07F2  3400               	retlw	0
  3409  07F3  3400               	retlw	0
  3410  07F4  3400               	retlw	0
  3411  07F5  3400               	retlw	0
  3412  07F6  3400               	retlw	0
  3413  07F7  3400               	retlw	0
  3414  07F8  3400               	retlw	0
  3415  07F9  3400               	retlw	0
  3416  07FA  3400               	retlw	0
  3417  07FB  3400               	retlw	0
  3418  07FC  3400               	retlw	0
  3419  07FD  3400               	retlw	0
  3420  07FE  3400               	retlw	0
  3421  0011                     _TRISAbits	set	17
  3422  0013                     _TRISCbits	set	19
  3423  0015                     _TRISE	set	21
  3424  0014                     _TRISD	set	20
  3425  0013                     _TRISC	set	19
  3426  0012                     _TRISB	set	18
  3427  0011                     _TRISA	set	17
  3428  000B                     _INTCONbits	set	11
  3429  006B                     _RB3	set	107
  3430  006A                     _RB2	set	106
  3431  006D                     _RB5	set	109
  3432  006C                     _RB4	set	108
  3433  0061                     _RA1	set	97
  3434  0062                     _RA2	set	98
  3435  0060                     _RA0	set	96
  3436  0063                     _RA3	set	99
  3437  006E                     _RB6	set	110
  3438  006F                     _RB7	set	111
  3439  0072                     _RC2	set	114
  3440  0078                     _RD0	set	120
  3441  0069                     _RB1	set	105
  3442  0068                     _RB0	set	104
  3443  0066                     _RA6	set	102
  3444  0067                     _RA7	set	103
  3445  0065                     _RA5	set	101
  3446  0064                     _RA4	set	100
  3447  007C                     _RD4	set	124
  3448  0098                     _ADCLK	set	152
  3449  009A                     _ADREF	set	154
  3450  0095                     _ADCON2	set	149
  3451  0094                     _ADCON1	set	148
  3452  0093                     _ADCON0	set	147
  3453  008C                     _ADRESL	set	140
  3454  008D                     _ADRESH	set	141
  3455  0093                     _ADCON0bits	set	147
  3456  009D                     _ADACQ	set	157
  3457  009C                     _ADPRE	set	156
  3458  009E                     _ADPCH	set	158
  3459  018F                     _SSP1STATbits	set	399
  3460  0190                     _SSP1CON1	set	400
  3461  018F                     _SSP1STAT	set	399
  3462  018C                     _SSP1BUF	set	396
  3463  38C8                     _SSP1IE	set	14536
  3464  3878                     _SSP1IF	set	14456
  3465  081F                     _NVMCON2	set	2079
  3466  081C                     _NVMDATL	set	2076
  3467  081A                     _NVMADRL	set	2074
  3468  081B                     _NVMADRH	set	2075
  3469  081E                     _NVMCON1bits	set	2078
  3470  0E8F                     _PPSLOCK	set	3727
  3471  0F25                     _RC5PPS	set	3877
  3472  0F65                     _WPUE	set	3941
  3473  0F5A                     _WPUD	set	3930
  3474  0F4F                     _WPUC	set	3919
  3475  0F44                     _WPUB	set	3908
  3476  0F39                     _WPUA	set	3897
  3477  0F64                     _ANSELE	set	3940
  3478  0F59                     _ANSELD	set	3929
  3479  0F4E                     _ANSELC	set	3918
  3480  0F43                     _ANSELB	set	3907
  3481  0F38                     _ANSELA	set	3896
  3482                           
  3483                           	psect	cinit
  3484  018A                     start_initialization:	
  3485                           ; #config settings
  3486                           
  3487  018A                     __initialization:	;BIGRAM
  3488                           
  3489                           ; Initialize objects allocated to COMMON
  3490  018A  318F  276E  3181   	fcall	__pidataCOMMON	;fetch initializer
  3491  018D  00F5               	movwf	__pdataCOMMON& (0+127)
  3492  018E  318F  276F  3181   	fcall	__pidataCOMMON+1	;fetch initializer
  3493  0191  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
  3494  0192  318F  2770  3181   	fcall	__pidataCOMMON+2	;fetch initializer
  3495  0195  00F7               	movwf	(__pdataCOMMON+2)& (0+127)
  3496                           
  3497                           ; Initialize objects allocated to BANK0
  3498  0196  30E5               	movlw	low __pidataBANK0
  3499  0197  0084               	movwf	4
  3500  0198  3087               	movlw	(high __pidataBANK0)| (0+128)
  3501  0199  0085               	movwf	5
  3502  019A  304C               	movlw	low __pdataBANK0
  3503  019B  0086               	movwf	6
  3504  019C  3000               	movlw	high __pdataBANK0
  3505  019D  0087               	movwf	7
  3506  019E  3000               	movlw	0
  3507  019F  00FF               	movwf	btemp+1
  3508  01A0  301A               	movlw	26
  3509  01A1  318F  27AE  3181   	fcall	init_ram
  3510                           
  3511                           ; Clear objects allocated to BIGRAM
  3512  01A4  30F0               	movlw	low (0+9200)
  3513  01A5  0084               	movwf	4
  3514  01A6  3023               	movlw	high (0+9200)
  3515  01A7  0085               	movwf	5
  3516  01A8  3000               	movlw	0
  3517  01A9  00FE               	movwf	btemp
  3518  01AA  3004               	movlw	4
  3519  01AB  00FF               	movwf	btemp+1
  3520  01AC  318F  27A2  3181   	fcall	clear_ram0
  3521                           
  3522                           ; Clear objects allocated to COMMON
  3523  01AF  01F8               	clrf	__pbssCOMMON& (0+127)
  3524  01B0  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  3525                           
  3526                           ; Clear objects allocated to BANK0
  3527  01B1  3066               	movlw	low __pbssBANK0
  3528  01B2  0084               	movwf	4
  3529  01B3  3000               	movlw	high __pbssBANK0
  3530  01B4  0085               	movwf	5
  3531  01B5  300A               	movlw	10
  3532  01B6  00FE               	movwf	btemp
  3533  01B7  3000               	movlw	0
  3534  01B8  00FF               	movwf	btemp+1
  3535  01B9  318F  27A2  3181   	fcall	clear_ram0
  3536                           
  3537                           ; Clear objects allocated to BANK1
  3538  01BC  30A0               	movlw	low __pbssBANK1
  3539  01BD  0084               	movwf	4
  3540  01BE  3000               	movlw	high __pbssBANK1
  3541  01BF  0085               	movwf	5
  3542  01C0  3038               	movlw	56
  3543  01C1  00FE               	movwf	btemp
  3544  01C2  3000               	movlw	0
  3545  01C3  00FF               	movwf	btemp+1
  3546  01C4  318F  27A2  3181   	fcall	clear_ram0
  3547  01C7                     end_of_initialization:	
  3548                           ;End of C runtime variable initialization code
  3549                           
  3550  01C7                     __end_of__initialization:
  3551  01C7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3552  01C8  0020               	movlb	0
  3553  01C9  3186  2EB8         	ljmp	_main	;jump to C main() function
  3554                           
  3555                           	psect	bssCOMMON
  3556  0078                     __pbssCOMMON:
  3557  0078                     _cmdCounter:
  3558  0078                     	ds	1
  3559  0079                     _index:
  3560  0079                     	ds	1
  3561                           
  3562                           	psect	dataCOMMON
  3563  0075                     __pdataCOMMON:
  3564  0075                     _analogMode:
  3565  0075                     	ds	1
  3566  0076                     _digitalStateSecond:
  3567  0076                     	ds	1
  3568  0077                     _digitalStateFirst:
  3569  0077                     	ds	1
  3570                           
  3571                           	psect	bssBANK0
  3572  0066                     __pbssBANK0:
  3573  0066                     _analogStateSecond:
  3574  0066                     	ds	8
  3575  006E                     _previousCmd:
  3576  006E                     	ds	1
  3577  006F                     _escapeMode:
  3578  006F                     	ds	1
  3579                           
  3580                           	psect	dataBANK0
  3581  004C                     __pdataBANK0:
  3582  004C                     _responseLength:
  3583  004C                     	ds	1
  3584  004D                     _debounceLoops:
  3585  004D                     	ds	1
  3586  004E                     _lyData:
  3587  004E                     	ds	1
  3588  004F                     _lxData:
  3589  004F                     	ds	1
  3590  0050                     _ryData:
  3591  0050                     	ds	1
  3592  0051                     _rxData:
  3593  0051                     	ds	1
  3594  0052                     _response:
  3595  0052                     	ds	20
  3596                           
  3597                           	psect	bssBANK1
  3598  00A0                     __pbssBANK1:
  3599  00A0                     _IndexDigitalByte2:
  3600  00A0                     	ds	8
  3601  00A8                     _IndexDigitalByte1:
  3602  00A8                     	ds	8
  3603  00B0                     _PreviousDigitalByte2:
  3604  00B0                     	ds	8
  3605  00B8                     _PreviousDigitalByte1:
  3606  00B8                     	ds	8
  3607  00C0                     _DigitalControllerByte2:
  3608  00C0                     	ds	8
  3609  00C8                     _DigitalControllerByte1:
  3610  00C8                     	ds	8
  3611  00D0                     _analogStateFirst:
  3612  00D0                     	ds	8
  3613                           
  3614                           	psect	inittext
  3615  0FAE                     init_ram:
  3616  0FAE  00FE               	movwf	btemp
  3617  0FAF                     initloop:
  3618  0FAF  0012               	moviw fsr0++
  3619  0FB0  001E               	movwi fsr1++
  3620  0FB1  3001               	movlw	1
  3621  0FB2  02FE               	subwf	btemp,f
  3622  0FB3  3000               	movlw	0
  3623  0FB4  3BFF               	subwfb	btemp+1,f
  3624  0FB5  087F               	movf	btemp+1,w
  3625  0FB6  047E               	iorwf	btemp,w
  3626  0FB7  1D03               	skipz
  3627  0FB8  2FAF               	goto	initloop
  3628  0FB9  3400               	retlw	0
  3629                           
  3630                           	psect	clrtext
  3631  0FA2                     clear_ram0:	
  3632                           ;	Called with FSR0 containing the base address, and
  3633                           ;	btemp/btemp+1 has the size to clear
  3634                           
  3635  0FA2  0064               	clrwdt	;clear the watchdog before getting into this loop
  3636  0FA3                     clrloop0:
  3637  0FA3  0180               	clrf	0	;clear RAM location pointed to by FSR
  3638  0FA4  3101               	addfsr 0,1
  3639  0FA5  3001               	movlw	1
  3640  0FA6  02FE               	subwf	btemp,f
  3641  0FA7  3000               	movlw	0
  3642  0FA8  3BFF               	subwfb	btemp+1,f
  3643  0FA9  087F               	movf	btemp+1,w
  3644  0FAA  047E               	iorwf	btemp,w
  3645  0FAB  1D03               	skipz
  3646  0FAC  2FA3               	goto	clrloop0	;have we reached the end yet?
  3647  0FAD  3400               	retlw	0	;all done for this memory range, return
  3648                           
  3649                           	psect	cstackBANK1
  3650  00D8                     __pcstackBANK1:
  3651  00D8                     ??_main:
  3652                           
  3653                           ; 1 bytes @ 0x0
  3654  00D8                     	ds	1
  3655  00D9                     main@slaveSelectStatePrev:
  3656                           
  3657                           ; 1 bytes @ 0x1
  3658  00D9                     	ds	1
  3659  00DA                     main@count:
  3660                           
  3661                           ; 1 bytes @ 0x2
  3662  00DA                     	ds	1
  3663  00DB                     main@slaveSelect:
  3664                           
  3665                           ; 1 bytes @ 0x3
  3666  00DB                     	ds	1
  3667                           
  3668                           	psect	cstackCOMMON
  3669  0070                     __pcstackCOMMON:
  3670  0070                     ?_spiRead:
  3671  0070                     ??_spiRead:	
  3672                           ; 1 bytes @ 0x0
  3673                           
  3674  0070                     ?_spiWrite:	
  3675                           ; 1 bytes @ 0x0
  3676                           
  3677  0070                     ??_spiWrite:	
  3678                           ; 1 bytes @ 0x0
  3679                           
  3680  0070                     ?_picInit:	
  3681                           ; 1 bytes @ 0x0
  3682                           
  3683  0070                     ?_adcInit:	
  3684                           ; 1 bytes @ 0x0
  3685                           
  3686  0070                     ?_lutInit:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0070                     ?_readController:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_readControllerAnalog:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_eepromRead:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0070                     ?_nvmUnlock:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0070                     ?_pollController:	
  3702                           ; 1 bytes @ 0x0
  3703                           
  3704  0070                     ??_pollController:	
  3705                           ; 1 bytes @ 0x0
  3706                           
  3707  0070                     ?_PS2Command:	
  3708                           ; 1 bytes @ 0x0
  3709                           
  3710  0070                     ?_main:	
  3711                           ; 1 bytes @ 0x0
  3712                           
  3713  0070                     ?_reversebyte:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716  0070                     ?_ppsUnlock:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ?_ppsLock:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     ?_spiReceiveWait:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725  0070                     ??_spiReceiveWait:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728  0070                     spiWrite@dat:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731                           
  3732                           ; 1 bytes @ 0x0
  3733  0070                     	ds	1
  3734  0071                     pollController@response:
  3735                           
  3736                           ; 1 bytes @ 0x1
  3737  0071                     	ds	1
  3738  0072                     ??_PS2Command:
  3739                           
  3740                           ; 1 bytes @ 0x2
  3741  0072                     	ds	2
  3742  0074                     PS2Command@cmd:
  3743                           
  3744                           ; 1 bytes @ 0x4
  3745  0074                     	ds	1
  3746                           
  3747                           	psect	cstackBANK0
  3748  0020                     __pcstackBANK0:
  3749  0020                     ??_adcInit:
  3750  0020                     ??_readController:	
  3751                           ; 1 bytes @ 0x0
  3752                           
  3753  0020                     ?_eepromWrite:	
  3754                           ; 1 bytes @ 0x0
  3755                           
  3756  0020                     ??_eepromRead:	
  3757                           ; 1 bytes @ 0x0
  3758                           
  3759  0020                     ?_spiInit:	
  3760                           ; 1 bytes @ 0x0
  3761                           
  3762  0020                     ??_nvmUnlock:	
  3763                           ; 1 bytes @ 0x0
  3764                           
  3765  0020                     ??_reversebyte:	
  3766                           ; 1 bytes @ 0x0
  3767                           
  3768  0020                     ??_ppsUnlock:	
  3769                           ; 1 bytes @ 0x0
  3770                           
  3771  0020                     ??_ppsLock:	
  3772                           ; 1 bytes @ 0x0
  3773                           
  3774  0020                     ?_readADC:	
  3775                           ; 1 bytes @ 0x0
  3776                           
  3777  0020                     ?___wmul:	
  3778                           ; 2 bytes @ 0x0
  3779                           
  3780  0020                     spiInit@sDataSample:	
  3781                           ; 2 bytes @ 0x0
  3782                           
  3783  0020                     eepromWrite@data:	
  3784                           ; 1 bytes @ 0x0
  3785                           
  3786  0020                     readADC@channel:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0020                     ___wmul@multiplier:	
  3790                           ; 2 bytes @ 0x0
  3791                           
  3792                           
  3793                           ; 2 bytes @ 0x0
  3794  0020                     	ds	1
  3795  0021                     ??_eepromWrite:
  3796  0021                     spiInit@sClockIdle:	
  3797                           ; 1 bytes @ 0x1
  3798                           
  3799  0021                     eepromWrite@address:	
  3800                           ; 1 bytes @ 0x1
  3801                           
  3802  0021                     eepromRead@address:	
  3803                           ; 1 bytes @ 0x1
  3804                           
  3805                           
  3806                           ; 1 bytes @ 0x1
  3807  0021                     	ds	1
  3808  0022                     ??_readADC:
  3809  0022                     readController@analogMode:	
  3810                           ; 1 bytes @ 0x2
  3811                           
  3812  0022                     spiInit@sTransmitEdge:	
  3813                           ; 1 bytes @ 0x2
  3814                           
  3815  0022                     eepromWrite@interruptStatus:	
  3816                           ; 1 bytes @ 0x2
  3817                           
  3818  0022                     eepromRead@data:	
  3819                           ; 1 bytes @ 0x2
  3820                           
  3821  0022                     ___wmul@multiplicand:	
  3822                           ; 1 bytes @ 0x2
  3823                           
  3824                           
  3825                           ; 2 bytes @ 0x2
  3826  0022                     	ds	1
  3827  0023                     ??_spiInit:
  3828  0023                     reversebyte@byte:	
  3829                           ; 1 bytes @ 0x3
  3830                           
  3831  0023                     spiInit@sType:	
  3832                           ; 1 bytes @ 0x3
  3833                           
  3834                           
  3835                           ; 1 bytes @ 0x3
  3836  0023                     	ds	1
  3837  0024                     ??_picInit:
  3838  0024                     ??___wmul:	
  3839                           ; 1 bytes @ 0x4
  3840                           
  3841  0024                     ___wmul@product:	
  3842                           ; 1 bytes @ 0x4
  3843                           
  3844                           
  3845                           ; 2 bytes @ 0x4
  3846  0024                     	ds	2
  3847  0026                     ?___awdiv:
  3848  0026                     ___awdiv@divisor:	
  3849                           ; 2 bytes @ 0x6
  3850                           
  3851                           
  3852                           ; 2 bytes @ 0x6
  3853  0026                     	ds	2
  3854  0028                     ___awdiv@dividend:
  3855                           
  3856                           ; 2 bytes @ 0x8
  3857  0028                     	ds	1
  3858  0029                     ??_readControllerAnalog:
  3859                           
  3860                           ; 1 bytes @ 0x9
  3861  0029                     	ds	1
  3862  002A                     ??___awdiv:
  3863                           
  3864                           ; 1 bytes @ 0xA
  3865  002A                     	ds	1
  3866  002B                     ___awdiv@counter:
  3867                           
  3868                           ; 1 bytes @ 0xB
  3869  002B                     	ds	1
  3870  002C                     ___awdiv@sign:
  3871                           
  3872                           ; 1 bytes @ 0xC
  3873  002C                     	ds	1
  3874  002D                     ___awdiv@quotient:
  3875                           
  3876                           ; 2 bytes @ 0xD
  3877  002D                     	ds	2
  3878  002F                     ?_Map:
  3879  002F                     Map@x:	
  3880                           ; 1 bytes @ 0xF
  3881                           
  3882                           
  3883                           ; 2 bytes @ 0xF
  3884  002F                     	ds	2
  3885  0031                     Map@inMin:
  3886                           
  3887                           ; 2 bytes @ 0x11
  3888  0031                     	ds	2
  3889  0033                     Map@inMax:
  3890                           
  3891                           ; 2 bytes @ 0x13
  3892  0033                     	ds	2
  3893  0035                     Map@outMin:
  3894                           
  3895                           ; 2 bytes @ 0x15
  3896  0035                     	ds	2
  3897  0037                     Map@outMax:
  3898                           
  3899                           ; 2 bytes @ 0x17
  3900  0037                     	ds	2
  3901  0039                     ??_lutInit:
  3902  0039                     ??_Map:	
  3903                           ; 1 bytes @ 0x19
  3904                           
  3905                           
  3906                           ; 1 bytes @ 0x19
  3907  0039                     	ds	9
  3908  0042                     lutInit@lxMin:
  3909                           
  3910                           ; 1 bytes @ 0x22
  3911  0042                     	ds	1
  3912  0043                     lutInit@lxMax:
  3913                           
  3914                           ; 1 bytes @ 0x23
  3915  0043                     	ds	1
  3916  0044                     lutInit@lyMin:
  3917                           
  3918                           ; 1 bytes @ 0x24
  3919  0044                     	ds	1
  3920  0045                     lutInit@lyMax:
  3921                           
  3922                           ; 1 bytes @ 0x25
  3923  0045                     	ds	1
  3924  0046                     lutInit@rxMin:
  3925                           
  3926                           ; 1 bytes @ 0x26
  3927  0046                     	ds	1
  3928  0047                     lutInit@rxMax:
  3929                           
  3930                           ; 1 bytes @ 0x27
  3931  0047                     	ds	1
  3932  0048                     lutInit@ryMin:
  3933                           
  3934                           ; 1 bytes @ 0x28
  3935  0048                     	ds	1
  3936  0049                     lutInit@ryMax:
  3937                           
  3938                           ; 1 bytes @ 0x29
  3939  0049                     	ds	1
  3940  004A                     lutInit@position:
  3941                           
  3942                           ; 2 bytes @ 0x2A
  3943  004A                     	ds	2
  3944                           
  3945                           	psect	maintext
  3946  06B8                     __pmaintext:	
  3947 ;;
  3948 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3949 ;;
  3950 ;; *************** function _main *****************
  3951 ;; Defined at:
  3952 ;;		line 387 in file "main.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  slaveSelect     1    3[BANK1 ] unsigned char 
  3957 ;;  count           1    2[BANK1 ] unsigned char 
  3958 ;;  slaveSelectS    1    1[BANK1 ] unsigned char 
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : B1F/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3969 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3970 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3971 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3972 ;;Total ram usage:        4 bytes
  3973 ;; Hardware stack levels required when called:    6
  3974 ;; This function calls:
  3975 ;;		_adcInit
  3976 ;;		_lutInit
  3977 ;;		_picInit
  3978 ;;		_readController
  3979 ;;		_readControllerAnalog
  3980 ;; This function is called by:
  3981 ;;		Startup code after reset
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           
  3986                           ;psect for function _main
  3987  06B8                     _main:
  3988  06B8                     l2889:	
  3989                           ;incstack = 0
  3990                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3991                           
  3992                           
  3993                           ;main.c: 389:     picInit();
  3994  06B8  3187  2701  3186   	fcall	_picInit
  3995                           
  3996                           ;main.c: 390:     adcInit();
  3997  06BB  318F  2798  3186   	fcall	_adcInit
  3998  06BE                     l2891:
  3999                           
  4000                           ;main.c: 391:     lutInit();
  4001  06BE  3181  21CB  3186   	fcall	_lutInit
  4002  06C1                     l2893:
  4003                           
  4004                           ;main.c: 393:     response[1] = 0x5A;
  4005  06C1  305A               	movlw	90
  4006  06C2  0021               	movlb	1	; select bank1
  4007  06C3  00D8               	movwf	??_main^(0+128)
  4008  06C4  0858               	movf	??_main^(0+128),w
  4009  06C5  0020               	movlb	0	; select bank0
  4010  06C6  00D3               	movwf	_response+1
  4011  06C7                     l2895:
  4012                           
  4013                           ;main.c: 395:     char slaveSelect;;main.c: 396:     char slaveSelectStatePrev = 0;
  4014  06C7  0021               	movlb	1	; select bank1
  4015  06C8  01D9               	clrf	main@slaveSelectStatePrev^(0+128)
  4016  06C9                     l2897:
  4017                           
  4018                           ;main.c: 397:     char count = 0;
  4019  06C9  01DA               	clrf	main@count^(0+128)
  4020  06CA                     l2899:
  4021                           
  4022                           ;main.c: 398:     RA4 = 1;
  4023  06CA  0020               	movlb	0	; select bank0
  4024  06CB  160C               	bsf	12,4	;volatile
  4025  06CC                     l2901:
  4026                           
  4027                           ;main.c: 412:         slaveSelect = RA5;
  4028  06CC  3000               	movlw	0
  4029  06CD  0020               	movlb	0	; select bank0
  4030  06CE  1A8C               	btfsc	12,5	;volatile
  4031  06CF  3001               	movlw	1
  4032  06D0  0021               	movlb	1	; select bank1
  4033  06D1  00DB               	movwf	main@slaveSelect^(0+128)
  4034  06D2                     l2903:
  4035                           
  4036                           ;main.c: 414:         if (slaveSelect) {
  4037  06D2  085B               	movf	main@slaveSelect^(0+128),w
  4038  06D3  1903               	btfsc	3,2
  4039  06D4  2ED6               	goto	u2041
  4040  06D5  2ED7               	goto	u2040
  4041  06D6                     u2041:
  4042  06D6  2EDB               	goto	l144
  4043  06D7                     u2040:
  4044  06D7                     l2905:
  4045                           
  4046                           ;main.c: 415:             count++;
  4047  06D7  3001               	movlw	1
  4048  06D8  00D8               	movwf	??_main^(0+128)
  4049  06D9  0858               	movf	??_main^(0+128),w
  4050  06DA  07DA               	addwf	main@count^(0+128),f
  4051  06DB                     l144:	
  4052                           ;main.c: 416:         }
  4053                           
  4054                           
  4055                           ;main.c: 418:         if (slaveSelect ^ slaveSelectStatePrev) {
  4056  06DB  085B               	movf	main@slaveSelect^(0+128),w
  4057  06DC  0659               	xorwf	main@slaveSelectStatePrev^(0+128),w
  4058  06DD  1903               	btfsc	3,2
  4059  06DE  2EE0               	goto	u2051
  4060  06DF  2EE1               	goto	u2050
  4061  06E0                     u2051:
  4062  06E0  2EE2               	goto	l2909
  4063  06E1                     u2050:
  4064  06E1                     l2907:
  4065                           
  4066                           ;main.c: 419:             count = 0;
  4067  06E1  01DA               	clrf	main@count^(0+128)
  4068  06E2                     l2909:
  4069                           
  4070                           ;main.c: 422:         slaveSelectStatePrev = slaveSelect;
  4071  06E2  085B               	movf	main@slaveSelect^(0+128),w
  4072  06E3  00D8               	movwf	??_main^(0+128)
  4073  06E4  0858               	movf	??_main^(0+128),w
  4074  06E5  00D9               	movwf	main@slaveSelectStatePrev^(0+128)
  4075  06E6                     l2911:
  4076                           
  4077                           ;main.c: 424:         if (count >= 3) {
  4078  06E6  3003               	movlw	3
  4079  06E7  025A               	subwf	main@count^(0+128),w
  4080  06E8  1C03               	skipc
  4081  06E9  2EEB               	goto	u2061
  4082  06EA  2EEC               	goto	u2060
  4083  06EB                     u2061:
  4084  06EB  2EF7               	goto	l2919
  4085  06EC                     u2060:
  4086  06EC                     l2913:
  4087                           
  4088                           ;main.c: 426:             cmdCounter = 0;
  4089  06EC  01F8               	clrf	_cmdCounter
  4090  06ED                     l2915:
  4091                           
  4092                           ;main.c: 427:             responseLength = 9;
  4093  06ED  3009               	movlw	9
  4094  06EE  00D8               	movwf	??_main^(0+128)
  4095  06EF  0858               	movf	??_main^(0+128),w
  4096  06F0  0020               	movlb	0	; select bank0
  4097  06F1  00CC               	movwf	_responseLength
  4098  06F2                     l2917:
  4099                           
  4100                           ;main.c: 428:             SSP1BUF = 0xFF;
  4101  06F2  30FF               	movlw	255
  4102  06F3  0023               	movlb	3	; select bank3
  4103  06F4  008C               	movwf	12	;volatile
  4104                           
  4105                           ;main.c: 429:             previousCmd = 0x00;
  4106  06F5  0020               	movlb	0	; select bank0
  4107  06F6  01EE               	clrf	_previousCmd
  4108  06F7                     l2919:
  4109                           
  4110                           ;main.c: 433:         readController(analogMode);
  4111  06F7  0875               	movf	_analogMode,w
  4112  06F8  3184  2404  3186   	fcall	_readController
  4113  06FB                     l2921:
  4114                           
  4115                           ;main.c: 435:         readControllerAnalog();
  4116  06FB  3185  25EA  3186   	fcall	_readControllerAnalog
  4117  06FE  2ECC               	goto	l2901
  4118  06FF  3181  2988         	ljmp	start
  4119  0701                     __end_of_main:
  4120                           
  4121                           	psect	text1
  4122  05EA                     __ptext1:	
  4123 ;; *************** function _readControllerAnalog *****************
  4124 ;; Defined at:
  4125 ;;		line 186 in file "Controller.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4141 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4142 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4143 ;;Total ram usage:        3 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    4
  4146 ;; This function calls:
  4147 ;;		_readADC
  4148 ;;		_reversebyte
  4149 ;; This function is called by:
  4150 ;;		_main
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _readControllerAnalog
  4156  05EA                     _readControllerAnalog:
  4157  05EA                     l2887:	
  4158                           ;incstack = 0
  4159                           ; Regs used in _readControllerAnalog: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4160                           
  4161                           
  4162                           ;Controller.c: 189:     lxData = ~reversebyte(lutLX[readADC(0b010000)]);
  4163  05EA  3010               	movlw	16
  4164  05EB  0020               	movlb	0	; select bank0
  4165  05EC  00A0               	movwf	readADC@channel
  4166  05ED  3000               	movlw	0
  4167  05EE  00A1               	movwf	readADC@channel+1
  4168  05EF  3187  2773  3185   	fcall	_readADC
  4169  05F2  30F0               	movlw	240
  4170  05F3  0020               	movlb	0	; select bank0
  4171  05F4  00A9               	movwf	??_readControllerAnalog
  4172  05F5  3026               	movlw	38
  4173  05F6  00AA               	movwf	??_readControllerAnalog+1
  4174  05F7  0820               	movf	?_readADC,w
  4175  05F8  0729               	addwf	??_readControllerAnalog,w
  4176  05F9  0086               	movwf	6
  4177  05FA  0821               	movf	?_readADC+1,w
  4178  05FB  3D2A               	addwfc	??_readControllerAnalog+1,w
  4179  05FC  0087               	movwf	7
  4180  05FD  0801               	movf	1,w
  4181  05FE  3187  273C  3185   	fcall	_reversebyte
  4182  0601  3AFF               	xorlw	255
  4183  0602  0020               	movlb	0	; select bank0
  4184  0603  00AB               	movwf	??_readControllerAnalog+2
  4185  0604  082B               	movf	??_readControllerAnalog+2,w
  4186  0605  00CF               	movwf	_lxData
  4187                           
  4188                           ;Controller.c: 190:     lyData = ~reversebyte(lutLY[readADC(0b10001)]);
  4189  0606  3011               	movlw	17
  4190  0607  00A0               	movwf	readADC@channel
  4191  0608  3000               	movlw	0
  4192  0609  00A1               	movwf	readADC@channel+1
  4193  060A  3187  2773  3185   	fcall	_readADC
  4194  060D  30F0               	movlw	240
  4195  060E  0020               	movlb	0	; select bank0
  4196  060F  00A9               	movwf	??_readControllerAnalog
  4197  0610  3025               	movlw	37
  4198  0611  00AA               	movwf	??_readControllerAnalog+1
  4199  0612  0820               	movf	?_readADC,w
  4200  0613  0729               	addwf	??_readControllerAnalog,w
  4201  0614  0086               	movwf	6
  4202  0615  0821               	movf	?_readADC+1,w
  4203  0616  3D2A               	addwfc	??_readControllerAnalog+1,w
  4204  0617  0087               	movwf	7
  4205  0618  0801               	movf	1,w
  4206  0619  3187  273C  3185   	fcall	_reversebyte
  4207  061C  3AFF               	xorlw	255
  4208  061D  0020               	movlb	0	; select bank0
  4209  061E  00AB               	movwf	??_readControllerAnalog+2
  4210  061F  082B               	movf	??_readControllerAnalog+2,w
  4211  0620  00CE               	movwf	_lyData
  4212                           
  4213                           ;Controller.c: 192:     rxData = ~reversebyte(lutRX[readADC(0b010110)]);
  4214  0621  3016               	movlw	22
  4215  0622  00A0               	movwf	readADC@channel
  4216  0623  3000               	movlw	0
  4217  0624  00A1               	movwf	readADC@channel+1
  4218  0625  3187  2773  3185   	fcall	_readADC
  4219  0628  30F0               	movlw	240
  4220  0629  0020               	movlb	0	; select bank0
  4221  062A  00A9               	movwf	??_readControllerAnalog
  4222  062B  3024               	movlw	36
  4223  062C  00AA               	movwf	??_readControllerAnalog+1
  4224  062D  0820               	movf	?_readADC,w
  4225  062E  0729               	addwf	??_readControllerAnalog,w
  4226  062F  0086               	movwf	6
  4227  0630  0821               	movf	?_readADC+1,w
  4228  0631  3D2A               	addwfc	??_readControllerAnalog+1,w
  4229  0632  0087               	movwf	7
  4230  0633  0801               	movf	1,w
  4231  0634  3187  273C  3185   	fcall	_reversebyte
  4232  0637  3AFF               	xorlw	255
  4233  0638  0020               	movlb	0	; select bank0
  4234  0639  00AB               	movwf	??_readControllerAnalog+2
  4235  063A  082B               	movf	??_readControllerAnalog+2,w
  4236  063B  00D1               	movwf	_rxData
  4237                           
  4238                           ;Controller.c: 193:     ryData = ~reversebyte(lutRY[readADC(0b010111)]);
  4239  063C  3017               	movlw	23
  4240  063D  00A0               	movwf	readADC@channel
  4241  063E  3000               	movlw	0
  4242  063F  00A1               	movwf	readADC@channel+1
  4243  0640  3187  2773  3185   	fcall	_readADC
  4244  0643  30F0               	movlw	240
  4245  0644  0020               	movlb	0	; select bank0
  4246  0645  00A9               	movwf	??_readControllerAnalog
  4247  0646  3023               	movlw	35
  4248  0647  00AA               	movwf	??_readControllerAnalog+1
  4249  0648  0820               	movf	?_readADC,w
  4250  0649  0729               	addwf	??_readControllerAnalog,w
  4251  064A  0086               	movwf	6
  4252  064B  0821               	movf	?_readADC+1,w
  4253  064C  3D2A               	addwfc	??_readControllerAnalog+1,w
  4254  064D  0087               	movwf	7
  4255  064E  0801               	movf	1,w
  4256  064F  3187  273C  3185   	fcall	_reversebyte
  4257  0652  3AFF               	xorlw	255
  4258  0653  0020               	movlb	0	; select bank0
  4259  0654  00AB               	movwf	??_readControllerAnalog+2
  4260  0655  082B               	movf	??_readControllerAnalog+2,w
  4261  0656  00D0               	movwf	_ryData
  4262  0657                     l289:
  4263  0657  0008               	return
  4264  0658                     __end_of_readControllerAnalog:
  4265                           
  4266                           	psect	text2
  4267  073C                     __ptext2:	
  4268 ;; *************** function _reversebyte *****************
  4269 ;; Defined at:
  4270 ;;		line 178 in file "Controller.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  byte            1    wreg     unsigned char 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  byte            1    3[BANK0 ] unsigned char 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      unsigned char 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4286 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4287 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4288 ;;Total ram usage:        4 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    3
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_readControllerAnalog
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           
  4299                           ;psect for function _reversebyte
  4300  073C                     _reversebyte:
  4301                           
  4302                           ;incstack = 0
  4303                           ; Regs used in _reversebyte: [wreg+status,2+status,0]
  4304                           ;reversebyte@byte stored from wreg
  4305  073C  0020               	movlb	0	; select bank0
  4306  073D  00A3               	movwf	reversebyte@byte
  4307  073E                     l2715:
  4308                           
  4309                           ;Controller.c: 179:     byte = (byte & 0xF0) >> 4 | (byte & 0x0F) << 4;
  4310  073E  0823               	movf	reversebyte@byte,w
  4311  073F  390F               	andlw	15
  4312  0740  00A0               	movwf	??_reversebyte
  4313  0741  3004               	movlw	4
  4314  0742                     u1745:
  4315  0742  35A0               	lslf	??_reversebyte,f
  4316  0743  0B89               	decfsz	9,f
  4317  0744  2F42               	goto	u1745
  4318  0745  0823               	movf	reversebyte@byte,w
  4319  0746  00A1               	movwf	??_reversebyte+1
  4320  0747  3004               	movlw	4
  4321  0748                     u1755:
  4322  0748  36A1               	lsrf	??_reversebyte+1,f
  4323  0749  0B89               	decfsz	9,f
  4324  074A  2F48               	goto	u1755
  4325  074B  0821               	movf	??_reversebyte+1,w
  4326  074C  390F               	andlw	15
  4327  074D  0420               	iorwf	??_reversebyte,w
  4328  074E  00A2               	movwf	??_reversebyte+2
  4329  074F  0822               	movf	??_reversebyte+2,w
  4330  0750  00A3               	movwf	reversebyte@byte
  4331                           
  4332                           ;Controller.c: 180:     byte = (byte & 0xCC) >> 2 | (byte & 0x33) << 2;
  4333  0751  0823               	movf	reversebyte@byte,w
  4334  0752  3933               	andlw	51
  4335  0753  00A0               	movwf	??_reversebyte
  4336  0754  3002               	movlw	2
  4337  0755                     u1765:
  4338  0755  35A0               	lslf	??_reversebyte,f
  4339  0756  0B89               	decfsz	9,f
  4340  0757  2F55               	goto	u1765
  4341  0758  0823               	movf	reversebyte@byte,w
  4342  0759  00A1               	movwf	??_reversebyte+1
  4343  075A  3002               	movlw	2
  4344  075B                     u1775:
  4345  075B  36A1               	lsrf	??_reversebyte+1,f
  4346  075C  0B89               	decfsz	9,f
  4347  075D  2F5B               	goto	u1775
  4348  075E  0821               	movf	??_reversebyte+1,w
  4349  075F  3933               	andlw	51
  4350  0760  0420               	iorwf	??_reversebyte,w
  4351  0761  00A2               	movwf	??_reversebyte+2
  4352  0762  0822               	movf	??_reversebyte+2,w
  4353  0763  00A3               	movwf	reversebyte@byte
  4354                           
  4355                           ;Controller.c: 181:     byte = (byte & 0xAA) >> 1 | (byte & 0x55) << 1;
  4356  0764  0823               	movf	reversebyte@byte,w
  4357  0765  3955               	andlw	85
  4358  0766  00A0               	movwf	??_reversebyte
  4359  0767  3001               	movlw	1
  4360  0768                     u1785:
  4361  0768  35A0               	lslf	??_reversebyte,f
  4362  0769  0B89               	decfsz	9,f
  4363  076A  2F68               	goto	u1785
  4364  076B  3623               	lsrf	reversebyte@byte,w
  4365  076C  3955               	andlw	85
  4366  076D  0420               	iorwf	??_reversebyte,w
  4367  076E  00A1               	movwf	??_reversebyte+1
  4368  076F  0821               	movf	??_reversebyte+1,w
  4369  0770  00A3               	movwf	reversebyte@byte
  4370  0771                     l2717:
  4371                           
  4372                           ;Controller.c: 183:     return byte;
  4373  0771  0823               	movf	reversebyte@byte,w
  4374  0772                     l286:
  4375  0772  0008               	return
  4376  0773                     __end_of_reversebyte:
  4377                           
  4378                           	psect	text3
  4379  0773                     __ptext3:	
  4380 ;; *************** function _readADC *****************
  4381 ;; Defined at:
  4382 ;;		line 167 in file "Controller.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  channel         2    0[BANK0 ] int 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  2    0[BANK0 ] unsigned int 
  4389 ;; Registers used:
  4390 ;;		wreg, status,2, status,0
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4396 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4398 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4399 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4400 ;;Total ram usage:        9 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    3
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_readControllerAnalog
  4407 ;;		_configureController
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _readADC
  4413  0773                     _readADC:
  4414  0773                     l2703:	
  4415                           ;incstack = 0
  4416                           ; Regs used in _readADC: [wreg+status,2+status,0]
  4417                           
  4418                           
  4419                           ;Controller.c: 168:     ADPCH = channel;
  4420  0773  0020               	movlb	0	; select bank0
  4421  0774  0820               	movf	readADC@channel,w
  4422  0775  0021               	movlb	1	; select bank1
  4423  0776  009E               	movwf	30	;volatile
  4424  0777                     l2705:
  4425                           
  4426                           ;Controller.c: 169:     ADPRE = 0x00;
  4427  0777  019C               	clrf	28	;volatile
  4428  0778                     l2707:
  4429                           
  4430                           ;Controller.c: 170:     ADACQ = 0x3F;
  4431  0778  303F               	movlw	63
  4432  0779  009D               	movwf	29	;volatile
  4433  077A                     l2709:
  4434                           
  4435                           ;Controller.c: 172:     ADCON0bits.ADGO = 1;
  4436  077A  1413               	bsf	19,0	;volatile
  4437  077B                     l280:	
  4438                           ;Controller.c: 173:     while (ADCON0bits.ADGO);
  4439                           
  4440  077B  1813               	btfsc	19,0	;volatile
  4441  077C  2F7E               	goto	u1711
  4442  077D  2F7F               	goto	u1710
  4443  077E                     u1711:
  4444  077E  2F7B               	goto	l280
  4445  077F                     u1710:
  4446  077F                     l2711:
  4447                           
  4448                           ;Controller.c: 175:     return ((ADRESH << 6) | (ADRESL >> 2));
  4449  077F  080C               	movf	12,w	;volatile
  4450  0780  0020               	movlb	0	; select bank0
  4451  0781  00A2               	movwf	??_readADC
  4452  0782  3002               	movlw	2
  4453  0783                     u1725:
  4454  0783  36A2               	lsrf	??_readADC,f
  4455  0784  0B89               	decfsz	9,f
  4456  0785  2F83               	goto	u1725
  4457  0786  0822               	movf	??_readADC,w
  4458  0787  00A3               	movwf	??_readADC+1
  4459  0788  01A4               	clrf	??_readADC+2
  4460  0789  0021               	movlb	1	; select bank1
  4461  078A  080D               	movf	13,w	;volatile
  4462  078B  0020               	movlb	0	; select bank0
  4463  078C  00A5               	movwf	??_readADC+3
  4464  078D  01A6               	clrf	??_readADC+4
  4465  078E  3006               	movlw	6
  4466  078F                     u1735:
  4467  078F  35A5               	lslf	??_readADC+3,f
  4468  0790  0DA6               	rlf	??_readADC+4,f
  4469  0791  0B89               	decfsz	9,f
  4470  0792  2F8F               	goto	u1735
  4471  0793  0823               	movf	??_readADC+1,w
  4472  0794  0425               	iorwf	??_readADC+3,w
  4473  0795  00A7               	movwf	??_readADC+5
  4474  0796  0824               	movf	??_readADC+2,w
  4475  0797  0426               	iorwf	??_readADC+4,w
  4476  0798  00A8               	movwf	??_readADC+6
  4477  0799  0827               	movf	??_readADC+5,w
  4478  079A  00A0               	movwf	?_readADC
  4479  079B  0828               	movf	??_readADC+6,w
  4480  079C  00A1               	movwf	?_readADC+1
  4481  079D                     l283:
  4482  079D  0008               	return
  4483  079E                     __end_of_readADC:
  4484                           
  4485                           	psect	text4
  4486  0404                     __ptext4:	
  4487 ;; *************** function _readController *****************
  4488 ;; Defined at:
  4489 ;;		line 12 in file "Controller.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  analogMode      1    wreg     unsigned char 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  analogMode      1    2[BANK0 ] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4505 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4506 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4507 ;;Total ram usage:        3 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    3
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_main
  4514 ;;		_configureController
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           
  4519                           ;psect for function _readController
  4520  0404                     _readController:
  4521                           
  4522                           ;incstack = 0
  4523                           ; Regs used in _readController: [wreg-fsr1h+status,2+status,0]
  4524                           ;readController@analogMode stored from wreg
  4525  0404  0020               	movlb	0	; select bank0
  4526  0405  00A2               	movwf	readController@analogMode
  4527  0406                     l2845:
  4528                           
  4529                           ;Controller.c: 15:     DigitalControllerByte1[DDown] = RA7;
  4530  0406  3000               	movlw	0
  4531  0407  1B8C               	btfsc	12,7	;volatile
  4532  0408  3001               	movlw	1
  4533  0409  0021               	movlb	1	; select bank1
  4534  040A  00C9               	movwf	(_DigitalControllerByte1^(0+128)+1)
  4535                           
  4536                           ;Controller.c: 16:     DigitalControllerByte1[DUp] = RA6;
  4537  040B  3000               	movlw	0
  4538  040C  0020               	movlb	0	; select bank0
  4539  040D  1B0C               	btfsc	12,6	;volatile
  4540  040E  3001               	movlw	1
  4541  040F  0021               	movlb	1	; select bank1
  4542  0410  00CB               	movwf	(_DigitalControllerByte1^(0+128)+3)
  4543                           
  4544                           ;Controller.c: 17:     DigitalControllerByte1[DLeft] = RB0;
  4545  0411  3000               	movlw	0
  4546  0412  0020               	movlb	0	; select bank0
  4547  0413  180D               	btfsc	13,0	;volatile
  4548  0414  3001               	movlw	1
  4549  0415  0021               	movlb	1	; select bank1
  4550  0416  00C8               	movwf	_DigitalControllerByte1^(0+128)
  4551                           
  4552                           ;Controller.c: 18:     DigitalControllerByte1[DRight] = RB1;
  4553  0417  3000               	movlw	0
  4554  0418  0020               	movlb	0	; select bank0
  4555  0419  188D               	btfsc	13,1	;volatile
  4556  041A  3001               	movlw	1
  4557  041B  0021               	movlb	1	; select bank1
  4558  041C  00CA               	movwf	(_DigitalControllerByte1^(0+128)+2)
  4559                           
  4560                           ;Controller.c: 19:     DigitalControllerByte1[R3] = RD0;
  4561  041D  3000               	movlw	0
  4562  041E  0020               	movlb	0	; select bank0
  4563  041F  180F               	btfsc	15,0	;volatile
  4564  0420  3001               	movlw	1
  4565  0421  0021               	movlb	1	; select bank1
  4566  0422  00CD               	movwf	(_DigitalControllerByte1^(0+128)+5)
  4567                           
  4568                           ;Controller.c: 20:     DigitalControllerByte1[L3] = RC2;
  4569  0423  3000               	movlw	0
  4570  0424  0020               	movlb	0	; select bank0
  4571  0425  190E               	btfsc	14,2	;volatile
  4572  0426  3001               	movlw	1
  4573  0427  0021               	movlb	1	; select bank1
  4574  0428  00CE               	movwf	(_DigitalControllerByte1^(0+128)+6)
  4575                           
  4576                           ;Controller.c: 21:     DigitalControllerByte1[Start] = RB7;
  4577  0429  3000               	movlw	0
  4578  042A  0020               	movlb	0	; select bank0
  4579  042B  1B8D               	btfsc	13,7	;volatile
  4580  042C  3001               	movlw	1
  4581  042D  0021               	movlb	1	; select bank1
  4582  042E  00CC               	movwf	(_DigitalControllerByte1^(0+128)+4)
  4583                           
  4584                           ;Controller.c: 22:     DigitalControllerByte1[Select] = RB6;
  4585  042F  3000               	movlw	0
  4586  0430  0020               	movlb	0	; select bank0
  4587  0431  1B0D               	btfsc	13,6	;volatile
  4588  0432  3001               	movlw	1
  4589  0433  0021               	movlb	1	; select bank1
  4590  0434  00CF               	movwf	(_DigitalControllerByte1^(0+128)+7)
  4591                           
  4592                           ;Controller.c: 24:     DigitalControllerByte2[Square] = RA3;
  4593  0435  3000               	movlw	0
  4594  0436  0020               	movlb	0	; select bank0
  4595  0437  198C               	btfsc	12,3	;volatile
  4596  0438  3001               	movlw	1
  4597  0439  0021               	movlb	1	; select bank1
  4598  043A  00C0               	movwf	_DigitalControllerByte2^(0+128)
  4599                           
  4600                           ;Controller.c: 25:     DigitalControllerByte2[Circle] = RA0;
  4601  043B  3000               	movlw	0
  4602  043C  0020               	movlb	0	; select bank0
  4603  043D  180C               	btfsc	12,0	;volatile
  4604  043E  3001               	movlw	1
  4605  043F  0021               	movlb	1	; select bank1
  4606  0440  00C2               	movwf	(_DigitalControllerByte2^(0+128)+2)
  4607                           
  4608                           ;Controller.c: 26:     DigitalControllerByte2[X] = RA2;
  4609  0441  3000               	movlw	0
  4610  0442  0020               	movlb	0	; select bank0
  4611  0443  190C               	btfsc	12,2	;volatile
  4612  0444  3001               	movlw	1
  4613  0445  0021               	movlb	1	; select bank1
  4614  0446  00C1               	movwf	(_DigitalControllerByte2^(0+128)+1)
  4615                           
  4616                           ;Controller.c: 27:     DigitalControllerByte2[Triangle] = RA1;
  4617  0447  3000               	movlw	0
  4618  0448  0020               	movlb	0	; select bank0
  4619  0449  188C               	btfsc	12,1	;volatile
  4620  044A  3001               	movlw	1
  4621  044B  0021               	movlb	1	; select bank1
  4622  044C  00C3               	movwf	(_DigitalControllerByte2^(0+128)+3)
  4623                           
  4624                           ;Controller.c: 28:     DigitalControllerByte2[R1] = RB4;
  4625  044D  3000               	movlw	0
  4626  044E  0020               	movlb	0	; select bank0
  4627  044F  1A0D               	btfsc	13,4	;volatile
  4628  0450  3001               	movlw	1
  4629  0451  0021               	movlb	1	; select bank1
  4630  0452  00C4               	movwf	(_DigitalControllerByte2^(0+128)+4)
  4631                           
  4632                           ;Controller.c: 29:     DigitalControllerByte2[R2] = RB5;
  4633  0453  3000               	movlw	0
  4634  0454  0020               	movlb	0	; select bank0
  4635  0455  1A8D               	btfsc	13,5	;volatile
  4636  0456  3001               	movlw	1
  4637  0457  0021               	movlb	1	; select bank1
  4638  0458  00C6               	movwf	(_DigitalControllerByte2^(0+128)+6)
  4639                           
  4640                           ;Controller.c: 30:     DigitalControllerByte2[L1] = RB2;
  4641  0459  3000               	movlw	0
  4642  045A  0020               	movlb	0	; select bank0
  4643  045B  190D               	btfsc	13,2	;volatile
  4644  045C  3001               	movlw	1
  4645  045D  0021               	movlb	1	; select bank1
  4646  045E  00C5               	movwf	(_DigitalControllerByte2^(0+128)+5)
  4647                           
  4648                           ;Controller.c: 31:     DigitalControllerByte2[L2] = RB3;
  4649  045F  3000               	movlw	0
  4650  0460  0020               	movlb	0	; select bank0
  4651  0461  198D               	btfsc	13,3	;volatile
  4652  0462  3001               	movlw	1
  4653  0463  0021               	movlb	1	; select bank1
  4654  0464  00C7               	movwf	(_DigitalControllerByte2^(0+128)+7)
  4655  0465                     l2847:
  4656                           
  4657                           ;Controller.c: 36:     if (index > Select) {
  4658  0465  3008               	movlw	8
  4659  0466  0279               	subwf	_index,w
  4660  0467  1C03               	skipc
  4661  0468  2C6A               	goto	u1891
  4662  0469  2C6B               	goto	u1890
  4663  046A                     u1891:
  4664  046A  2C6C               	goto	l2851
  4665  046B                     u1890:
  4666  046B                     l2849:
  4667                           
  4668                           ;Controller.c: 37:         index = 0;
  4669  046B  01F9               	clrf	_index
  4670  046C                     l2851:
  4671                           
  4672                           ;Controller.c: 41:     if (!DigitalControllerByte1[index]) {
  4673  046C  0879               	movf	_index,w
  4674  046D  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  4675  046E  0086               	movwf	6
  4676  046F  0187               	clrf	7
  4677  0470  0801               	movf	1,w
  4678  0471  1D03               	btfss	3,2
  4679  0472  2C74               	goto	u1901
  4680  0473  2C75               	goto	u1900
  4681  0474                     u1901:
  4682  0474  2C7E               	goto	l243
  4683  0475                     u1900:
  4684  0475                     l2853:
  4685                           
  4686                           ;Controller.c: 42:         IndexDigitalByte1[index]++;
  4687  0475  3001               	movlw	1
  4688  0476  0020               	movlb	0	; select bank0
  4689  0477  00A0               	movwf	??_readController
  4690  0478  0879               	movf	_index,w
  4691  0479  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  4692  047A  0086               	movwf	6
  4693  047B  0187               	clrf	7
  4694  047C  0820               	movf	??_readController,w
  4695  047D  0781               	addwf	1,f
  4696  047E                     l243:	
  4697                           ;Controller.c: 43:     }
  4698                           
  4699                           
  4700                           ;Controller.c: 44:     if (!DigitalControllerByte2[index]) {
  4701  047E  0879               	movf	_index,w
  4702  047F  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  4703  0480  0086               	movwf	6
  4704  0481  0187               	clrf	7
  4705  0482  0801               	movf	1,w
  4706  0483  1D03               	btfss	3,2
  4707  0484  2C86               	goto	u1911
  4708  0485  2C87               	goto	u1910
  4709  0486                     u1911:
  4710  0486  2C90               	goto	l2857
  4711  0487                     u1910:
  4712  0487                     l2855:
  4713                           
  4714                           ;Controller.c: 45:         IndexDigitalByte2[index]++;
  4715  0487  3001               	movlw	1
  4716  0488  0020               	movlb	0	; select bank0
  4717  0489  00A0               	movwf	??_readController
  4718  048A  0879               	movf	_index,w
  4719  048B  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  4720  048C  0086               	movwf	6
  4721  048D  0187               	clrf	7
  4722  048E  0820               	movf	??_readController,w
  4723  048F  0781               	addwf	1,f
  4724  0490                     l2857:
  4725                           
  4726                           ;Controller.c: 49:     if (DigitalControllerByte1[index] ^ PreviousDigitalByte1[index]) 
      +                          {
  4727  0490  0879               	movf	_index,w
  4728  0491  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  4729  0492  0086               	movwf	6
  4730  0493  0187               	clrf	7
  4731  0494  0879               	movf	_index,w
  4732  0495  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  4733  0496  0084               	movwf	4
  4734  0497  0185               	clrf	5
  4735  0498  0800               	movf	0,w
  4736  0499  0601               	xorwf	1,w
  4737  049A  1903               	btfsc	3,2
  4738  049B  2C9D               	goto	u1921
  4739  049C  2C9E               	goto	u1920
  4740  049D                     u1921:
  4741  049D  2CB9               	goto	l2867
  4742  049E                     u1920:
  4743  049E                     l2859:
  4744                           
  4745                           ;Controller.c: 50:         IndexDigitalByte1[index] = 0;
  4746  049E  0879               	movf	_index,w
  4747  049F  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  4748  04A0  0086               	movwf	6
  4749  04A1  0187               	clrf	7
  4750  04A2  0181               	clrf	1
  4751  04A3                     l2861:
  4752                           
  4753                           ;Controller.c: 51:         digitalStateFirst |= 1 << index;
  4754  04A3  3001               	movlw	1
  4755  04A4  0020               	movlb	0	; select bank0
  4756  04A5  00A0               	movwf	??_readController
  4757  04A6  0A79               	incf	_index,w
  4758  04A7  2CA9               	goto	u1934
  4759  04A8                     u1935:
  4760  04A8  35A0               	lslf	??_readController,f
  4761  04A9                     u1934:
  4762  04A9  0B89               	decfsz	9,f
  4763  04AA  2CA8               	goto	u1935
  4764  04AB  0820               	movf	??_readController,w
  4765  04AC  00A1               	movwf	??_readController+1
  4766  04AD  0821               	movf	??_readController+1,w
  4767  04AE  04F7               	iorwf	_digitalStateFirst,f
  4768  04AF                     l2863:
  4769                           
  4770                           ;Controller.c: 53:         if (analogMode) {
  4771  04AF  0822               	movf	readController@analogMode,w
  4772  04B0  1903               	btfsc	3,2
  4773  04B1  2CB3               	goto	u1941
  4774  04B2  2CB4               	goto	u1940
  4775  04B3                     u1941:
  4776  04B3  2CB9               	goto	l2867
  4777  04B4                     u1940:
  4778  04B4                     l2865:
  4779                           
  4780                           ;Controller.c: 54:             analogStateFirst[index] = 0x00;
  4781  04B4  0879               	movf	_index,w
  4782  04B5  3ED0               	addlw	(low (_analogStateFirst| 0))& (0+255)
  4783  04B6  0086               	movwf	6
  4784  04B7  0187               	clrf	7
  4785  04B8  0181               	clrf	1
  4786  04B9                     l2867:
  4787                           
  4788                           ;Controller.c: 58:     if (DigitalControllerByte2[index] ^ PreviousDigitalByte2[index]) 
      +                          {
  4789  04B9  0879               	movf	_index,w
  4790  04BA  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  4791  04BB  0086               	movwf	6
  4792  04BC  0187               	clrf	7
  4793  04BD  0879               	movf	_index,w
  4794  04BE  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  4795  04BF  0084               	movwf	4
  4796  04C0  0185               	clrf	5
  4797  04C1  0800               	movf	0,w
  4798  04C2  0601               	xorwf	1,w
  4799  04C3  1903               	btfsc	3,2
  4800  04C4  2CC6               	goto	u1951
  4801  04C5  2CC7               	goto	u1950
  4802  04C6                     u1951:
  4803  04C6  2CE2               	goto	l247
  4804  04C7                     u1950:
  4805  04C7                     l2869:
  4806                           
  4807                           ;Controller.c: 59:         IndexDigitalByte2[index] = 0;
  4808  04C7  0879               	movf	_index,w
  4809  04C8  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  4810  04C9  0086               	movwf	6
  4811  04CA  0187               	clrf	7
  4812  04CB  0181               	clrf	1
  4813  04CC                     l2871:
  4814                           
  4815                           ;Controller.c: 60:         digitalStateSecond |= 1 << index;
  4816  04CC  3001               	movlw	1
  4817  04CD  0020               	movlb	0	; select bank0
  4818  04CE  00A0               	movwf	??_readController
  4819  04CF  0A79               	incf	_index,w
  4820  04D0  2CD2               	goto	u1964
  4821  04D1                     u1965:
  4822  04D1  35A0               	lslf	??_readController,f
  4823  04D2                     u1964:
  4824  04D2  0B89               	decfsz	9,f
  4825  04D3  2CD1               	goto	u1965
  4826  04D4  0820               	movf	??_readController,w
  4827  04D5  00A1               	movwf	??_readController+1
  4828  04D6  0821               	movf	??_readController+1,w
  4829  04D7  04F6               	iorwf	_digitalStateSecond,f
  4830  04D8                     l2873:
  4831                           
  4832                           ;Controller.c: 62:         if (analogMode) {
  4833  04D8  0822               	movf	readController@analogMode,w
  4834  04D9  1903               	btfsc	3,2
  4835  04DA  2CDC               	goto	u1971
  4836  04DB  2CDD               	goto	u1970
  4837  04DC                     u1971:
  4838  04DC  2CE2               	goto	l247
  4839  04DD                     u1970:
  4840  04DD                     l2875:
  4841                           
  4842                           ;Controller.c: 63:             analogStateSecond[index] = 0x00;
  4843  04DD  0879               	movf	_index,w
  4844  04DE  3E66               	addlw	(low (_analogStateSecond| 0))& (0+255)
  4845  04DF  0086               	movwf	6
  4846  04E0  0187               	clrf	7
  4847  04E1  0181               	clrf	1
  4848  04E2                     l247:	
  4849                           ;Controller.c: 66:     }
  4850                           
  4851  04E2  0879               	movf	_index,w
  4852  04E3  3EA8               	addlw	(low (_IndexDigitalByte1| 0))& (0+255)
  4853  04E4  0086               	movwf	6
  4854  04E5  0187               	clrf	7
  4855  04E6  3003               	movlw	3
  4856  04E7  0201               	subwf	1,w
  4857  04E8  1C03               	skipc
  4858  04E9  2CEB               	goto	u1981
  4859  04EA  2CEC               	goto	u1980
  4860  04EB                     u1981:
  4861  04EB  2D06               	goto	l249
  4862  04EC                     u1980:
  4863  04EC                     l2877:
  4864                           
  4865                           ;Controller.c: 70:         digitalStateFirst &= ~(1 << index);
  4866  04EC  3001               	movlw	1
  4867  04ED  0020               	movlb	0	; select bank0
  4868  04EE  00A0               	movwf	??_readController
  4869  04EF  0A79               	incf	_index,w
  4870  04F0  2CF2               	goto	u1994
  4871  04F1                     u1995:
  4872  04F1  35A0               	lslf	??_readController,f
  4873  04F2                     u1994:
  4874  04F2  0B89               	decfsz	9,f
  4875  04F3  2CF1               	goto	u1995
  4876  04F4  0820               	movf	??_readController,w
  4877  04F5  3AFF               	xorlw	255
  4878  04F6  00A1               	movwf	??_readController+1
  4879  04F7  0821               	movf	??_readController+1,w
  4880  04F8  05F7               	andwf	_digitalStateFirst,f
  4881                           
  4882                           ;Controller.c: 72:         if (analogMode) {
  4883  04F9  0822               	movf	readController@analogMode,w
  4884  04FA  1903               	btfsc	3,2
  4885  04FB  2CFD               	goto	u2001
  4886  04FC  2CFE               	goto	u2000
  4887  04FD                     u2001:
  4888  04FD  2D06               	goto	l249
  4889  04FE                     u2000:
  4890  04FE                     l2879:
  4891                           
  4892                           ;Controller.c: 73:             analogStateFirst[index] = 0xFF;
  4893  04FE  30FF               	movlw	255
  4894  04FF  00A0               	movwf	??_readController
  4895  0500  0879               	movf	_index,w
  4896  0501  3ED0               	addlw	(low (_analogStateFirst| 0))& (0+255)
  4897  0502  0086               	movwf	6
  4898  0503  0187               	clrf	7
  4899  0504  0820               	movf	??_readController,w
  4900  0505  0081               	movwf	1
  4901  0506                     l249:	
  4902                           ;Controller.c: 76:     }
  4903                           
  4904  0506  0879               	movf	_index,w
  4905  0507  3EA0               	addlw	(low (_IndexDigitalByte2| 0))& (0+255)
  4906  0508  0086               	movwf	6
  4907  0509  0187               	clrf	7
  4908  050A  3003               	movlw	3
  4909  050B  0201               	subwf	1,w
  4910  050C  1C03               	skipc
  4911  050D  2D0F               	goto	u2011
  4912  050E  2D10               	goto	u2010
  4913  050F                     u2011:
  4914  050F  2D2A               	goto	l251
  4915  0510                     u2010:
  4916  0510                     l2881:
  4917                           
  4918                           ;Controller.c: 78:         digitalStateSecond &= ~(1 << index);
  4919  0510  3001               	movlw	1
  4920  0511  0020               	movlb	0	; select bank0
  4921  0512  00A0               	movwf	??_readController
  4922  0513  0A79               	incf	_index,w
  4923  0514  2D16               	goto	u2024
  4924  0515                     u2025:
  4925  0515  35A0               	lslf	??_readController,f
  4926  0516                     u2024:
  4927  0516  0B89               	decfsz	9,f
  4928  0517  2D15               	goto	u2025
  4929  0518  0820               	movf	??_readController,w
  4930  0519  3AFF               	xorlw	255
  4931  051A  00A1               	movwf	??_readController+1
  4932  051B  0821               	movf	??_readController+1,w
  4933  051C  05F6               	andwf	_digitalStateSecond,f
  4934                           
  4935                           ;Controller.c: 80:         if (analogMode) {
  4936  051D  0822               	movf	readController@analogMode,w
  4937  051E  1903               	btfsc	3,2
  4938  051F  2D21               	goto	u2031
  4939  0520  2D22               	goto	u2030
  4940  0521                     u2031:
  4941  0521  2D2A               	goto	l251
  4942  0522                     u2030:
  4943  0522                     l2883:
  4944                           
  4945                           ;Controller.c: 81:             analogStateSecond[index] = 0xFF;
  4946  0522  30FF               	movlw	255
  4947  0523  00A0               	movwf	??_readController
  4948  0524  0879               	movf	_index,w
  4949  0525  3E66               	addlw	(low (_analogStateSecond| 0))& (0+255)
  4950  0526  0086               	movwf	6
  4951  0527  0187               	clrf	7
  4952  0528  0820               	movf	??_readController,w
  4953  0529  0081               	movwf	1
  4954  052A                     l251:	
  4955                           ;Controller.c: 84:     }
  4956                           
  4957                           
  4958                           ;Controller.c: 87:     PreviousDigitalByte1[index] = DigitalControllerByte1[index];
  4959  052A  0879               	movf	_index,w
  4960  052B  3EC8               	addlw	(low (_DigitalControllerByte1| 0))& (0+255)
  4961  052C  0086               	movwf	6
  4962  052D  0187               	clrf	7
  4963  052E  0801               	movf	1,w
  4964  052F  0020               	movlb	0	; select bank0
  4965  0530  00A0               	movwf	??_readController
  4966  0531  0879               	movf	_index,w
  4967  0532  3EB8               	addlw	(low (_PreviousDigitalByte1| 0))& (0+255)
  4968  0533  0086               	movwf	6
  4969  0534  0187               	clrf	7
  4970  0535  0820               	movf	??_readController,w
  4971  0536  0081               	movwf	1
  4972                           
  4973                           ;Controller.c: 88:     PreviousDigitalByte2[index] = DigitalControllerByte2[index];
  4974  0537  0879               	movf	_index,w
  4975  0538  3EC0               	addlw	(low (_DigitalControllerByte2| 0))& (0+255)
  4976  0539  0086               	movwf	6
  4977  053A  0187               	clrf	7
  4978  053B  0801               	movf	1,w
  4979  053C  00A0               	movwf	??_readController
  4980  053D  0879               	movf	_index,w
  4981  053E  3EB0               	addlw	(low (_PreviousDigitalByte2| 0))& (0+255)
  4982  053F  0086               	movwf	6
  4983  0540  0187               	clrf	7
  4984  0541  0820               	movf	??_readController,w
  4985  0542  0081               	movwf	1
  4986  0543                     l2885:
  4987                           
  4988                           ;Controller.c: 90:     index++;
  4989  0543  3001               	movlw	1
  4990  0544  00A0               	movwf	??_readController
  4991  0545  0820               	movf	??_readController,w
  4992  0546  07F9               	addwf	_index,f
  4993  0547                     l253:
  4994  0547  0008               	return
  4995  0548                     __end_of_readController:
  4996                           
  4997                           	psect	text5
  4998  0701                     __ptext5:	
  4999 ;; *************** function _picInit *****************
  5000 ;; Defined at:
  5001 ;;		line 32 in file "PicConfig.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;		None
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      void 
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0, pclath, cstack
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5017 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5018 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5019 ;;Total ram usage:        2 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:    4
  5022 ;; This function calls:
  5023 ;;		_ppsLock
  5024 ;;		_ppsUnlock
  5025 ;;		_spiInit
  5026 ;; This function is called by:
  5027 ;;		_main
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           
  5032                           ;psect for function _picInit
  5033  0701                     _picInit:
  5034  0701                     l2733:	
  5035                           ;incstack = 0
  5036                           ; Regs used in _picInit: [wreg+status,2+status,0+pclath+cstack]
  5037                           
  5038                           
  5039                           ;PicConfig.c: 35:     TRISA = 0xFF;
  5040  0701  30FF               	movlw	255
  5041  0702  0020               	movlb	0	; select bank0
  5042  0703  0091               	movwf	17	;volatile
  5043                           
  5044                           ;PicConfig.c: 36:     TRISB = 0xFF;
  5045  0704  30FF               	movlw	255
  5046  0705  0092               	movwf	18	;volatile
  5047                           
  5048                           ;PicConfig.c: 37:     TRISC = 0xFF;
  5049  0706  30FF               	movlw	255
  5050  0707  0093               	movwf	19	;volatile
  5051                           
  5052                           ;PicConfig.c: 38:     TRISD = 0xEF;
  5053  0708  30EF               	movlw	239
  5054  0709  0094               	movwf	20	;volatile
  5055                           
  5056                           ;PicConfig.c: 39:     TRISE = 0xFF;
  5057  070A  30FF               	movlw	255
  5058  070B  0095               	movwf	21	;volatile
  5059  070C                     l2735:
  5060                           
  5061                           ;PicConfig.c: 42:     ANSELA = 0;
  5062  070C  003E               	movlb	30	; select bank30
  5063  070D  01B8               	clrf	56	;volatile
  5064  070E                     l2737:
  5065                           
  5066                           ;PicConfig.c: 43:     ANSELB = 0;
  5067  070E  01C3               	clrf	67	;volatile
  5068                           
  5069                           ;PicConfig.c: 44:     ANSELC = 0xC3;
  5070  070F  30C3               	movlw	195
  5071  0710  00CE               	movwf	78	;volatile
  5072  0711                     l2739:
  5073                           
  5074                           ;PicConfig.c: 45:     ANSELD = 0;
  5075  0711  01D9               	clrf	89	;volatile
  5076  0712                     l2741:
  5077                           
  5078                           ;PicConfig.c: 46:     ANSELE = 0;
  5079  0712  01E4               	clrf	100	;volatile
  5080                           
  5081                           ;PicConfig.c: 49:     WPUA = 0xCF;
  5082  0713  30CF               	movlw	207
  5083  0714  00B9               	movwf	57	;volatile
  5084                           
  5085                           ;PicConfig.c: 50:     WPUB = 0xFF;
  5086  0715  30FF               	movlw	255
  5087  0716  00C4               	movwf	68	;volatile
  5088                           
  5089                           ;PicConfig.c: 51:     WPUC = 0x04;
  5090  0717  3004               	movlw	4
  5091  0718  00CF               	movwf	79	;volatile
  5092                           
  5093                           ;PicConfig.c: 52:     WPUD = 0x01;
  5094  0719  3001               	movlw	1
  5095  071A  00DA               	movwf	90	;volatile
  5096  071B                     l2743:
  5097                           
  5098                           ;PicConfig.c: 53:     WPUE = 0;
  5099  071B  01E5               	clrf	101	;volatile
  5100  071C                     l2745:
  5101                           
  5102                           ;PicConfig.c: 56:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HI
      +                          GH, SPI_ACTIVE_2_IDLE);
  5103  071C  0020               	movlb	0	; select bank0
  5104  071D  01A0               	clrf	spiInit@sDataSample
  5105  071E  3010               	movlw	16
  5106  071F  00A4               	movwf	??_picInit
  5107  0720  0824               	movf	??_picInit,w
  5108  0721  00A1               	movwf	spiInit@sClockIdle
  5109  0722  3040               	movlw	64
  5110  0723  00A5               	movwf	??_picInit+1
  5111  0724  0825               	movf	??_picInit+1,w
  5112  0725  00A2               	movwf	spiInit@sTransmitEdge
  5113  0726  3024               	movlw	36
  5114  0727  318F  27CC  3187   	fcall	_spiInit
  5115  072A                     l2747:
  5116                           
  5117                           ;PicConfig.c: 58:     TRISCbits.TRISC5 = 0;
  5118  072A  0020               	movlb	0	; select bank0
  5119  072B  1293               	bcf	19,5	;volatile
  5120  072C                     l2749:
  5121                           
  5122                           ;PicConfig.c: 59:     TRISAbits.TRISA4 = 0;
  5123  072C  1211               	bcf	17,4	;volatile
  5124  072D                     l2751:
  5125                           
  5126                           ;PicConfig.c: 60:     ppsUnlock();
  5127  072D  318F  2789  3187   	fcall	_ppsUnlock
  5128  0730                     l2753:
  5129                           
  5130                           ;PicConfig.c: 62:     RC5PPS = 0x15;
  5131  0730  3015               	movlw	21
  5132  0731  003E               	movlb	30	; select bank30
  5133  0732  00A5               	movwf	37	;volatile
  5134  0733                     l2755:
  5135                           
  5136                           ;PicConfig.c: 64:     ppsLock();
  5137  0733  318F  2790  3187   	fcall	_ppsLock
  5138  0736                     l2757:
  5139                           
  5140                           ;PicConfig.c: 67:     INTCONbits.GIE = 1;
  5141  0736  178B               	bsf	11,7	;volatile
  5142  0737                     l2759:
  5143                           
  5144                           ;PicConfig.c: 68:     INTCONbits.PEIE = 1;
  5145  0737  170B               	bsf	11,6	;volatile
  5146  0738                     l2761:
  5147                           
  5148                           ;PicConfig.c: 69:     SSP1IF = 0;
  5149  0738  002E               	movlb	14	; select bank14
  5150  0739  100F               	bcf	15,0	;volatile
  5151  073A                     l2763:
  5152                           
  5153                           ;PicConfig.c: 70:     SSP1IE = 1;
  5154  073A  1419               	bsf	25,0	;volatile
  5155  073B                     l375:
  5156  073B  0008               	return
  5157  073C                     __end_of_picInit:
  5158                           
  5159                           	psect	text6
  5160  0FCC                     __ptext6:	
  5161 ;; *************** function _spiInit *****************
  5162 ;; Defined at:
  5163 ;;		line 10 in file "Spi.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  sType           1    wreg     enum E12144
  5166 ;;  sDataSample     1    0[BANK0 ] enum E12152
  5167 ;;  sClockIdle      1    1[BANK0 ] enum E12156
  5168 ;;  sTransmitEdg    1    2[BANK0 ] enum E12160
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  sType           1    3[BANK0 ] enum E12144
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5180 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5183 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5184 ;;Total ram usage:        4 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; Hardware stack levels required when called:    3
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_picInit
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           
  5195                           ;psect for function _spiInit
  5196  0FCC                     _spiInit:
  5197                           
  5198                           ;incstack = 0
  5199                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  5200                           ;spiInit@sType stored from wreg
  5201  0FCC  0020               	movlb	0	; select bank0
  5202  0FCD  00A3               	movwf	spiInit@sType
  5203  0FCE                     l2727:
  5204                           
  5205                           ;Spi.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);Spi.c: 11: {;Spi.c: 13:     if(sType & 0b00000
      +                          100)
  5206  0FCE  1D23               	btfss	spiInit@sType,2
  5207  0FCF  2FD1               	goto	u1791
  5208  0FD0  2FD2               	goto	u1790
  5209  0FD1                     u1791:
  5210  0FD1  2FD6               	goto	l2731
  5211  0FD2                     u1790:
  5212  0FD2                     l2729:
  5213                           
  5214                           ;Spi.c: 14:     {;Spi.c: 15:         SSP1STAT = sTransmitEdge;
  5215  0FD2  0822               	movf	spiInit@sTransmitEdge,w
  5216  0FD3  0023               	movlb	3	; select bank3
  5217  0FD4  008F               	movwf	15	;volatile
  5218                           
  5219                           ;Spi.c: 17:     }
  5220  0FD5  2FDA               	goto	l387
  5221  0FD6                     l2731:
  5222                           
  5223                           ;Spi.c: 19:     {;Spi.c: 20:         SSP1STAT = sDataSample | sTransmitEdge;
  5224  0FD6  0820               	movf	spiInit@sDataSample,w
  5225  0FD7  0422               	iorwf	spiInit@sTransmitEdge,w
  5226  0FD8  0023               	movlb	3	; select bank3
  5227  0FD9  008F               	movwf	15	;volatile
  5228  0FDA                     l387:	
  5229                           ;Spi.c: 22:     }
  5230                           
  5231                           
  5232                           ;Spi.c: 24:     SSP1CON1 = sType | sClockIdle;
  5233  0FDA  0020               	movlb	0	; select bank0
  5234  0FDB  0823               	movf	spiInit@sType,w
  5235  0FDC  0421               	iorwf	spiInit@sClockIdle,w
  5236  0FDD  0023               	movlb	3	; select bank3
  5237  0FDE  0090               	movwf	16	;volatile
  5238  0FDF                     l388:
  5239  0FDF  0008               	return
  5240  0FE0                     __end_of_spiInit:
  5241                           
  5242                           	psect	text7
  5243  0F89                     __ptext7:	
  5244 ;; *************** function _ppsUnlock *****************
  5245 ;; Defined at:
  5246 ;;		line 9 in file "PicConfig.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5264 ;;Total ram usage:        0 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    3
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_picInit
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           
  5275                           ;psect for function _ppsUnlock
  5276  0F89                     _ppsUnlock:
  5277  0F89                     l2721:	
  5278                           ;incstack = 0
  5279                           ; Regs used in _ppsUnlock: [wreg+status,2]
  5280                           
  5281                           
  5282                           ;PicConfig.c: 10:     PPSLOCK = 0x55;
  5283  0F89  3055               	movlw	85
  5284  0F8A  003D               	movlb	29	; select bank29
  5285  0F8B  008F               	movwf	15	;volsfr
  5286                           
  5287                           ;PicConfig.c: 11:     PPSLOCK = 0xAA;
  5288  0F8C  30AA               	movlw	170
  5289  0F8D  008F               	movwf	15	;volsfr
  5290  0F8E                     l2723:
  5291                           
  5292                           ;PicConfig.c: 12:     PPSLOCK = 0;
  5293  0F8E  018F               	clrf	15	;volsfr
  5294  0F8F                     l366:
  5295  0F8F  0008               	return
  5296  0F90                     __end_of_ppsUnlock:
  5297                           
  5298                           	psect	text8
  5299  0F90                     __ptext8:	
  5300 ;; *************** function _ppsLock *****************
  5301 ;; Defined at:
  5302 ;;		line 15 in file "PicConfig.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		wreg
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5320 ;;Total ram usage:        0 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    3
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_picInit
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           
  5331                           ;psect for function _ppsLock
  5332  0F90                     _ppsLock:
  5333  0F90                     l2725:	
  5334                           ;incstack = 0
  5335                           ; Regs used in _ppsLock: [wreg]
  5336                           
  5337                           
  5338                           ;PicConfig.c: 16:     PPSLOCK = 0x55;
  5339  0F90  3055               	movlw	85
  5340  0F91  003D               	movlb	29	; select bank29
  5341  0F92  008F               	movwf	15	;volsfr
  5342                           
  5343                           ;PicConfig.c: 17:     PPSLOCK = 0xAA;
  5344  0F93  30AA               	movlw	170
  5345  0F94  008F               	movwf	15	;volsfr
  5346                           
  5347                           ;PicConfig.c: 18:     PPSLOCK = 1;
  5348  0F95  3001               	movlw	1
  5349  0F96  008F               	movwf	15	;volsfr
  5350  0F97                     l369:
  5351  0F97  0008               	return
  5352  0F98                     __end_of_ppsLock:
  5353                           
  5354                           	psect	text9
  5355  01CB                     __ptext9:	
  5356 ;; *************** function _lutInit *****************
  5357 ;; Defined at:
  5358 ;;		line 98 in file "Controller.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  position        2   42[BANK0 ] int 
  5363 ;;  ryMax           1   41[BANK0 ] unsigned char 
  5364 ;;  ryMin           1   40[BANK0 ] unsigned char 
  5365 ;;  rxMax           1   39[BANK0 ] unsigned char 
  5366 ;;  rxMin           1   38[BANK0 ] unsigned char 
  5367 ;;  lyMax           1   37[BANK0 ] unsigned char 
  5368 ;;  lyMin           1   36[BANK0 ] unsigned char 
  5369 ;;  lxMax           1   35[BANK0 ] unsigned char 
  5370 ;;  lxMin           1   34[BANK0 ] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5381 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5382 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5383 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5384 ;;Total ram usage:       19 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    5
  5387 ;; This function calls:
  5388 ;;		_Map
  5389 ;;		_eepromRead
  5390 ;;		_eepromWrite
  5391 ;; This function is called by:
  5392 ;;		_main
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           
  5397                           ;psect for function _lutInit
  5398  01CB                     _lutInit:
  5399  01CB                     l2777:	
  5400                           ;incstack = 0
  5401                           ; Regs used in _lutInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5402                           
  5403                           
  5404                           ;Controller.c: 102:     eepromWrite(0x60, 60);
  5405  01CB  303C               	movlw	60
  5406  01CC  0020               	movlb	0	; select bank0
  5407  01CD  00B9               	movwf	??_lutInit
  5408  01CE  0839               	movf	??_lutInit,w
  5409  01CF  00A0               	movwf	eepromWrite@data
  5410  01D0  3060               	movlw	96
  5411  01D1  3187  279E  3181   	fcall	_eepromWrite
  5412                           
  5413                           ;Controller.c: 103:     eepromWrite(0x61, 186);
  5414  01D4  30BA               	movlw	186
  5415  01D5  0020               	movlb	0	; select bank0
  5416  01D6  00B9               	movwf	??_lutInit
  5417  01D7  0839               	movf	??_lutInit,w
  5418  01D8  00A0               	movwf	eepromWrite@data
  5419  01D9  3061               	movlw	97
  5420  01DA  3187  279E  3181   	fcall	_eepromWrite
  5421                           
  5422                           ;Controller.c: 104:     eepromWrite(0x62, 58);
  5423  01DD  303A               	movlw	58
  5424  01DE  0020               	movlb	0	; select bank0
  5425  01DF  00B9               	movwf	??_lutInit
  5426  01E0  0839               	movf	??_lutInit,w
  5427  01E1  00A0               	movwf	eepromWrite@data
  5428  01E2  3062               	movlw	98
  5429  01E3  3187  279E  3181   	fcall	_eepromWrite
  5430                           
  5431                           ;Controller.c: 105:     eepromWrite(0x63, 179);
  5432  01E6  30B3               	movlw	179
  5433  01E7  0020               	movlb	0	; select bank0
  5434  01E8  00B9               	movwf	??_lutInit
  5435  01E9  0839               	movf	??_lutInit,w
  5436  01EA  00A0               	movwf	eepromWrite@data
  5437  01EB  3063               	movlw	99
  5438  01EC  3187  279E  3181   	fcall	_eepromWrite
  5439                           
  5440                           ;Controller.c: 107:     eepromWrite(0x64, 70);
  5441  01EF  3046               	movlw	70
  5442  01F0  0020               	movlb	0	; select bank0
  5443  01F1  00B9               	movwf	??_lutInit
  5444  01F2  0839               	movf	??_lutInit,w
  5445  01F3  00A0               	movwf	eepromWrite@data
  5446  01F4  3064               	movlw	100
  5447  01F5  3187  279E  3181   	fcall	_eepromWrite
  5448                           
  5449                           ;Controller.c: 108:     eepromWrite(0x65, 186);
  5450  01F8  30BA               	movlw	186
  5451  01F9  0020               	movlb	0	; select bank0
  5452  01FA  00B9               	movwf	??_lutInit
  5453  01FB  0839               	movf	??_lutInit,w
  5454  01FC  00A0               	movwf	eepromWrite@data
  5455  01FD  3065               	movlw	101
  5456  01FE  3187  279E  3181   	fcall	_eepromWrite
  5457                           
  5458                           ;Controller.c: 109:     eepromWrite(0x66, 56);
  5459  0201  3038               	movlw	56
  5460  0202  0020               	movlb	0	; select bank0
  5461  0203  00B9               	movwf	??_lutInit
  5462  0204  0839               	movf	??_lutInit,w
  5463  0205  00A0               	movwf	eepromWrite@data
  5464  0206  3066               	movlw	102
  5465  0207  3187  279E  3181   	fcall	_eepromWrite
  5466                           
  5467                           ;Controller.c: 110:     eepromWrite(0x67, 188);
  5468  020A  30BC               	movlw	188
  5469  020B  0020               	movlb	0	; select bank0
  5470  020C  00B9               	movwf	??_lutInit
  5471  020D  0839               	movf	??_lutInit,w
  5472  020E  00A0               	movwf	eepromWrite@data
  5473  020F  3067               	movlw	103
  5474  0210  3187  279E  3181   	fcall	_eepromWrite
  5475  0213                     l2779:
  5476                           
  5477                           ;Controller.c: 111:     char lxMin = eepromRead(0x60);
  5478  0213  3060               	movlw	96
  5479  0214  318F  27BA  3181   	fcall	_eepromRead
  5480  0217  0020               	movlb	0	; select bank0
  5481  0218  00B9               	movwf	??_lutInit
  5482  0219  0839               	movf	??_lutInit,w
  5483  021A  00C2               	movwf	lutInit@lxMin
  5484  021B                     l2781:
  5485                           
  5486                           ;Controller.c: 112:     char lxMax = eepromRead(0x61);
  5487  021B  3061               	movlw	97
  5488  021C  318F  27BA  3181   	fcall	_eepromRead
  5489  021F  0020               	movlb	0	; select bank0
  5490  0220  00B9               	movwf	??_lutInit
  5491  0221  0839               	movf	??_lutInit,w
  5492  0222  00C3               	movwf	lutInit@lxMax
  5493  0223                     l2783:
  5494                           
  5495                           ;Controller.c: 113:     char lyMin = eepromRead(0x62);
  5496  0223  3062               	movlw	98
  5497  0224  318F  27BA  3181   	fcall	_eepromRead
  5498  0227  0020               	movlb	0	; select bank0
  5499  0228  00B9               	movwf	??_lutInit
  5500  0229  0839               	movf	??_lutInit,w
  5501  022A  00C4               	movwf	lutInit@lyMin
  5502  022B                     l2785:
  5503                           
  5504                           ;Controller.c: 114:     char lyMax = eepromRead(0x63);
  5505  022B  3063               	movlw	99
  5506  022C  318F  27BA  3181   	fcall	_eepromRead
  5507  022F  0020               	movlb	0	; select bank0
  5508  0230  00B9               	movwf	??_lutInit
  5509  0231  0839               	movf	??_lutInit,w
  5510  0232  00C5               	movwf	lutInit@lyMax
  5511  0233                     l2787:
  5512                           
  5513                           ;Controller.c: 116:     char rxMin = eepromRead(0x64);
  5514  0233  3064               	movlw	100
  5515  0234  318F  27BA  3181   	fcall	_eepromRead
  5516  0237  0020               	movlb	0	; select bank0
  5517  0238  00B9               	movwf	??_lutInit
  5518  0239  0839               	movf	??_lutInit,w
  5519  023A  00C6               	movwf	lutInit@rxMin
  5520  023B                     l2789:
  5521                           
  5522                           ;Controller.c: 117:     char rxMax = eepromRead(0x65);
  5523  023B  3065               	movlw	101
  5524  023C  318F  27BA  3181   	fcall	_eepromRead
  5525  023F  0020               	movlb	0	; select bank0
  5526  0240  00B9               	movwf	??_lutInit
  5527  0241  0839               	movf	??_lutInit,w
  5528  0242  00C7               	movwf	lutInit@rxMax
  5529  0243                     l2791:
  5530                           
  5531                           ;Controller.c: 118:     char ryMin = eepromRead(0x66);
  5532  0243  3066               	movlw	102
  5533  0244  318F  27BA  3181   	fcall	_eepromRead
  5534  0247  0020               	movlb	0	; select bank0
  5535  0248  00B9               	movwf	??_lutInit
  5536  0249  0839               	movf	??_lutInit,w
  5537  024A  00C8               	movwf	lutInit@ryMin
  5538  024B                     l2793:
  5539                           
  5540                           ;Controller.c: 119:     char ryMax = eepromRead(0x67);
  5541  024B  3067               	movlw	103
  5542  024C  318F  27BA  3181   	fcall	_eepromRead
  5543  024F  0020               	movlb	0	; select bank0
  5544  0250  00B9               	movwf	??_lutInit
  5545  0251  0839               	movf	??_lutInit,w
  5546  0252  00C9               	movwf	lutInit@ryMax
  5547  0253                     l2795:
  5548                           
  5549                           ;Controller.c: 121:     for (int position = 0; position < 256; position++) {
  5550  0253  01CA               	clrf	lutInit@position
  5551  0254  01CB               	clrf	lutInit@position+1
  5552  0255                     l2801:
  5553                           
  5554                           ;Controller.c: 124:         if (position < lxMin) {
  5555  0255  0020               	movlb	0	; select bank0
  5556  0256  084B               	movf	lutInit@position+1,w
  5557  0257  3A80               	xorlw	128
  5558  0258  00B9               	movwf	??_lutInit
  5559  0259  3080               	movlw	128
  5560  025A  0239               	subwf	??_lutInit,w
  5561  025B  1D03               	skipz
  5562  025C  2A5F               	goto	u1805
  5563  025D  0842               	movf	lutInit@lxMin,w
  5564  025E  024A               	subwf	lutInit@position,w
  5565  025F                     u1805:
  5566  025F  1803               	skipnc
  5567  0260  2A62               	goto	u1801
  5568  0261  2A63               	goto	u1800
  5569  0262                     u1801:
  5570  0262  2A70               	goto	l2805
  5571  0263                     u1800:
  5572  0263                     l2803:
  5573                           
  5574                           ;Controller.c: 126:             lutLX[position] = 0;
  5575  0263  30F0               	movlw	240
  5576  0264  0020               	movlb	0	; select bank0
  5577  0265  00B9               	movwf	??_lutInit
  5578  0266  3026               	movlw	38
  5579  0267  00BA               	movwf	??_lutInit+1
  5580  0268  084A               	movf	lutInit@position,w
  5581  0269  0739               	addwf	??_lutInit,w
  5582  026A  0086               	movwf	6
  5583  026B  084B               	movf	lutInit@position+1,w
  5584  026C  3D3A               	addwfc	??_lutInit+1,w
  5585  026D  0087               	movwf	7
  5586  026E  0181               	clrf	1
  5587                           
  5588                           ;Controller.c: 127:         } else if (position > lxMax) {
  5589  026F  2ABD               	goto	l2811
  5590  0270                     l2805:
  5591  0270  0020               	movlb	0	; select bank0
  5592  0271  084B               	movf	lutInit@position+1,w
  5593  0272  3A80               	xorlw	128
  5594  0273  3C80               	sublw	128
  5595  0274  1D03               	skipz
  5596  0275  2A78               	goto	u1815
  5597  0276  084A               	movf	lutInit@position,w
  5598  0277  0243               	subwf	lutInit@lxMax,w
  5599  0278                     u1815:
  5600  0278  1803               	skipnc
  5601  0279  2A7B               	goto	u1811
  5602  027A  2A7C               	goto	u1810
  5603  027B                     u1811:
  5604  027B  2A8E               	goto	l2809
  5605  027C                     u1810:
  5606  027C                     l2807:
  5607                           
  5608                           ;Controller.c: 128:             lutLX[position] = 255;
  5609  027C  30F0               	movlw	240
  5610  027D  0020               	movlb	0	; select bank0
  5611  027E  00B9               	movwf	??_lutInit
  5612  027F  3026               	movlw	38
  5613  0280  00BA               	movwf	??_lutInit+1
  5614  0281  084A               	movf	lutInit@position,w
  5615  0282  0739               	addwf	??_lutInit,w
  5616  0283  00BB               	movwf	??_lutInit+2
  5617  0284  084B               	movf	lutInit@position+1,w
  5618  0285  3D3A               	addwfc	??_lutInit+1,w
  5619  0286  00BC               	movwf	??_lutInit+3
  5620  0287  083B               	movf	??_lutInit+2,w
  5621  0288  0086               	movwf	6
  5622  0289  083C               	movf	??_lutInit+3,w
  5623  028A  0087               	movwf	7
  5624  028B  30FF               	movlw	255
  5625  028C  0081               	movwf	1
  5626                           
  5627                           ;Controller.c: 130:         } else {
  5628  028D  2ABD               	goto	l2811
  5629  028E                     l2809:
  5630                           
  5631                           ;Controller.c: 131:             lutLX[position] = Map(position, lxMin, lxMax, 0, 255);
  5632  028E  0020               	movlb	0	; select bank0
  5633  028F  084B               	movf	lutInit@position+1,w
  5634  0290  00B0               	movwf	Map@x+1
  5635  0291  084A               	movf	lutInit@position,w
  5636  0292  00AF               	movwf	Map@x
  5637  0293  0842               	movf	lutInit@lxMin,w
  5638  0294  00B9               	movwf	??_lutInit
  5639  0295  01BA               	clrf	??_lutInit+1
  5640  0296  0839               	movf	??_lutInit,w
  5641  0297  00B1               	movwf	Map@inMin
  5642  0298  083A               	movf	??_lutInit+1,w
  5643  0299  00B2               	movwf	Map@inMin+1
  5644  029A  0843               	movf	lutInit@lxMax,w
  5645  029B  00BB               	movwf	??_lutInit+2
  5646  029C  01BC               	clrf	??_lutInit+3
  5647  029D  083B               	movf	??_lutInit+2,w
  5648  029E  00B3               	movwf	Map@inMax
  5649  029F  083C               	movf	??_lutInit+3,w
  5650  02A0  00B4               	movwf	Map@inMax+1
  5651  02A1  3000               	movlw	0
  5652  02A2  00B5               	movwf	Map@outMin
  5653  02A3  00B6               	movwf	Map@outMin+1
  5654  02A4  30FF               	movlw	255
  5655  02A5  00B7               	movwf	Map@outMax
  5656  02A6  3000               	movlw	0
  5657  02A7  00B8               	movwf	Map@outMax+1
  5658  02A8  3187  27C3  3181   	fcall	_Map
  5659  02AB  0020               	movlb	0	; select bank0
  5660  02AC  00BD               	movwf	??_lutInit+4
  5661  02AD  30F0               	movlw	240
  5662  02AE  00BE               	movwf	??_lutInit+5
  5663  02AF  3026               	movlw	38
  5664  02B0  00BF               	movwf	??_lutInit+6
  5665  02B1  084A               	movf	lutInit@position,w
  5666  02B2  073E               	addwf	??_lutInit+5,w
  5667  02B3  00C0               	movwf	??_lutInit+7
  5668  02B4  084B               	movf	lutInit@position+1,w
  5669  02B5  3D3F               	addwfc	??_lutInit+6,w
  5670  02B6  00C1               	movwf	??_lutInit+8
  5671  02B7  0840               	movf	??_lutInit+7,w
  5672  02B8  0086               	movwf	6
  5673  02B9  0841               	movf	??_lutInit+8,w
  5674  02BA  0087               	movwf	7
  5675  02BB  083D               	movf	??_lutInit+4,w
  5676  02BC  0081               	movwf	1
  5677  02BD                     l2811:
  5678                           
  5679                           ;Controller.c: 135:         if (position < lyMin) {
  5680  02BD  084B               	movf	lutInit@position+1,w
  5681  02BE  3A80               	xorlw	128
  5682  02BF  00B9               	movwf	??_lutInit
  5683  02C0  3080               	movlw	128
  5684  02C1  0239               	subwf	??_lutInit,w
  5685  02C2  1D03               	skipz
  5686  02C3  2AC6               	goto	u1825
  5687  02C4  0844               	movf	lutInit@lyMin,w
  5688  02C5  024A               	subwf	lutInit@position,w
  5689  02C6                     u1825:
  5690  02C6  1803               	skipnc
  5691  02C7  2AC9               	goto	u1821
  5692  02C8  2ACA               	goto	u1820
  5693  02C9                     u1821:
  5694  02C9  2AD7               	goto	l2815
  5695  02CA                     u1820:
  5696  02CA                     l2813:
  5697                           
  5698                           ;Controller.c: 136:             lutLY[position] = 0;
  5699  02CA  30F0               	movlw	240
  5700  02CB  0020               	movlb	0	; select bank0
  5701  02CC  00B9               	movwf	??_lutInit
  5702  02CD  3025               	movlw	37
  5703  02CE  00BA               	movwf	??_lutInit+1
  5704  02CF  084A               	movf	lutInit@position,w
  5705  02D0  0739               	addwf	??_lutInit,w
  5706  02D1  0086               	movwf	6
  5707  02D2  084B               	movf	lutInit@position+1,w
  5708  02D3  3D3A               	addwfc	??_lutInit+1,w
  5709  02D4  0087               	movwf	7
  5710  02D5  0181               	clrf	1
  5711                           
  5712                           ;Controller.c: 137:         } else if (position > lyMax) {
  5713  02D6  2B24               	goto	l2821
  5714  02D7                     l2815:
  5715  02D7  0020               	movlb	0	; select bank0
  5716  02D8  084B               	movf	lutInit@position+1,w
  5717  02D9  3A80               	xorlw	128
  5718  02DA  3C80               	sublw	128
  5719  02DB  1D03               	skipz
  5720  02DC  2ADF               	goto	u1835
  5721  02DD  084A               	movf	lutInit@position,w
  5722  02DE  0245               	subwf	lutInit@lyMax,w
  5723  02DF                     u1835:
  5724  02DF  1803               	skipnc
  5725  02E0  2AE2               	goto	u1831
  5726  02E1  2AE3               	goto	u1830
  5727  02E2                     u1831:
  5728  02E2  2AF5               	goto	l2819
  5729  02E3                     u1830:
  5730  02E3                     l2817:
  5731                           
  5732                           ;Controller.c: 138:             lutLY[position] = 255;
  5733  02E3  30F0               	movlw	240
  5734  02E4  0020               	movlb	0	; select bank0
  5735  02E5  00B9               	movwf	??_lutInit
  5736  02E6  3025               	movlw	37
  5737  02E7  00BA               	movwf	??_lutInit+1
  5738  02E8  084A               	movf	lutInit@position,w
  5739  02E9  0739               	addwf	??_lutInit,w
  5740  02EA  00BB               	movwf	??_lutInit+2
  5741  02EB  084B               	movf	lutInit@position+1,w
  5742  02EC  3D3A               	addwfc	??_lutInit+1,w
  5743  02ED  00BC               	movwf	??_lutInit+3
  5744  02EE  083B               	movf	??_lutInit+2,w
  5745  02EF  0086               	movwf	6
  5746  02F0  083C               	movf	??_lutInit+3,w
  5747  02F1  0087               	movwf	7
  5748  02F2  30FF               	movlw	255
  5749  02F3  0081               	movwf	1
  5750                           
  5751                           ;Controller.c: 140:         } else {
  5752  02F4  2B24               	goto	l2821
  5753  02F5                     l2819:
  5754                           
  5755                           ;Controller.c: 141:             lutLY[position] = Map(position, lyMin, lyMax, 0, 255);
  5756  02F5  0020               	movlb	0	; select bank0
  5757  02F6  084B               	movf	lutInit@position+1,w
  5758  02F7  00B0               	movwf	Map@x+1
  5759  02F8  084A               	movf	lutInit@position,w
  5760  02F9  00AF               	movwf	Map@x
  5761  02FA  0844               	movf	lutInit@lyMin,w
  5762  02FB  00B9               	movwf	??_lutInit
  5763  02FC  01BA               	clrf	??_lutInit+1
  5764  02FD  0839               	movf	??_lutInit,w
  5765  02FE  00B1               	movwf	Map@inMin
  5766  02FF  083A               	movf	??_lutInit+1,w
  5767  0300  00B2               	movwf	Map@inMin+1
  5768  0301  0845               	movf	lutInit@lyMax,w
  5769  0302  00BB               	movwf	??_lutInit+2
  5770  0303  01BC               	clrf	??_lutInit+3
  5771  0304  083B               	movf	??_lutInit+2,w
  5772  0305  00B3               	movwf	Map@inMax
  5773  0306  083C               	movf	??_lutInit+3,w
  5774  0307  00B4               	movwf	Map@inMax+1
  5775  0308  3000               	movlw	0
  5776  0309  00B5               	movwf	Map@outMin
  5777  030A  00B6               	movwf	Map@outMin+1
  5778  030B  30FF               	movlw	255
  5779  030C  00B7               	movwf	Map@outMax
  5780  030D  3000               	movlw	0
  5781  030E  00B8               	movwf	Map@outMax+1
  5782  030F  3187  27C3  3181   	fcall	_Map
  5783  0312  0020               	movlb	0	; select bank0
  5784  0313  00BD               	movwf	??_lutInit+4
  5785  0314  30F0               	movlw	240
  5786  0315  00BE               	movwf	??_lutInit+5
  5787  0316  3025               	movlw	37
  5788  0317  00BF               	movwf	??_lutInit+6
  5789  0318  084A               	movf	lutInit@position,w
  5790  0319  073E               	addwf	??_lutInit+5,w
  5791  031A  00C0               	movwf	??_lutInit+7
  5792  031B  084B               	movf	lutInit@position+1,w
  5793  031C  3D3F               	addwfc	??_lutInit+6,w
  5794  031D  00C1               	movwf	??_lutInit+8
  5795  031E  0840               	movf	??_lutInit+7,w
  5796  031F  0086               	movwf	6
  5797  0320  0841               	movf	??_lutInit+8,w
  5798  0321  0087               	movwf	7
  5799  0322  083D               	movf	??_lutInit+4,w
  5800  0323  0081               	movwf	1
  5801  0324                     l2821:
  5802                           
  5803                           ;Controller.c: 145:         if (position < rxMin) {
  5804  0324  084B               	movf	lutInit@position+1,w
  5805  0325  3A80               	xorlw	128
  5806  0326  00B9               	movwf	??_lutInit
  5807  0327  3080               	movlw	128
  5808  0328  0239               	subwf	??_lutInit,w
  5809  0329  1D03               	skipz
  5810  032A  2B2D               	goto	u1845
  5811  032B  0846               	movf	lutInit@rxMin,w
  5812  032C  024A               	subwf	lutInit@position,w
  5813  032D                     u1845:
  5814  032D  1803               	skipnc
  5815  032E  2B30               	goto	u1841
  5816  032F  2B31               	goto	u1840
  5817  0330                     u1841:
  5818  0330  2B3E               	goto	l2825
  5819  0331                     u1840:
  5820  0331                     l2823:
  5821                           
  5822                           ;Controller.c: 146:             lutRX[position] = 0;
  5823  0331  30F0               	movlw	240
  5824  0332  0020               	movlb	0	; select bank0
  5825  0333  00B9               	movwf	??_lutInit
  5826  0334  3024               	movlw	36
  5827  0335  00BA               	movwf	??_lutInit+1
  5828  0336  084A               	movf	lutInit@position,w
  5829  0337  0739               	addwf	??_lutInit,w
  5830  0338  0086               	movwf	6
  5831  0339  084B               	movf	lutInit@position+1,w
  5832  033A  3D3A               	addwfc	??_lutInit+1,w
  5833  033B  0087               	movwf	7
  5834  033C  0181               	clrf	1
  5835                           
  5836                           ;Controller.c: 147:         } else if (position > rxMax) {
  5837  033D  2B8B               	goto	l2831
  5838  033E                     l2825:
  5839  033E  0020               	movlb	0	; select bank0
  5840  033F  084B               	movf	lutInit@position+1,w
  5841  0340  3A80               	xorlw	128
  5842  0341  3C80               	sublw	128
  5843  0342  1D03               	skipz
  5844  0343  2B46               	goto	u1855
  5845  0344  084A               	movf	lutInit@position,w
  5846  0345  0247               	subwf	lutInit@rxMax,w
  5847  0346                     u1855:
  5848  0346  1803               	skipnc
  5849  0347  2B49               	goto	u1851
  5850  0348  2B4A               	goto	u1850
  5851  0349                     u1851:
  5852  0349  2B5C               	goto	l2829
  5853  034A                     u1850:
  5854  034A                     l2827:
  5855                           
  5856                           ;Controller.c: 148:             lutRX[position] = 255;
  5857  034A  30F0               	movlw	240
  5858  034B  0020               	movlb	0	; select bank0
  5859  034C  00B9               	movwf	??_lutInit
  5860  034D  3024               	movlw	36
  5861  034E  00BA               	movwf	??_lutInit+1
  5862  034F  084A               	movf	lutInit@position,w
  5863  0350  0739               	addwf	??_lutInit,w
  5864  0351  00BB               	movwf	??_lutInit+2
  5865  0352  084B               	movf	lutInit@position+1,w
  5866  0353  3D3A               	addwfc	??_lutInit+1,w
  5867  0354  00BC               	movwf	??_lutInit+3
  5868  0355  083B               	movf	??_lutInit+2,w
  5869  0356  0086               	movwf	6
  5870  0357  083C               	movf	??_lutInit+3,w
  5871  0358  0087               	movwf	7
  5872  0359  30FF               	movlw	255
  5873  035A  0081               	movwf	1
  5874                           
  5875                           ;Controller.c: 150:         } else {
  5876  035B  2B8B               	goto	l2831
  5877  035C                     l2829:
  5878                           
  5879                           ;Controller.c: 151:             lutRX[position] = Map(position, rxMin, rxMax, 0, 255);
  5880  035C  0020               	movlb	0	; select bank0
  5881  035D  084B               	movf	lutInit@position+1,w
  5882  035E  00B0               	movwf	Map@x+1
  5883  035F  084A               	movf	lutInit@position,w
  5884  0360  00AF               	movwf	Map@x
  5885  0361  0846               	movf	lutInit@rxMin,w
  5886  0362  00B9               	movwf	??_lutInit
  5887  0363  01BA               	clrf	??_lutInit+1
  5888  0364  0839               	movf	??_lutInit,w
  5889  0365  00B1               	movwf	Map@inMin
  5890  0366  083A               	movf	??_lutInit+1,w
  5891  0367  00B2               	movwf	Map@inMin+1
  5892  0368  0847               	movf	lutInit@rxMax,w
  5893  0369  00BB               	movwf	??_lutInit+2
  5894  036A  01BC               	clrf	??_lutInit+3
  5895  036B  083B               	movf	??_lutInit+2,w
  5896  036C  00B3               	movwf	Map@inMax
  5897  036D  083C               	movf	??_lutInit+3,w
  5898  036E  00B4               	movwf	Map@inMax+1
  5899  036F  3000               	movlw	0
  5900  0370  00B5               	movwf	Map@outMin
  5901  0371  00B6               	movwf	Map@outMin+1
  5902  0372  30FF               	movlw	255
  5903  0373  00B7               	movwf	Map@outMax
  5904  0374  3000               	movlw	0
  5905  0375  00B8               	movwf	Map@outMax+1
  5906  0376  3187  27C3  3181   	fcall	_Map
  5907  0379  0020               	movlb	0	; select bank0
  5908  037A  00BD               	movwf	??_lutInit+4
  5909  037B  30F0               	movlw	240
  5910  037C  00BE               	movwf	??_lutInit+5
  5911  037D  3024               	movlw	36
  5912  037E  00BF               	movwf	??_lutInit+6
  5913  037F  084A               	movf	lutInit@position,w
  5914  0380  073E               	addwf	??_lutInit+5,w
  5915  0381  00C0               	movwf	??_lutInit+7
  5916  0382  084B               	movf	lutInit@position+1,w
  5917  0383  3D3F               	addwfc	??_lutInit+6,w
  5918  0384  00C1               	movwf	??_lutInit+8
  5919  0385  0840               	movf	??_lutInit+7,w
  5920  0386  0086               	movwf	6
  5921  0387  0841               	movf	??_lutInit+8,w
  5922  0388  0087               	movwf	7
  5923  0389  083D               	movf	??_lutInit+4,w
  5924  038A  0081               	movwf	1
  5925  038B                     l2831:
  5926                           
  5927                           ;Controller.c: 155:         if (position < ryMin) {
  5928  038B  084B               	movf	lutInit@position+1,w
  5929  038C  3A80               	xorlw	128
  5930  038D  00B9               	movwf	??_lutInit
  5931  038E  3080               	movlw	128
  5932  038F  0239               	subwf	??_lutInit,w
  5933  0390  1D03               	skipz
  5934  0391  2B94               	goto	u1865
  5935  0392  0848               	movf	lutInit@ryMin,w
  5936  0393  024A               	subwf	lutInit@position,w
  5937  0394                     u1865:
  5938  0394  1803               	skipnc
  5939  0395  2B97               	goto	u1861
  5940  0396  2B98               	goto	u1860
  5941  0397                     u1861:
  5942  0397  2BA5               	goto	l2835
  5943  0398                     u1860:
  5944  0398                     l2833:
  5945                           
  5946                           ;Controller.c: 156:             lutRY[position] = 0;
  5947  0398  30F0               	movlw	240
  5948  0399  0020               	movlb	0	; select bank0
  5949  039A  00B9               	movwf	??_lutInit
  5950  039B  3023               	movlw	35
  5951  039C  00BA               	movwf	??_lutInit+1
  5952  039D  084A               	movf	lutInit@position,w
  5953  039E  0739               	addwf	??_lutInit,w
  5954  039F  0086               	movwf	6
  5955  03A0  084B               	movf	lutInit@position+1,w
  5956  03A1  3D3A               	addwfc	??_lutInit+1,w
  5957  03A2  0087               	movwf	7
  5958  03A3  0181               	clrf	1
  5959                           
  5960                           ;Controller.c: 157:         } else if (position > ryMax) {
  5961  03A4  2BF2               	goto	l2841
  5962  03A5                     l2835:
  5963  03A5  0020               	movlb	0	; select bank0
  5964  03A6  084B               	movf	lutInit@position+1,w
  5965  03A7  3A80               	xorlw	128
  5966  03A8  3C80               	sublw	128
  5967  03A9  1D03               	skipz
  5968  03AA  2BAD               	goto	u1875
  5969  03AB  084A               	movf	lutInit@position,w
  5970  03AC  0249               	subwf	lutInit@ryMax,w
  5971  03AD                     u1875:
  5972  03AD  1803               	skipnc
  5973  03AE  2BB0               	goto	u1871
  5974  03AF  2BB1               	goto	u1870
  5975  03B0                     u1871:
  5976  03B0  2BC3               	goto	l2839
  5977  03B1                     u1870:
  5978  03B1                     l2837:
  5979                           
  5980                           ;Controller.c: 158:             lutRY[position] = 255;
  5981  03B1  30F0               	movlw	240
  5982  03B2  0020               	movlb	0	; select bank0
  5983  03B3  00B9               	movwf	??_lutInit
  5984  03B4  3023               	movlw	35
  5985  03B5  00BA               	movwf	??_lutInit+1
  5986  03B6  084A               	movf	lutInit@position,w
  5987  03B7  0739               	addwf	??_lutInit,w
  5988  03B8  00BB               	movwf	??_lutInit+2
  5989  03B9  084B               	movf	lutInit@position+1,w
  5990  03BA  3D3A               	addwfc	??_lutInit+1,w
  5991  03BB  00BC               	movwf	??_lutInit+3
  5992  03BC  083B               	movf	??_lutInit+2,w
  5993  03BD  0086               	movwf	6
  5994  03BE  083C               	movf	??_lutInit+3,w
  5995  03BF  0087               	movwf	7
  5996  03C0  30FF               	movlw	255
  5997  03C1  0081               	movwf	1
  5998                           
  5999                           ;Controller.c: 160:         } else {
  6000  03C2  2BF2               	goto	l2841
  6001  03C3                     l2839:
  6002                           
  6003                           ;Controller.c: 161:             lutRY[position] = Map(position, ryMin, ryMax, 0, 255);
  6004  03C3  0020               	movlb	0	; select bank0
  6005  03C4  084B               	movf	lutInit@position+1,w
  6006  03C5  00B0               	movwf	Map@x+1
  6007  03C6  084A               	movf	lutInit@position,w
  6008  03C7  00AF               	movwf	Map@x
  6009  03C8  0848               	movf	lutInit@ryMin,w
  6010  03C9  00B9               	movwf	??_lutInit
  6011  03CA  01BA               	clrf	??_lutInit+1
  6012  03CB  0839               	movf	??_lutInit,w
  6013  03CC  00B1               	movwf	Map@inMin
  6014  03CD  083A               	movf	??_lutInit+1,w
  6015  03CE  00B2               	movwf	Map@inMin+1
  6016  03CF  0849               	movf	lutInit@ryMax,w
  6017  03D0  00BB               	movwf	??_lutInit+2
  6018  03D1  01BC               	clrf	??_lutInit+3
  6019  03D2  083B               	movf	??_lutInit+2,w
  6020  03D3  00B3               	movwf	Map@inMax
  6021  03D4  083C               	movf	??_lutInit+3,w
  6022  03D5  00B4               	movwf	Map@inMax+1
  6023  03D6  3000               	movlw	0
  6024  03D7  00B5               	movwf	Map@outMin
  6025  03D8  00B6               	movwf	Map@outMin+1
  6026  03D9  30FF               	movlw	255
  6027  03DA  00B7               	movwf	Map@outMax
  6028  03DB  3000               	movlw	0
  6029  03DC  00B8               	movwf	Map@outMax+1
  6030  03DD  3187  27C3  3181   	fcall	_Map
  6031  03E0  0020               	movlb	0	; select bank0
  6032  03E1  00BD               	movwf	??_lutInit+4
  6033  03E2  30F0               	movlw	240
  6034  03E3  00BE               	movwf	??_lutInit+5
  6035  03E4  3023               	movlw	35
  6036  03E5  00BF               	movwf	??_lutInit+6
  6037  03E6  084A               	movf	lutInit@position,w
  6038  03E7  073E               	addwf	??_lutInit+5,w
  6039  03E8  00C0               	movwf	??_lutInit+7
  6040  03E9  084B               	movf	lutInit@position+1,w
  6041  03EA  3D3F               	addwfc	??_lutInit+6,w
  6042  03EB  00C1               	movwf	??_lutInit+8
  6043  03EC  0840               	movf	??_lutInit+7,w
  6044  03ED  0086               	movwf	6
  6045  03EE  0841               	movf	??_lutInit+8,w
  6046  03EF  0087               	movwf	7
  6047  03F0  083D               	movf	??_lutInit+4,w
  6048  03F1  0081               	movwf	1
  6049  03F2                     l2841:
  6050                           
  6051                           ;Controller.c: 164:     }
  6052  03F2  3001               	movlw	1
  6053  03F3  07CA               	addwf	lutInit@position,f
  6054  03F4  3000               	movlw	0
  6055  03F5  3DCB               	addwfc	lutInit@position+1,f
  6056  03F6                     l2843:
  6057  03F6  084B               	movf	lutInit@position+1,w
  6058  03F7  3A80               	xorlw	128
  6059  03F8  00B9               	movwf	??_lutInit
  6060  03F9  3081               	movlw	129
  6061  03FA  0239               	subwf	??_lutInit,w
  6062  03FB  1D03               	skipz
  6063  03FC  2BFF               	goto	u1885
  6064  03FD  3000               	movlw	0
  6065  03FE  024A               	subwf	lutInit@position,w
  6066  03FF                     u1885:
  6067  03FF  1C03               	skipc
  6068  0400  2C02               	goto	u1881
  6069  0401  2C03               	goto	u1880
  6070  0402                     u1881:
  6071  0402  2A55               	goto	l2801
  6072  0403                     u1880:
  6073  0403                     l277:
  6074  0403  0008               	return
  6075  0404                     __end_of_lutInit:
  6076                           
  6077                           	psect	text10
  6078  079E                     __ptext10:	
  6079 ;; *************** function _eepromWrite *****************
  6080 ;; Defined at:
  6081 ;;		line 9 in file "Nvm.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  address         1    wreg     unsigned char 
  6084 ;;  data            1    0[BANK0 ] unsigned char 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;  address         1    1[BANK0 ] unsigned char 
  6087 ;;  interruptSta    1    2[BANK0 ] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0, pclath, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6097 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6098 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6100 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6101 ;;Total ram usage:        3 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    4
  6104 ;; This function calls:
  6105 ;;		_nvmUnlock
  6106 ;; This function is called by:
  6107 ;;		_lutInit
  6108 ;;		_configureController
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           
  6113                           ;psect for function _eepromWrite
  6114  079E                     _eepromWrite:
  6115                           
  6116                           ;incstack = 0
  6117                           ; Regs used in _eepromWrite: [wreg+status,2+status,0+pclath+cstack]
  6118                           ;eepromWrite@address stored from wreg
  6119  079E  0020               	movlb	0	; select bank0
  6120  079F  00A1               	movwf	eepromWrite@address
  6121  07A0                     l2675:
  6122                           
  6123                           ;Nvm.c: 12:     unsigned char interruptStatus = INTCONbits.GIE;
  6124  07A0  3000               	movlw	0
  6125  07A1  1B8B               	btfsc	11,7	;volatile
  6126  07A2  3001               	movlw	1
  6127  07A3  00A2               	movwf	eepromWrite@interruptStatus
  6128  07A4                     l2677:
  6129                           
  6130                           ;Nvm.c: 14:     INTCONbits.GIE = 0;
  6131  07A4  138B               	bcf	11,7	;volatile
  6132  07A5                     l2679:
  6133                           
  6134                           ;Nvm.c: 16:     NVMCON1bits.NVMREGS = 1;
  6135  07A5  0030               	movlb	16	; select bank16
  6136  07A6  171E               	bsf	30,6	;volsfr
  6137  07A7                     l2681:
  6138                           
  6139                           ;Nvm.c: 17:     NVMCON1bits.WREN = 1;
  6140  07A7  151E               	bsf	30,2	;volsfr
  6141  07A8                     l2683:
  6142                           
  6143                           ;Nvm.c: 19:     NVMADRH = 0xF0;
  6144  07A8  30F0               	movlw	240
  6145  07A9  009B               	movwf	27	;volatile
  6146  07AA                     l2685:
  6147                           
  6148                           ;Nvm.c: 20:     NVMADRL = address;
  6149  07AA  0020               	movlb	0	; select bank0
  6150  07AB  0821               	movf	eepromWrite@address,w
  6151  07AC  0030               	movlb	16	; select bank16
  6152  07AD  009A               	movwf	26	;volatile
  6153  07AE                     l2687:
  6154                           
  6155                           ;Nvm.c: 22:     NVMDATL = data;
  6156  07AE  0020               	movlb	0	; select bank0
  6157  07AF  0820               	movf	eepromWrite@data,w
  6158  07B0  0030               	movlb	16	; select bank16
  6159  07B1  009C               	movwf	28	;volatile
  6160  07B2                     l2689:
  6161                           
  6162                           ;Nvm.c: 24:     nvmUnlock();
  6163  07B2  318F  2782  3187   	fcall	_nvmUnlock
  6164  07B5                     l417:	
  6165                           ;Nvm.c: 26:     while (NVMCON1bits.WR);
  6166                           
  6167  07B5  0030               	movlb	16	; select bank16
  6168  07B6  189E               	btfsc	30,1	;volsfr
  6169  07B7  2FB9               	goto	u1691
  6170  07B8  2FBA               	goto	u1690
  6171  07B9                     u1691:
  6172  07B9  2FB5               	goto	l417
  6173  07BA                     u1690:
  6174  07BA                     l419:
  6175                           
  6176                           ;Nvm.c: 28:     NVMCON1bits.WREN = 0;
  6177  07BA  111E               	bcf	30,2	;volsfr
  6178  07BB                     l2691:
  6179                           
  6180                           ;Nvm.c: 30:     if (interruptStatus) INTCONbits.GIE = 1;
  6181  07BB  0020               	movlb	0	; select bank0
  6182  07BC  0822               	movf	eepromWrite@interruptStatus,w
  6183  07BD  1903               	btfsc	3,2
  6184  07BE  2FC0               	goto	u1701
  6185  07BF  2FC1               	goto	u1700
  6186  07C0                     u1701:
  6187  07C0  2FC2               	goto	l421
  6188  07C1                     u1700:
  6189  07C1                     l2693:
  6190  07C1  178B               	bsf	11,7	;volatile
  6191  07C2                     l421:
  6192  07C2  0008               	return
  6193  07C3                     __end_of_eepromWrite:
  6194                           
  6195                           	psect	text11
  6196  0F82                     __ptext11:	
  6197 ;; *************** function _nvmUnlock *****************
  6198 ;; Defined at:
  6199 ;;		line 48 in file "Nvm.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6217 ;;Total ram usage:        0 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    3
  6220 ;; This function calls:
  6221 ;;		Nothing
  6222 ;; This function is called by:
  6223 ;;		_eepromWrite
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           
  6228                           ;psect for function _nvmUnlock
  6229  0F82                     _nvmUnlock:
  6230  0F82                     l2609:	
  6231                           ;incstack = 0
  6232                           ; Regs used in _nvmUnlock: [wreg]
  6233                           
  6234                           
  6235                           ;Nvm.c: 50:     NVMCON2 = 0x55;
  6236  0F82  3055               	movlw	85
  6237  0F83  0030               	movlb	16	; select bank16
  6238  0F84  009F               	movwf	31	;volsfr
  6239                           
  6240                           ;Nvm.c: 51:     NVMCON2 = 0xAA;
  6241  0F85  30AA               	movlw	170
  6242  0F86  009F               	movwf	31	;volsfr
  6243  0F87                     l2611:
  6244                           
  6245                           ;Nvm.c: 52:     NVMCON1bits.WR = 1;
  6246  0F87  149E               	bsf	30,1	;volsfr
  6247  0F88                     l427:
  6248  0F88  0008               	return
  6249  0F89                     __end_of_nvmUnlock:
  6250                           
  6251                           	psect	text12
  6252  0FBA                     __ptext12:	
  6253 ;; *************** function _eepromRead *****************
  6254 ;; Defined at:
  6255 ;;		line 33 in file "Nvm.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  address         1    wreg     unsigned char 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  address         1    1[BANK0 ] unsigned char 
  6260 ;;  data            1    2[BANK0 ] unsigned char 
  6261 ;; Return value:  Size  Location     Type
  6262 ;;                  1    wreg      unsigned char 
  6263 ;; Registers used:
  6264 ;;		wreg
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6271 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6272 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6273 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6274 ;;Total ram usage:        3 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:    3
  6277 ;; This function calls:
  6278 ;;		Nothing
  6279 ;; This function is called by:
  6280 ;;		_lutInit
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           
  6285                           ;psect for function _eepromRead
  6286  0FBA                     _eepromRead:
  6287                           
  6288                           ;incstack = 0
  6289                           ; Regs used in _eepromRead: [wreg]
  6290                           ;eepromRead@address stored from wreg
  6291  0FBA  0020               	movlb	0	; select bank0
  6292  0FBB  00A1               	movwf	eepromRead@address
  6293  0FBC                     l2695:
  6294                           
  6295                           ;Nvm.c: 35:     char data;;Nvm.c: 37:     NVMCON1bits.NVMREGS = 1;
  6296  0FBC  0030               	movlb	16	; select bank16
  6297  0FBD  171E               	bsf	30,6	;volsfr
  6298  0FBE                     l2697:
  6299                           
  6300                           ;Nvm.c: 38:     NVMADRH = 0xF0;
  6301  0FBE  30F0               	movlw	240
  6302  0FBF  009B               	movwf	27	;volatile
  6303                           
  6304                           ;Nvm.c: 39:     NVMADRL = address;
  6305  0FC0  0020               	movlb	0	; select bank0
  6306  0FC1  0821               	movf	eepromRead@address,w
  6307  0FC2  0030               	movlb	16	; select bank16
  6308  0FC3  009A               	movwf	26	;volatile
  6309  0FC4                     l2699:
  6310                           
  6311                           ;Nvm.c: 40:     NVMCON1bits.RD = 1;
  6312  0FC4  141E               	bsf	30,0	;volsfr
  6313                           
  6314                           ;Nvm.c: 42:     data = NVMDATL;
  6315  0FC5  081C               	movf	28,w	;volatile
  6316  0FC6  0020               	movlb	0	; select bank0
  6317  0FC7  00A0               	movwf	??_eepromRead
  6318  0FC8  0820               	movf	??_eepromRead,w
  6319  0FC9  00A2               	movwf	eepromRead@data
  6320                           
  6321                           ;Nvm.c: 44:     return data;
  6322  0FCA  0822               	movf	eepromRead@data,w
  6323  0FCB                     l424:
  6324  0FCB  0008               	return
  6325  0FCC                     __end_of_eepromRead:
  6326                           
  6327                           	psect	text13
  6328  07C3                     __ptext13:	
  6329 ;; *************** function _Map *****************
  6330 ;; Defined at:
  6331 ;;		line 93 in file "Controller.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  x               2   15[BANK0 ] int 
  6334 ;;  inMin           2   17[BANK0 ] int 
  6335 ;;  inMax           2   19[BANK0 ] int 
  6336 ;;  outMin          2   21[BANK0 ] int 
  6337 ;;  outMax          2   23[BANK0 ] int 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      unsigned char 
  6342 ;; Registers used:
  6343 ;;		wreg, status,2, status,0, pclath, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6349 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6352 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6353 ;;Total ram usage:       10 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    4
  6356 ;; This function calls:
  6357 ;;		___awdiv
  6358 ;;		___wmul
  6359 ;; This function is called by:
  6360 ;;		_lutInit
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           
  6365                           ;psect for function _Map
  6366  07C3                     _Map:
  6367  07C3                     l2671:	
  6368                           ;incstack = 0
  6369                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  6370                           
  6371                           
  6372                           ;Controller.c: 95:     return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) + ou
      +                          tMin;
  6373  07C3  0020               	movlb	0	; select bank0
  6374  07C4  0831               	movf	Map@inMin,w
  6375  07C5  0233               	subwf	Map@inMax,w
  6376  07C6  00A6               	movwf	___awdiv@divisor
  6377  07C7  0832               	movf	Map@inMin+1,w
  6378  07C8  3B34               	subwfb	Map@inMax+1,w
  6379  07C9  00A7               	movwf	___awdiv@divisor+1
  6380  07CA  0831               	movf	Map@inMin,w
  6381  07CB  022F               	subwf	Map@x,w
  6382  07CC  00A0               	movwf	___wmul@multiplier
  6383  07CD  0832               	movf	Map@inMin+1,w
  6384  07CE  3B30               	subwfb	Map@x+1,w
  6385  07CF  00A1               	movwf	___wmul@multiplier+1
  6386  07D0  0835               	movf	Map@outMin,w
  6387  07D1  0237               	subwf	Map@outMax,w
  6388  07D2  00A2               	movwf	___wmul@multiplicand
  6389  07D3  0836               	movf	Map@outMin+1,w
  6390  07D4  3B38               	subwfb	Map@outMax+1,w
  6391  07D5  00A3               	movwf	___wmul@multiplicand+1
  6392  07D6  318F  27E0  3187   	fcall	___wmul
  6393  07D9  0020               	movlb	0	; select bank0
  6394  07DA  0821               	movf	?___wmul+1,w
  6395  07DB  00A9               	movwf	___awdiv@dividend+1
  6396  07DC  0820               	movf	?___wmul,w
  6397  07DD  00A8               	movwf	___awdiv@dividend
  6398  07DE  3186  2658  3187   	fcall	___awdiv
  6399  07E1  0020               	movlb	0	; select bank0
  6400  07E2  0826               	movf	?___awdiv,w
  6401  07E3  0735               	addwf	Map@outMin,w
  6402  07E4                     l256:
  6403  07E4  0008               	return
  6404  07E5                     __end_of_Map:
  6405                           
  6406                           	psect	text14
  6407  0FE0                     __ptext14:	
  6408 ;; *************** function ___wmul *****************
  6409 ;; Defined at:
  6410 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6413 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  product         2    4[BANK0 ] unsigned int 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  2    0[BANK0 ] unsigned int 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2, status,0
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6426 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6428 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6429 ;;Total ram usage:        6 bytes
  6430 ;; Hardware stack levels used:    1
  6431 ;; Hardware stack levels required when called:    3
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_Map
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           
  6440                           ;psect for function ___wmul
  6441  0FE0                     ___wmul:
  6442  0FE0                     l2613:	
  6443                           ;incstack = 0
  6444                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6445                           
  6446  0FE0  0020               	movlb	0	; select bank0
  6447  0FE1  01A4               	clrf	___wmul@product
  6448  0FE2  01A5               	clrf	___wmul@product+1
  6449  0FE3                     l2615:
  6450  0FE3  1C20               	btfss	___wmul@multiplier,0
  6451  0FE4  2FE6               	goto	u1551
  6452  0FE5  2FE7               	goto	u1550
  6453  0FE6                     u1551:
  6454  0FE6  2FEB               	goto	l579
  6455  0FE7                     u1550:
  6456  0FE7                     l2617:
  6457  0FE7  0822               	movf	___wmul@multiplicand,w
  6458  0FE8  07A4               	addwf	___wmul@product,f
  6459  0FE9  0823               	movf	___wmul@multiplicand+1,w
  6460  0FEA  3DA5               	addwfc	___wmul@product+1,f
  6461  0FEB                     l579:
  6462  0FEB  3001               	movlw	1
  6463  0FEC                     u1565:
  6464  0FEC  35A2               	lslf	___wmul@multiplicand,f
  6465  0FED  0DA3               	rlf	___wmul@multiplicand+1,f
  6466  0FEE  0B89               	decfsz	9,f
  6467  0FEF  2FEC               	goto	u1565
  6468  0FF0                     l2619:
  6469  0FF0  3001               	movlw	1
  6470  0FF1                     u1575:
  6471  0FF1  36A1               	lsrf	___wmul@multiplier+1,f
  6472  0FF2  0CA0               	rrf	___wmul@multiplier,f
  6473  0FF3  0B89               	decfsz	9,f
  6474  0FF4  2FF1               	goto	u1575
  6475  0FF5                     l2621:
  6476  0FF5  0820               	movf	___wmul@multiplier,w
  6477  0FF6  0421               	iorwf	___wmul@multiplier+1,w
  6478  0FF7  1D03               	btfss	3,2
  6479  0FF8  2FFA               	goto	u1581
  6480  0FF9  2FFB               	goto	u1580
  6481  0FFA                     u1581:
  6482  0FFA  2FE3               	goto	l2615
  6483  0FFB                     u1580:
  6484  0FFB                     l2623:
  6485  0FFB  0825               	movf	___wmul@product+1,w
  6486  0FFC  00A1               	movwf	?___wmul+1
  6487  0FFD  0824               	movf	___wmul@product,w
  6488  0FFE  00A0               	movwf	?___wmul
  6489  0FFF                     l581:
  6490  0FFF  0008               	return
  6491  1000                     __end_of___wmul:
  6492                           
  6493                           	psect	text15
  6494  0658                     __ptext15:	
  6495 ;; *************** function ___awdiv *****************
  6496 ;; Defined at:
  6497 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  divisor         2    6[BANK0 ] int 
  6500 ;;  dividend        2    8[BANK0 ] int 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  quotient        2   13[BANK0 ] int 
  6503 ;;  sign            1   12[BANK0 ] unsigned char 
  6504 ;;  counter         1   11[BANK0 ] unsigned char 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  2    6[BANK0 ] int 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6514 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6515 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6516 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6517 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6518 ;;Total ram usage:        9 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    3
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_Map
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           
  6529                           ;psect for function ___awdiv
  6530  0658                     ___awdiv:
  6531  0658                     l2627:	
  6532                           ;incstack = 0
  6533                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6534                           
  6535  0658  0020               	movlb	0	; select bank0
  6536  0659  01AC               	clrf	___awdiv@sign
  6537  065A                     l2629:
  6538  065A  1FA7               	btfss	___awdiv@divisor+1,7
  6539  065B  2E5D               	goto	u1591
  6540  065C  2E5E               	goto	u1590
  6541  065D                     u1591:
  6542  065D  2E65               	goto	l2635
  6543  065E                     u1590:
  6544  065E                     l2631:
  6545  065E  09A6               	comf	___awdiv@divisor,f
  6546  065F  09A7               	comf	___awdiv@divisor+1,f
  6547  0660  0AA6               	incf	___awdiv@divisor,f
  6548  0661  1903               	skipnz
  6549  0662  0AA7               	incf	___awdiv@divisor+1,f
  6550  0663                     l2633:
  6551  0663  01AC               	clrf	___awdiv@sign
  6552  0664  0AAC               	incf	___awdiv@sign,f
  6553  0665                     l2635:
  6554  0665  1FA9               	btfss	___awdiv@dividend+1,7
  6555  0666  2E68               	goto	u1601
  6556  0667  2E69               	goto	u1600
  6557  0668                     u1601:
  6558  0668  2E72               	goto	l2641
  6559  0669                     u1600:
  6560  0669                     l2637:
  6561  0669  09A8               	comf	___awdiv@dividend,f
  6562  066A  09A9               	comf	___awdiv@dividend+1,f
  6563  066B  0AA8               	incf	___awdiv@dividend,f
  6564  066C  1903               	skipnz
  6565  066D  0AA9               	incf	___awdiv@dividend+1,f
  6566  066E                     l2639:
  6567  066E  3001               	movlw	1
  6568  066F  00AA               	movwf	??___awdiv
  6569  0670  082A               	movf	??___awdiv,w
  6570  0671  06AC               	xorwf	___awdiv@sign,f
  6571  0672                     l2641:
  6572  0672  01AD               	clrf	___awdiv@quotient
  6573  0673  01AE               	clrf	___awdiv@quotient+1
  6574  0674                     l2643:
  6575  0674  0826               	movf	___awdiv@divisor,w
  6576  0675  0427               	iorwf	___awdiv@divisor+1,w
  6577  0676  1903               	btfsc	3,2
  6578  0677  2E79               	goto	u1611
  6579  0678  2E7A               	goto	u1610
  6580  0679                     u1611:
  6581  0679  2EA9               	goto	l2663
  6582  067A                     u1610:
  6583  067A                     l2645:
  6584  067A  01AB               	clrf	___awdiv@counter
  6585  067B  0AAB               	incf	___awdiv@counter,f
  6586  067C  2E86               	goto	l2651
  6587  067D                     l2647:
  6588  067D  3001               	movlw	1
  6589  067E                     u1625:
  6590  067E  35A6               	lslf	___awdiv@divisor,f
  6591  067F  0DA7               	rlf	___awdiv@divisor+1,f
  6592  0680  0B89               	decfsz	9,f
  6593  0681  2E7E               	goto	u1625
  6594  0682                     l2649:
  6595  0682  3001               	movlw	1
  6596  0683  00AA               	movwf	??___awdiv
  6597  0684  082A               	movf	??___awdiv,w
  6598  0685  07AB               	addwf	___awdiv@counter,f
  6599  0686                     l2651:
  6600  0686  1FA7               	btfss	___awdiv@divisor+1,7
  6601  0687  2E89               	goto	u1631
  6602  0688  2E8A               	goto	u1630
  6603  0689                     u1631:
  6604  0689  2E7D               	goto	l2647
  6605  068A                     u1630:
  6606  068A                     l2653:
  6607  068A  3001               	movlw	1
  6608  068B                     u1645:
  6609  068B  35AD               	lslf	___awdiv@quotient,f
  6610  068C  0DAE               	rlf	___awdiv@quotient+1,f
  6611  068D  0B89               	decfsz	9,f
  6612  068E  2E8B               	goto	u1645
  6613  068F  0827               	movf	___awdiv@divisor+1,w
  6614  0690  0229               	subwf	___awdiv@dividend+1,w
  6615  0691  1D03               	skipz
  6616  0692  2E95               	goto	u1655
  6617  0693  0826               	movf	___awdiv@divisor,w
  6618  0694  0228               	subwf	___awdiv@dividend,w
  6619  0695                     u1655:
  6620  0695  1C03               	skipc
  6621  0696  2E98               	goto	u1651
  6622  0697  2E99               	goto	u1650
  6623  0698                     u1651:
  6624  0698  2E9E               	goto	l2659
  6625  0699                     u1650:
  6626  0699                     l2655:
  6627  0699  0826               	movf	___awdiv@divisor,w
  6628  069A  02A8               	subwf	___awdiv@dividend,f
  6629  069B  0827               	movf	___awdiv@divisor+1,w
  6630  069C  3BA9               	subwfb	___awdiv@dividend+1,f
  6631  069D                     l2657:
  6632  069D  142D               	bsf	___awdiv@quotient,0
  6633  069E                     l2659:
  6634  069E  3001               	movlw	1
  6635  069F                     u1665:
  6636  069F  36A7               	lsrf	___awdiv@divisor+1,f
  6637  06A0  0CA6               	rrf	___awdiv@divisor,f
  6638  06A1  0B89               	decfsz	9,f
  6639  06A2  2E9F               	goto	u1665
  6640  06A3                     l2661:
  6641  06A3  3001               	movlw	1
  6642  06A4  02AB               	subwf	___awdiv@counter,f
  6643  06A5  1D03               	btfss	3,2
  6644  06A6  2EA8               	goto	u1671
  6645  06A7  2EA9               	goto	u1670
  6646  06A8                     u1671:
  6647  06A8  2E8A               	goto	l2653
  6648  06A9                     u1670:
  6649  06A9                     l2663:
  6650  06A9  082C               	movf	___awdiv@sign,w
  6651  06AA  1903               	btfsc	3,2
  6652  06AB  2EAD               	goto	u1681
  6653  06AC  2EAE               	goto	u1680
  6654  06AD                     u1681:
  6655  06AD  2EB3               	goto	l2667
  6656  06AE                     u1680:
  6657  06AE                     l2665:
  6658  06AE  09AD               	comf	___awdiv@quotient,f
  6659  06AF  09AE               	comf	___awdiv@quotient+1,f
  6660  06B0  0AAD               	incf	___awdiv@quotient,f
  6661  06B1  1903               	skipnz
  6662  06B2  0AAE               	incf	___awdiv@quotient+1,f
  6663  06B3                     l2667:
  6664  06B3  082E               	movf	___awdiv@quotient+1,w
  6665  06B4  00A7               	movwf	?___awdiv+1
  6666  06B5  082D               	movf	___awdiv@quotient,w
  6667  06B6  00A6               	movwf	?___awdiv
  6668  06B7                     l732:
  6669  06B7  0008               	return
  6670  06B8                     __end_of___awdiv:
  6671                           
  6672                           	psect	text16
  6673  0F98                     __ptext16:	
  6674 ;; *************** function _adcInit *****************
  6675 ;; Defined at:
  6676 ;;		line 21 in file "PicConfig.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;		None
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg, status,2
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6694 ;;Total ram usage:        0 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    3
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_main
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           
  6705                           ;psect for function _adcInit
  6706  0F98                     _adcInit:
  6707  0F98                     l2765:	
  6708                           ;incstack = 0
  6709                           ; Regs used in _adcInit: [wreg+status,2]
  6710                           
  6711                           
  6712                           ;PicConfig.c: 22:     ADCON0 = 0x04;
  6713  0F98  3004               	movlw	4
  6714  0F99  0021               	movlb	1	; select bank1
  6715  0F9A  0093               	movwf	19	;volatile
  6716  0F9B                     l2767:
  6717                           
  6718                           ;PicConfig.c: 23:     ADCON1 = 0;
  6719  0F9B  0194               	clrf	20	;volatile
  6720  0F9C                     l2769:
  6721                           
  6722                           ;PicConfig.c: 24:     ADCON2 = 0;
  6723  0F9C  0195               	clrf	21	;volatile
  6724  0F9D                     l2771:
  6725                           
  6726                           ;PicConfig.c: 25:     ADREF = 0;
  6727  0F9D  019A               	clrf	26	;volatile
  6728  0F9E                     l2773:
  6729                           
  6730                           ;PicConfig.c: 26:     ADCLK = 0x3F;
  6731  0F9E  303F               	movlw	63
  6732  0F9F  0098               	movwf	24	;volatile
  6733  0FA0                     l2775:
  6734                           
  6735                           ;PicConfig.c: 27:     ADCON0bits.ADON = 1;
  6736  0FA0  1793               	bsf	19,7	;volatile
  6737  0FA1                     l372:
  6738  0FA1  0008               	return
  6739  0FA2                     __end_of_adcInit:
  6740                           
  6741                           	psect	intentry
  6742  0004                     __pintentry:	
  6743 ;; *************** function _PS2Command *****************
  6744 ;; Defined at:
  6745 ;;		line 60 in file "main.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;  cmd             1    4[COMMON] unsigned char 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1    wreg      void 
  6752 ;; Registers used:
  6753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6762 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6763 ;;Total ram usage:        3 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    2
  6766 ;; This function calls:
  6767 ;;		_pollController
  6768 ;;		_spiRead
  6769 ;;		_spiWrite
  6770 ;; This function is called by:
  6771 ;;		Interrupt level 1
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775  0004                     _PS2Command:
  6776                           
  6777                           ;incstack = 0
  6778  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6779                           
  6780                           ; Regs used in _PS2Command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6781  0005  3180               	pagesel	$
  6782  0006                     i1l2155:
  6783                           
  6784                           ;main.c: 62:     if (SSP1IF) {
  6785  0006  002E               	movlb	14	; select bank14
  6786  0007  1C0F               	btfss	15,0	;volatile
  6787  0008  280A               	goto	u129_21
  6788  0009  280B               	goto	u129_20
  6789  000A                     u129_21:
  6790  000A  2986               	goto	i1l138
  6791  000B                     u129_20:
  6792  000B                     i1l2157:
  6793                           
  6794                           ;main.c: 64:         char cmd = spiRead();
  6795  000B  318F  277C  3180   	fcall	_spiRead
  6796  000E  00F2               	movwf	??_PS2Command
  6797  000F  0872               	movf	??_PS2Command,w
  6798  0010  00F4               	movwf	PS2Command@cmd
  6799                           
  6800                           ;main.c: 66:         switch (cmdCounter) {
  6801  0011  2941               	goto	i1l2303
  6802  0012                     i1l2159:
  6803                           
  6804                           ;main.c: 74:                         if(cmd == 0x80)
  6805  0012  3080               	movlw	128
  6806  0013  0674               	xorwf	PS2Command@cmd,w
  6807  0014  1D03               	btfss	3,2
  6808  0015  2817               	goto	u130_21
  6809  0016  2818               	goto	u130_20
  6810  0017                     u130_21:
  6811  0017  281A               	goto	i1l92
  6812  0018                     u130_20:
  6813  0018                     i1l2161:
  6814                           
  6815                           ;main.c: 75:                             RD4 = 1;
  6816  0018  160F               	bsf	15,4	;volatile
  6817  0019  2951               	goto	i1l2305
  6818  001A                     i1l92:	
  6819                           ;main.c: 76:                         else
  6820                           
  6821                           
  6822                           ;main.c: 77:                             RD4 = 0;
  6823  001A  120F               	bcf	15,4	;volatile
  6824  001B  2951               	goto	i1l2305
  6825  001C                     i1l2163:
  6826                           
  6827                           ;main.c: 82:                         if (cmd == 0x80)
  6828  001C  3080               	movlw	128
  6829  001D  0674               	xorwf	PS2Command@cmd,w
  6830  001E  1D03               	btfss	3,2
  6831  001F  2821               	goto	u131_21
  6832  0020  2822               	goto	u131_20
  6833  0021                     u131_21:
  6834  0021  2825               	goto	i1l2167
  6835  0022                     u131_20:
  6836  0022                     i1l2165:
  6837                           
  6838                           ;main.c: 83:                             escapeMode = 1;
  6839  0022  01EF               	clrf	_escapeMode
  6840  0023  0AEF               	incf	_escapeMode,f
  6841  0024  2951               	goto	i1l2305
  6842  0025                     i1l2167:
  6843                           
  6844                           ;main.c: 85:                             escapeMode = 0;
  6845  0025  01EF               	clrf	_escapeMode
  6846  0026  2951               	goto	i1l2305
  6847  0027                     i1l2169:
  6848                           
  6849                           ;main.c: 90:                         if (cmd == 0x80)
  6850  0027  3080               	movlw	128
  6851  0028  0674               	xorwf	PS2Command@cmd,w
  6852  0029  1D03               	btfss	3,2
  6853  002A  282C               	goto	u132_21
  6854  002B  282D               	goto	u132_20
  6855  002C                     u132_21:
  6856  002C  2830               	goto	i1l2173
  6857  002D                     u132_20:
  6858  002D                     i1l2171:
  6859                           
  6860                           ;main.c: 91:                             analogMode = 1;
  6861  002D  01F5               	clrf	_analogMode
  6862  002E  0AF5               	incf	_analogMode,f
  6863  002F  2951               	goto	i1l2305
  6864  0030                     i1l2173:
  6865                           
  6866                           ;main.c: 93:                             analogMode = 0;
  6867  0030  01F5               	clrf	_analogMode
  6868  0031  2951               	goto	i1l2305
  6869  0032                     i1l2175:
  6870                           
  6871                           ;main.c: 98:                         if (cmd == 0x80) {
  6872  0032  3080               	movlw	128
  6873  0033  0674               	xorwf	PS2Command@cmd,w
  6874  0034  1D03               	btfss	3,2
  6875  0035  2837               	goto	u133_21
  6876  0036  2838               	goto	u133_20
  6877  0037                     u133_21:
  6878  0037  2842               	goto	i1l2185
  6879  0038                     u133_20:
  6880  0038                     i1l2177:
  6881                           
  6882                           ;main.c: 99:                             response[2] = 0x00;
  6883  0038  01D4               	clrf	_response+2
  6884                           
  6885                           ;main.c: 100:                             response[3] = 0x00;
  6886  0039  01D5               	clrf	_response+3
  6887                           
  6888                           ;main.c: 101:                             response[4] = 0x00;
  6889  003A  01D6               	clrf	_response+4
  6890  003B                     i1l2179:
  6891                           
  6892                           ;main.c: 102:                             response[5] = 0x60;
  6893  003B  3060               	movlw	96
  6894  003C  00F2               	movwf	??_PS2Command
  6895  003D  0872               	movf	??_PS2Command,w
  6896  003E  00D7               	movwf	_response+5
  6897  003F                     i1l2181:
  6898                           
  6899                           ;main.c: 103:                             response[6] = 0x00;
  6900  003F  01D8               	clrf	_response+6
  6901  0040                     i1l2183:
  6902                           
  6903                           ;main.c: 104:                             response[7] = 0x00;
  6904  0040  01D9               	clrf	_response+7
  6905                           
  6906                           ;main.c: 105:                         } else {
  6907  0041  2951               	goto	i1l2305
  6908  0042                     i1l2185:
  6909                           
  6910                           ;main.c: 106:                             response[2] = 0x00;
  6911  0042  01D4               	clrf	_response+2
  6912                           
  6913                           ;main.c: 107:                             response[3] = 0x00;
  6914  0043  01D5               	clrf	_response+3
  6915                           
  6916                           ;main.c: 108:                             response[4] = 0x00;
  6917  0044  01D6               	clrf	_response+4
  6918  0045                     i1l2187:
  6919                           
  6920                           ;main.c: 109:                             response[5] = 0x20;
  6921  0045  3020               	movlw	32
  6922  0046  00F2               	movwf	??_PS2Command
  6923  0047  0872               	movf	??_PS2Command,w
  6924  0048  00D7               	movwf	_response+5
  6925  0049  283F               	goto	i1l2181
  6926  004A                     i1l2195:
  6927  004A  0020               	movlb	0	; select bank0
  6928  004B  086E               	movf	_previousCmd,w
  6929  004C  00F2               	movwf	??_PS2Command
  6930  004D  01F3               	clrf	??_PS2Command+1
  6931                           
  6932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6933                           ; Switch size 1, requested type "simple"
  6934                           ; Number of cases is 1, Range of values is 0 to 0
  6935                           ; switch strategies available:
  6936                           ; Name         Instructions Cycles
  6937                           ; simple_byte            4     3 (average)
  6938                           ; direct_byte            8     6 (fixed)
  6939                           ; jumptable            260     6 (fixed)
  6940                           ;	Chosen strategy is simple_byte
  6941  004E  0873               	movf	??_PS2Command+1,w
  6942  004F  3A00               	xorlw	0	; case 0
  6943  0050  1903               	skipnz
  6944  0051  2853               	goto	i1l3137
  6945  0052  2951               	goto	i1l2305
  6946  0053                     i1l3137:
  6947                           
  6948                           ; Switch size 1, requested type "simple"
  6949                           ; Number of cases is 5, Range of values is 34 to 242
  6950                           ; switch strategies available:
  6951                           ; Name         Instructions Cycles
  6952                           ; simple_byte           16     9 (average)
  6953                           ; jumptable            263     9 (fixed)
  6954                           ;	Chosen strategy is simple_byte
  6955  0053  0872               	movf	??_PS2Command,w
  6956  0054  3A22               	xorlw	34	; case 34
  6957  0055  1903               	skipnz
  6958  0056  2827               	goto	i1l2169
  6959  0057  3A10               	xorlw	16	; case 50
  6960  0058  1903               	skipnz
  6961  0059  2832               	goto	i1l2175
  6962  005A  3A70               	xorlw	112	; case 66
  6963  005B  1903               	skipnz
  6964  005C  2812               	goto	i1l2159
  6965  005D  3A80               	xorlw	128	; case 194
  6966  005E  1903               	skipnz
  6967  005F  281C               	goto	i1l2163
  6968  0060  3A30               	xorlw	48	; case 242
  6969  0061  1903               	skipnz
  6970  0062  2951               	goto	i1l2305
  6971  0063  2951               	goto	i1l2305
  6972  0064                     i1l2197:
  6973  0064  2951               	goto	i1l2305
  6974  0065                     i1l2203:
  6975  0065  0020               	movlb	0	; select bank0
  6976  0066  086E               	movf	_previousCmd,w
  6977  0067  00F2               	movwf	??_PS2Command
  6978  0068  01F3               	clrf	??_PS2Command+1
  6979                           
  6980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6981                           ; Switch size 1, requested type "simple"
  6982                           ; Number of cases is 1, Range of values is 0 to 0
  6983                           ; switch strategies available:
  6984                           ; Name         Instructions Cycles
  6985                           ; simple_byte            4     3 (average)
  6986                           ; direct_byte            8     6 (fixed)
  6987                           ; jumptable            260     6 (fixed)
  6988                           ;	Chosen strategy is simple_byte
  6989  0069  0873               	movf	??_PS2Command+1,w
  6990  006A  3A00               	xorlw	0	; case 0
  6991  006B  1903               	skipnz
  6992  006C  286E               	goto	i1l3139
  6993  006D  2951               	goto	i1l2305
  6994  006E                     i1l3139:
  6995                           
  6996                           ; Switch size 1, requested type "simple"
  6997                           ; Number of cases is 2, Range of values is 66 to 242
  6998                           ; switch strategies available:
  6999                           ; Name         Instructions Cycles
  7000                           ; simple_byte            7     4 (average)
  7001                           ; jumptable            263     9 (fixed)
  7002                           ;	Chosen strategy is simple_byte
  7003  006E  0872               	movf	??_PS2Command,w
  7004  006F  3A42               	xorlw	66	; case 66
  7005  0070  1903               	skipnz
  7006  0071  2864               	goto	i1l2197
  7007  0072  3AB0               	xorlw	176	; case 242
  7008  0073  1903               	skipnz
  7009  0074  2951               	goto	i1l2305
  7010  0075  2951               	goto	i1l2305
  7011  0076                     i1l2205:
  7012                           
  7013                           ;main.c: 158:                         if (analogMode) {
  7014  0076  0875               	movf	_analogMode,w
  7015  0077  1903               	btfsc	3,2
  7016  0078  287A               	goto	u134_21
  7017  0079  287B               	goto	u134_20
  7018  007A                     u134_21:
  7019  007A  288F               	goto	i1l2213
  7020  007B                     u134_20:
  7021  007B                     i1l2207:
  7022                           
  7023                           ;main.c: 159:                             response[2] = 0xFF;
  7024  007B  30FF               	movlw	255
  7025  007C  00F2               	movwf	??_PS2Command
  7026  007D  0872               	movf	??_PS2Command,w
  7027  007E  0020               	movlb	0	; select bank0
  7028  007F  00D4               	movwf	_response+2
  7029                           
  7030                           ;main.c: 160:                             response[3] = 0xFF;
  7031  0080  30FF               	movlw	255
  7032  0081  00F2               	movwf	??_PS2Command
  7033  0082  0872               	movf	??_PS2Command,w
  7034  0083  00D5               	movwf	_response+3
  7035                           
  7036                           ;main.c: 161:                             response[4] = 0xC0;
  7037  0084  30C0               	movlw	192
  7038  0085  00F2               	movwf	??_PS2Command
  7039  0086  0872               	movf	??_PS2Command,w
  7040  0087  00D6               	movwf	_response+4
  7041  0088                     i1l2209:
  7042                           
  7043                           ;main.c: 162:                             response[5] = 0x00;
  7044  0088  01D7               	clrf	_response+5
  7045  0089                     i1l2211:
  7046                           
  7047                           ;main.c: 163:                             response[6] = 0x00;
  7048  0089  01D8               	clrf	_response+6
  7049                           
  7050                           ;main.c: 164:                             response[7] = 0x5A;
  7051  008A  305A               	movlw	90
  7052  008B  00F2               	movwf	??_PS2Command
  7053  008C  0872               	movf	??_PS2Command,w
  7054  008D  00D9               	movwf	_response+7
  7055                           
  7056                           ;main.c: 165:                         } else {
  7057  008E  2951               	goto	i1l2305
  7058  008F                     i1l2213:
  7059                           
  7060                           ;main.c: 166:                             response[2] = 0x00;
  7061  008F  0020               	movlb	0	; select bank0
  7062  0090  01D4               	clrf	_response+2
  7063                           
  7064                           ;main.c: 167:                             response[3] = 0x00;
  7065  0091  01D5               	clrf	_response+3
  7066                           
  7067                           ;main.c: 168:                             response[4] = 0x00;
  7068  0092  01D6               	clrf	_response+4
  7069                           
  7070                           ;main.c: 169:                             response[5] = 0x00;
  7071  0093  01D7               	clrf	_response+5
  7072                           
  7073                           ;main.c: 170:                             response[6] = 0x00;
  7074  0094  01D8               	clrf	_response+6
  7075  0095                     i1l2215:
  7076                           
  7077                           ;main.c: 171:                             response[7] = 0x5A;
  7078  0095  305A               	movlw	90
  7079  0096  00F2               	movwf	??_PS2Command
  7080  0097  0872               	movf	??_PS2Command,w
  7081  0098  00D9               	movwf	_response+7
  7082  0099  2951               	goto	i1l2305
  7083  009A                     i1l2217:
  7084                           
  7085                           ;main.c: 182:                         if (analogMode) {
  7086  009A  0875               	movf	_analogMode,w
  7087  009B  1903               	btfsc	3,2
  7088  009C  289E               	goto	u135_21
  7089  009D  289F               	goto	u135_20
  7090  009E                     u135_21:
  7091  009E  288F               	goto	i1l2213
  7092  009F                     u135_20:
  7093  009F  287B               	goto	i1l2207
  7094  00A0                     i1l2229:
  7095                           
  7096                           ;main.c: 207:                         pollController(response);
  7097  00A0  3052               	movlw	(low (_response| 0))& (0+255)
  7098  00A1  3185  2548  3180   	fcall	_pollController
  7099  00A4                     i1l2231:
  7100                           
  7101                           ;main.c: 208:                         previousCmd = cmd;
  7102  00A4  0874               	movf	PS2Command@cmd,w
  7103  00A5  00F2               	movwf	??_PS2Command
  7104  00A6  0872               	movf	??_PS2Command,w
  7105  00A7  0020               	movlb	0	; select bank0
  7106  00A8  00EE               	movwf	_previousCmd
  7107                           
  7108                           ;main.c: 211:                         break;
  7109  00A9  2951               	goto	i1l2305
  7110  00AA                     i1l2233:
  7111                           
  7112                           ;main.c: 219:                         pollController(response);
  7113  00AA  3052               	movlw	(low (_response| 0))& (0+255)
  7114  00AB  3185  2548  3180   	fcall	_pollController
  7115  00AE  28A4               	goto	i1l2231
  7116  00AF                     i1l2237:
  7117                           
  7118                           ;main.c: 229:                         response[2] = 0x00;
  7119  00AF  0020               	movlb	0	; select bank0
  7120  00B0  01D4               	clrf	_response+2
  7121                           
  7122                           ;main.c: 230:                         response[3] = 0x00;
  7123  00B1  01D5               	clrf	_response+3
  7124                           
  7125                           ;main.c: 231:                         response[4] = 0x00;
  7126  00B2  01D6               	clrf	_response+4
  7127                           
  7128                           ;main.c: 232:                         response[5] = 0x00;
  7129  00B3  01D7               	clrf	_response+5
  7130                           
  7131                           ;main.c: 233:                         response[6] = 0x00;
  7132  00B4  01D8               	clrf	_response+6
  7133                           
  7134                           ;main.c: 234:                         response[7] = 0x00;
  7135  00B5  01D9               	clrf	_response+7
  7136  00B6  28A4               	goto	i1l2231
  7137  00B7                     i1l2241:
  7138                           
  7139                           ;main.c: 248:                         response[2] = 0xC0;
  7140  00B7  30C0               	movlw	192
  7141  00B8  00F2               	movwf	??_PS2Command
  7142  00B9  0872               	movf	??_PS2Command,w
  7143  00BA  0020               	movlb	0	; select bank0
  7144  00BB  00D4               	movwf	_response+2
  7145                           
  7146                           ;main.c: 249:                         response[3] = 0x40;
  7147  00BC  3040               	movlw	64
  7148  00BD  00F2               	movwf	??_PS2Command
  7149  00BE  0872               	movf	??_PS2Command,w
  7150  00BF  00D5               	movwf	_response+3
  7151  00C0                     i1l2243:
  7152                           
  7153                           ;main.c: 251:                         if (analogMode)
  7154  00C0  0875               	movf	_analogMode,w
  7155  00C1  1903               	btfsc	3,2
  7156  00C2  28C4               	goto	u136_21
  7157  00C3  28C5               	goto	u136_20
  7158  00C4                     u136_21:
  7159  00C4  28CA               	goto	i1l2247
  7160  00C5                     u136_20:
  7161  00C5                     i1l2245:
  7162                           
  7163                           ;main.c: 252:                             response[4] = 0x80;
  7164  00C5  3080               	movlw	128
  7165  00C6  00F2               	movwf	??_PS2Command
  7166  00C7  0872               	movf	??_PS2Command,w
  7167  00C8  00D6               	movwf	_response+4
  7168  00C9  28CB               	goto	i1l2249
  7169  00CA                     i1l2247:
  7170                           
  7171                           ;main.c: 254:                             response[4] = 0x00;
  7172  00CA  01D6               	clrf	_response+4
  7173  00CB                     i1l2249:
  7174                           
  7175                           ;main.c: 256:                         response[5] = 0x40;
  7176  00CB  3040               	movlw	64
  7177  00CC  00F2               	movwf	??_PS2Command
  7178  00CD  0872               	movf	??_PS2Command,w
  7179  00CE  00D7               	movwf	_response+5
  7180  00CF                     i1l2251:
  7181                           
  7182                           ;main.c: 257:                         response[6] = 0x80;
  7183  00CF  3080               	movlw	128
  7184  00D0  00F2               	movwf	??_PS2Command
  7185  00D1  0872               	movf	??_PS2Command,w
  7186  00D2  00D8               	movwf	_response+6
  7187                           
  7188                           ;main.c: 258:                         response[7] = 0x00;
  7189  00D3  01D9               	clrf	_response+7
  7190                           
  7191                           ;main.c: 261:                         break;
  7192  00D4  2951               	goto	i1l2305
  7193  00D5                     i1l2253:
  7194                           
  7195                           ;main.c: 269:                         response[2] = 0x00;
  7196  00D5  0020               	movlb	0	; select bank0
  7197  00D6  01D4               	clrf	_response+2
  7198                           
  7199                           ;main.c: 270:                         response[3] = 0x00;
  7200  00D7  01D5               	clrf	_response+3
  7201  00D8                     i1l2255:
  7202                           
  7203                           ;main.c: 271:                         response[4] = 0x80;
  7204  00D8  3080               	movlw	128
  7205  00D9  00F2               	movwf	??_PS2Command
  7206  00DA  0872               	movf	??_PS2Command,w
  7207  00DB  00D6               	movwf	_response+4
  7208  00DC                     i1l2257:
  7209                           
  7210                           ;main.c: 272:                         response[5] = 0x80;
  7211  00DC  3080               	movlw	128
  7212  00DD  00F2               	movwf	??_PS2Command
  7213  00DE  0872               	movf	??_PS2Command,w
  7214  00DF  00D7               	movwf	_response+5
  7215  00E0                     i1l2259:
  7216                           
  7217                           ;main.c: 273:                         response[6] = 0x80;
  7218  00E0  3080               	movlw	128
  7219  00E1  00F2               	movwf	??_PS2Command
  7220  00E2  0872               	movf	??_PS2Command,w
  7221  00E3  00D8               	movwf	_response+6
  7222  00E4                     i1l2261:
  7223                           
  7224                           ;main.c: 274:                         response[7] = 0x50;
  7225  00E4  3050               	movlw	80
  7226  00E5  00F2               	movwf	??_PS2Command
  7227  00E6  0872               	movf	??_PS2Command,w
  7228  00E7  00D9               	movwf	_response+7
  7229                           
  7230                           ;main.c: 276:                         break;
  7231  00E8  2951               	goto	i1l2305
  7232  00E9                     i1l2263:
  7233                           
  7234                           ;main.c: 285:                         response[2] = 0x00;
  7235  00E9  0020               	movlb	0	; select bank0
  7236  00EA  01D4               	clrf	_response+2
  7237                           
  7238                           ;main.c: 286:                         response[3] = 0x00;
  7239  00EB  01D5               	clrf	_response+3
  7240  00EC                     i1l2265:
  7241                           
  7242                           ;main.c: 287:                         response[4] = 0x40;
  7243  00EC  3040               	movlw	64
  7244  00ED  00F2               	movwf	??_PS2Command
  7245  00EE  0872               	movf	??_PS2Command,w
  7246  00EF  00D6               	movwf	_response+4
  7247  00F0                     i1l2267:
  7248                           
  7249                           ;main.c: 288:                         response[5] = 0x00;
  7250  00F0  01D7               	clrf	_response+5
  7251                           
  7252                           ;main.c: 289:                         response[6] = 0x80;
  7253  00F1  3080               	movlw	128
  7254  00F2  00F2               	movwf	??_PS2Command
  7255  00F3  0872               	movf	??_PS2Command,w
  7256  00F4  00D8               	movwf	_response+6
  7257  00F5  2840               	goto	i1l2183
  7258  00F6                     i1l2271:
  7259                           
  7260                           ;main.c: 302:                         response[2] = 0x00;
  7261  00F6  0020               	movlb	0	; select bank0
  7262  00F7  01D4               	clrf	_response+2
  7263                           
  7264                           ;main.c: 303:                         response[3] = 0x00;
  7265  00F8  01D5               	clrf	_response+3
  7266                           
  7267                           ;main.c: 304:                         response[4] = 0x00;
  7268  00F9  01D6               	clrf	_response+4
  7269  00FA                     i1l2273:
  7270                           
  7271                           ;main.c: 305:                         response[5] = 0x20;
  7272  00FA  3020               	movlw	32
  7273  00FB  00F2               	movwf	??_PS2Command
  7274  00FC  0872               	movf	??_PS2Command,w
  7275  00FD  00D7               	movwf	_response+5
  7276  00FE                     i1l2275:
  7277                           
  7278                           ;main.c: 306:                         response[6] = 0x00;
  7279  00FE  01D8               	clrf	_response+6
  7280  00FF                     i1l2277:
  7281                           
  7282                           ;main.c: 307:                         response[7] = 0x00;
  7283  00FF  01D9               	clrf	_response+7
  7284  0100  28A4               	goto	i1l2231
  7285  0101                     i1l2281:
  7286                           
  7287                           ;main.c: 321:                         response[2] = 0x00;
  7288  0101  0020               	movlb	0	; select bank0
  7289  0102  01D4               	clrf	_response+2
  7290  0103                     i1l2283:
  7291                           
  7292                           ;main.c: 322:                         response[3] = 0x01;
  7293  0103  01D5               	clrf	_response+3
  7294  0104  0AD5               	incf	_response+3,f
  7295  0105                     i1l2285:
  7296                           
  7297                           ;main.c: 323:                         response[4] = 0xFF;
  7298  0105  30FF               	movlw	255
  7299  0106  00F2               	movwf	??_PS2Command
  7300  0107  0872               	movf	??_PS2Command,w
  7301  0108  00D6               	movwf	_response+4
  7302  0109                     i1l2287:
  7303                           
  7304                           ;main.c: 324:                         response[5] = 0xFF;
  7305  0109  30FF               	movlw	255
  7306  010A  00F2               	movwf	??_PS2Command
  7307  010B  0872               	movf	??_PS2Command,w
  7308  010C  00D7               	movwf	_response+5
  7309  010D                     i1l2289:
  7310                           
  7311                           ;main.c: 325:                         response[6] = 0xFF;
  7312  010D  30FF               	movlw	255
  7313  010E  00F2               	movwf	??_PS2Command
  7314  010F  0872               	movf	??_PS2Command,w
  7315  0110  00D8               	movwf	_response+6
  7316  0111                     i1l2291:
  7317                           
  7318                           ;main.c: 326:                         response[7] = 0xFF;
  7319  0111  30FF               	movlw	255
  7320  0112  00F2               	movwf	??_PS2Command
  7321  0113  0872               	movf	??_PS2Command,w
  7322  0114  00D9               	movwf	_response+7
  7323                           
  7324                           ;main.c: 328:                         break;
  7325  0115  2951               	goto	i1l2305
  7326  0116                     i1l2299:
  7327  0116  0874               	movf	PS2Command@cmd,w
  7328  0117  00F2               	movwf	??_PS2Command
  7329  0118  01F3               	clrf	??_PS2Command+1
  7330                           
  7331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7332                           ; Switch size 1, requested type "simple"
  7333                           ; Number of cases is 1, Range of values is 0 to 0
  7334                           ; switch strategies available:
  7335                           ; Name         Instructions Cycles
  7336                           ; simple_byte            4     3 (average)
  7337                           ; direct_byte            8     6 (fixed)
  7338                           ; jumptable            260     6 (fixed)
  7339                           ;	Chosen strategy is simple_byte
  7340  0119  0873               	movf	??_PS2Command+1,w
  7341  011A  3A00               	xorlw	0	; case 0
  7342  011B  1903               	skipnz
  7343  011C  291E               	goto	i1l3141
  7344  011D  2951               	goto	i1l2305
  7345  011E                     i1l3141:
  7346                           
  7347                           ; Switch size 1, requested type "simple"
  7348                           ; Number of cases is 11, Range of values is 2 to 242
  7349                           ; switch strategies available:
  7350                           ; Name         Instructions Cycles
  7351                           ; simple_byte           34    18 (average)
  7352                           ; jumptable            263     9 (fixed)
  7353                           ;	Chosen strategy is simple_byte
  7354  011E  0872               	movf	??_PS2Command,w
  7355  011F  3A02               	xorlw	2	; case 2
  7356  0120  1903               	skipnz
  7357  0121  2876               	goto	i1l2205
  7358  0122  3A10               	xorlw	16	; case 18
  7359  0123  1903               	skipnz
  7360  0124  289A               	goto	i1l2217
  7361  0125  3A30               	xorlw	48	; case 34
  7362  0126  1903               	skipnz
  7363  0127  28AF               	goto	i1l2237
  7364  0128  3A10               	xorlw	16	; case 50
  7365  0129  1903               	skipnz
  7366  012A  28F6               	goto	i1l2271
  7367  012B  3A70               	xorlw	112	; case 66
  7368  012C  1903               	skipnz
  7369  012D  28A0               	goto	i1l2229
  7370  012E  3A20               	xorlw	32	; case 98
  7371  012F  1903               	skipnz
  7372  0130  28D5               	goto	i1l2253
  7373  0131  3AC0               	xorlw	192	; case 162
  7374  0132  1903               	skipnz
  7375  0133  28B7               	goto	i1l2241
  7376  0134  3A10               	xorlw	16	; case 178
  7377  0135  1903               	skipnz
  7378  0136  2901               	goto	i1l2281
  7379  0137  3A70               	xorlw	112	; case 194
  7380  0138  1903               	skipnz
  7381  0139  28AA               	goto	i1l2233
  7382  013A  3A20               	xorlw	32	; case 226
  7383  013B  1903               	skipnz
  7384  013C  28E9               	goto	i1l2263
  7385  013D  3A10               	xorlw	16	; case 242
  7386  013E  1903               	skipnz
  7387  013F  288F               	goto	i1l2213
  7388  0140  2951               	goto	i1l2305
  7389  0141                     i1l2303:
  7390  0141  0878               	movf	_cmdCounter,w
  7391  0142  00F2               	movwf	??_PS2Command
  7392  0143  01F3               	clrf	??_PS2Command+1
  7393                           
  7394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7395                           ; Switch size 1, requested type "simple"
  7396                           ; Number of cases is 1, Range of values is 0 to 0
  7397                           ; switch strategies available:
  7398                           ; Name         Instructions Cycles
  7399                           ; simple_byte            4     3 (average)
  7400                           ; direct_byte            8     6 (fixed)
  7401                           ; jumptable            260     6 (fixed)
  7402                           ;	Chosen strategy is simple_byte
  7403  0144  0873               	movf	??_PS2Command+1,w
  7404  0145  3A00               	xorlw	0	; case 0
  7405  0146  1903               	skipnz
  7406  0147  2949               	goto	i1l3143
  7407  0148  2916               	goto	i1l2299
  7408  0149                     i1l3143:
  7409                           
  7410                           ; Switch size 1, requested type "simple"
  7411                           ; Number of cases is 2, Range of values is 3 to 4
  7412                           ; switch strategies available:
  7413                           ; Name         Instructions Cycles
  7414                           ; simple_byte            7     4 (average)
  7415                           ; direct_byte           13     9 (fixed)
  7416                           ; jumptable            263     9 (fixed)
  7417                           ;	Chosen strategy is simple_byte
  7418  0149  0872               	movf	??_PS2Command,w
  7419  014A  3A03               	xorlw	3	; case 3
  7420  014B  1903               	skipnz
  7421  014C  284A               	goto	i1l2195
  7422  014D  3A07               	xorlw	7	; case 4
  7423  014E  1903               	skipnz
  7424  014F  2865               	goto	i1l2203
  7425  0150  2916               	goto	i1l2299
  7426  0151                     i1l2305:
  7427                           
  7428                           ;main.c: 353:         if (escapeMode) {
  7429  0151  0020               	movlb	0	; select bank0
  7430  0152  086F               	movf	_escapeMode,w
  7431  0153  1903               	btfsc	3,2
  7432  0154  2956               	goto	u137_21
  7433  0155  2957               	goto	u137_20
  7434  0156                     u137_21:
  7435  0156  295C               	goto	i1l2309
  7436  0157                     u137_20:
  7437  0157                     i1l2307:
  7438                           
  7439                           ;main.c: 354:             response[0] = 0xCF;
  7440  0157  30CF               	movlw	207
  7441  0158  00F2               	movwf	??_PS2Command
  7442  0159  0872               	movf	??_PS2Command,w
  7443  015A  00D2               	movwf	_response
  7444                           
  7445                           ;main.c: 355:         } else {
  7446  015B  296A               	goto	i1l2315
  7447  015C                     i1l2309:
  7448                           
  7449                           ;main.c: 357:             if (analogMode)
  7450  015C  0875               	movf	_analogMode,w
  7451  015D  1903               	btfsc	3,2
  7452  015E  2960               	goto	u138_21
  7453  015F  2961               	goto	u138_20
  7454  0160                     u138_21:
  7455  0160  2966               	goto	i1l2313
  7456  0161                     u138_20:
  7457  0161                     i1l2311:
  7458                           
  7459                           ;main.c: 358:                 response[0] = 0x9E;
  7460  0161  309E               	movlw	158
  7461  0162  00F2               	movwf	??_PS2Command
  7462  0163  0872               	movf	??_PS2Command,w
  7463  0164  00D2               	movwf	_response
  7464  0165  296A               	goto	i1l2315
  7465  0166                     i1l2313:
  7466                           
  7467                           ;main.c: 360:                 response[0] = 0x82;
  7468  0166  3082               	movlw	130
  7469  0167  00F2               	movwf	??_PS2Command
  7470  0168  0872               	movf	??_PS2Command,w
  7471  0169  00D2               	movwf	_response
  7472  016A                     i1l2315:
  7473                           
  7474                           ;main.c: 366:         spiWrite(response[cmdCounter]);
  7475  016A  0878               	movf	_cmdCounter,w
  7476  016B  3E52               	addlw	(low (_response| 0))& (0+255)
  7477  016C  0086               	movwf	6
  7478  016D  0187               	clrf	7
  7479  016E  0801               	movf	1,w
  7480  016F  318F  2771  3180   	fcall	_spiWrite
  7481  0172                     i1l2317:
  7482                           
  7483                           ;main.c: 369:         if (cmdCounter < responseLength) {
  7484  0172  0020               	movlb	0	; select bank0
  7485  0173  084C               	movf	_responseLength,w
  7486  0174  0278               	subwf	_cmdCounter,w
  7487  0175  1803               	skipnc
  7488  0176  2978               	goto	u139_21
  7489  0177  2979               	goto	u139_20
  7490  0178                     u139_21:
  7491  0178  297D               	goto	i1l2321
  7492  0179                     u139_20:
  7493  0179                     i1l2319:
  7494                           
  7495                           ;main.c: 370:             cmdCounter++;
  7496  0179  3001               	movlw	1
  7497  017A  00F2               	movwf	??_PS2Command
  7498  017B  0872               	movf	??_PS2Command,w
  7499  017C  07F8               	addwf	_cmdCounter,f
  7500  017D                     i1l2321:
  7501                           
  7502                           ;main.c: 374:         RA4 = 0;
  7503  017D  120C               	bcf	12,4	;volatile
  7504  017E                     i1l2323:
  7505                           
  7506                           ;main.c: 375:         _delay((unsigned long)((1)*(32000000/4000000.0)));
  7507  017E  3200               	nop2	;2 cycle nop
  7508  017F  3200               	nop2	;2 cycle nop
  7509  0180  3200               	nop2	;2 cycle nop
  7510  0181  3200               	nop2	;2 cycle nop
  7511  0182                     i1l2325:
  7512                           
  7513                           ;main.c: 376:         RA4 = 1;
  7514  0182  0020               	movlb	0	; select bank0
  7515  0183  160C               	bsf	12,4	;volatile
  7516  0184                     i1l2327:
  7517                           
  7518                           ;main.c: 378:         SSP1IF = 0;
  7519  0184  002E               	movlb	14	; select bank14
  7520  0185  100F               	bcf	15,0	;volatile
  7521  0186                     i1l138:
  7522  0186  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7523  0187  0009               	retfie
  7524  0188                     __end_of_PS2Command:
  7525                           
  7526                           	psect	text18
  7527  0F71                     __ptext18:	
  7528 ;; *************** function _spiWrite *****************
  7529 ;; Defined at:
  7530 ;;		line 32 in file "Spi.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;  dat             1    wreg     unsigned char 
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;  dat             1    0[COMMON] unsigned char 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  1    wreg      void 
  7537 ;; Registers used:
  7538 ;;		wreg
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7548 ;;Total ram usage:        1 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; This function calls:
  7551 ;;		Nothing
  7552 ;; This function is called by:
  7553 ;;		_PS2Command
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           
  7558                           ;psect for function _spiWrite
  7559  0F71                     _spiWrite:
  7560                           
  7561                           ;incstack = 0
  7562                           ; Regs used in _spiWrite: [wreg]
  7563                           ;spiWrite@dat stored from wreg
  7564  0F71  00F0               	movwf	spiWrite@dat
  7565  0F72                     i1l1997:
  7566                           
  7567                           ;Spi.c: 32: void spiWrite(char dat);Spi.c: 33: {;Spi.c: 34:     SSP1BUF = dat;
  7568  0F72  0870               	movf	spiWrite@dat,w
  7569  0F73  0023               	movlb	3	; select bank3
  7570  0F74  008C               	movwf	12	;volatile
  7571  0F75                     i1l397:
  7572  0F75  0008               	return
  7573  0F76                     __end_of_spiWrite:
  7574                           
  7575                           	psect	text19
  7576  0F7C                     __ptext19:	
  7577 ;; *************** function _spiRead *****************
  7578 ;; Defined at:
  7579 ;;		line 37 in file "Spi.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      unsigned char 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, status,0, pclath, cstack
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7597 ;;Total ram usage:        0 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:    1
  7600 ;; This function calls:
  7601 ;;		_spiReceiveWait
  7602 ;; This function is called by:
  7603 ;;		_PS2Command
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _spiRead
  7609  0F7C                     _spiRead:
  7610  0F7C                     i1l1991:	
  7611                           ;incstack = 0
  7612                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  7613                           
  7614                           
  7615                           ;Spi.c: 39:     spiReceiveWait();
  7616  0F7C  318F  2776  318F   	fcall	_spiReceiveWait
  7617  0F7F                     i1l1993:
  7618                           
  7619                           ;Spi.c: 40:     return(SSP1BUF);
  7620  0F7F  0023               	movlb	3	; select bank3
  7621  0F80  080C               	movf	12,w	;volatile
  7622  0F81                     i1l400:
  7623  0F81  0008               	return
  7624  0F82                     __end_of_spiRead:
  7625                           
  7626                           	psect	text20
  7627  0F76                     __ptext20:	
  7628 ;; *************** function _spiReceiveWait *****************
  7629 ;; Defined at:
  7630 ;;		line 27 in file "Spi.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;		None
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      void 
  7637 ;; Registers used:
  7638 ;;		None
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7648 ;;Total ram usage:        0 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; This function calls:
  7651 ;;		Nothing
  7652 ;; This function is called by:
  7653 ;;		_spiRead
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           
  7658                           ;psect for function _spiReceiveWait
  7659  0F76                     _spiReceiveWait:
  7660  0F76                     i1l1947:	
  7661                           ;incstack = 0
  7662                           ; Regs used in _spiReceiveWait: []
  7663                           
  7664  0F76                     i1l391:	
  7665                           ;Spi.c: 29:     while ( !SSP1STATbits.BF );
  7666                           
  7667  0F76  0023               	movlb	3	; select bank3
  7668  0F77  1C0F               	btfss	15,0	;volatile
  7669  0F78  2F7A               	goto	u103_21
  7670  0F79  2F7B               	goto	u103_20
  7671  0F7A                     u103_21:
  7672  0F7A  2F76               	goto	i1l391
  7673  0F7B                     u103_20:
  7674  0F7B                     i1l394:
  7675  0F7B  0008               	return
  7676  0F7C                     __end_of_spiReceiveWait:
  7677                           
  7678                           	psect	text21
  7679  0548                     __ptext21:	
  7680 ;; *************** function _pollController *****************
  7681 ;; Defined at:
  7682 ;;		line 27 in file "main.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;  response        1    wreg     PTR unsigned char 
  7685 ;;		 -> response(20), 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;  response        1    1[COMMON] PTR unsigned char 
  7688 ;;		 -> response(20), 
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      void 
  7691 ;; Registers used:
  7692 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7702 ;;Total ram usage:        2 bytes
  7703 ;; Hardware stack levels used:    1
  7704 ;; This function calls:
  7705 ;;		Nothing
  7706 ;; This function is called by:
  7707 ;;		_PS2Command
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           
  7712                           ;psect for function _pollController
  7713  0548                     _pollController:
  7714                           
  7715                           ;incstack = 0
  7716                           ; Regs used in _pollController: [wreg+fsr1l+fsr1h+status,2+status,0]
  7717                           ;pollController@response stored from wreg
  7718  0548  00F1               	movwf	pollController@response
  7719  0549                     i1l1949:
  7720                           
  7721                           ;main.c: 29:     responseLength = 5;
  7722  0549  3005               	movlw	5
  7723  054A  00F0               	movwf	??_pollController
  7724  054B  0870               	movf	??_pollController,w
  7725  054C  0020               	movlb	0	; select bank0
  7726  054D  00CC               	movwf	_responseLength
  7727  054E                     i1l1951:
  7728                           
  7729                           ;main.c: 31:     response[2] = digitalStateFirst;
  7730  054E  0877               	movf	_digitalStateFirst,w
  7731  054F  00F0               	movwf	??_pollController
  7732  0550  0871               	movf	pollController@response,w
  7733  0551  3E02               	addlw	2
  7734  0552  0086               	movwf	6
  7735  0553  0187               	clrf	7
  7736  0554  0870               	movf	??_pollController,w
  7737  0555  0081               	movwf	1
  7738  0556                     i1l1953:
  7739                           
  7740                           ;main.c: 32:     response[3] = digitalStateSecond;
  7741  0556  0876               	movf	_digitalStateSecond,w
  7742  0557  00F0               	movwf	??_pollController
  7743  0558  0871               	movf	pollController@response,w
  7744  0559  3E03               	addlw	3
  7745  055A  0086               	movwf	6
  7746  055B  0187               	clrf	7
  7747  055C  0870               	movf	??_pollController,w
  7748  055D  0081               	movwf	1
  7749  055E                     i1l1955:
  7750                           
  7751                           ;main.c: 34:     response[4] = rxData;
  7752  055E  0851               	movf	_rxData,w
  7753  055F  00F0               	movwf	??_pollController
  7754  0560  0871               	movf	pollController@response,w
  7755  0561  3E04               	addlw	4
  7756  0562  0086               	movwf	6
  7757  0563  0187               	clrf	7
  7758  0564  0870               	movf	??_pollController,w
  7759  0565  0081               	movwf	1
  7760  0566                     i1l1957:
  7761                           
  7762                           ;main.c: 35:     response[5] = ryData;
  7763  0566  0850               	movf	_ryData,w
  7764  0567  00F0               	movwf	??_pollController
  7765  0568  0871               	movf	pollController@response,w
  7766  0569  3E05               	addlw	5
  7767  056A  0086               	movwf	6
  7768  056B  0187               	clrf	7
  7769  056C  0870               	movf	??_pollController,w
  7770  056D  0081               	movwf	1
  7771  056E                     i1l1959:
  7772                           
  7773                           ;main.c: 36:     response[6] = lxData;
  7774  056E  084F               	movf	_lxData,w
  7775  056F  00F0               	movwf	??_pollController
  7776  0570  0871               	movf	pollController@response,w
  7777  0571  3E06               	addlw	6
  7778  0572  0086               	movwf	6
  7779  0573  0187               	clrf	7
  7780  0574  0870               	movf	??_pollController,w
  7781  0575  0081               	movwf	1
  7782  0576                     i1l1961:
  7783                           
  7784                           ;main.c: 37:     response[7] = lyData;
  7785  0576  084E               	movf	_lyData,w
  7786  0577  00F0               	movwf	??_pollController
  7787  0578  0871               	movf	pollController@response,w
  7788  0579  3E07               	addlw	7
  7789  057A  0086               	movwf	6
  7790  057B  0187               	clrf	7
  7791  057C  0870               	movf	??_pollController,w
  7792  057D  0081               	movwf	1
  7793  057E                     i1l1963:
  7794                           
  7795                           ;main.c: 39:     if (analogMode) {
  7796  057E  0875               	movf	_analogMode,w
  7797  057F  1903               	btfsc	3,2
  7798  0580  2D82               	goto	u104_21
  7799  0581  2D83               	goto	u104_20
  7800  0582                     u104_21:
  7801  0582  2DE9               	goto	i1l82
  7802  0583                     u104_20:
  7803  0583                     i1l1965:
  7804                           
  7805                           ;main.c: 41:         responseLength = 20;
  7806  0583  3014               	movlw	20
  7807  0584  00F0               	movwf	??_pollController
  7808  0585  0870               	movf	??_pollController,w
  7809  0586  00CC               	movwf	_responseLength
  7810  0587                     i1l1967:
  7811                           
  7812                           ;main.c: 43:         response[8] = analogStateFirst[2];
  7813  0587  0021               	movlb	1	; select bank1
  7814  0588  0852               	movf	(_analogStateFirst^(0+128)+2),w
  7815  0589  00F0               	movwf	??_pollController
  7816  058A  0871               	movf	pollController@response,w
  7817  058B  3E08               	addlw	8
  7818  058C  0086               	movwf	6
  7819  058D  0187               	clrf	7
  7820  058E  0870               	movf	??_pollController,w
  7821  058F  0081               	movwf	1
  7822  0590                     i1l1969:
  7823                           
  7824                           ;main.c: 44:         response[9] = analogStateFirst[0];
  7825  0590  0850               	movf	_analogStateFirst^(0+128),w
  7826  0591  00F0               	movwf	??_pollController
  7827  0592  0871               	movf	pollController@response,w
  7828  0593  3E09               	addlw	9
  7829  0594  0086               	movwf	6
  7830  0595  0187               	clrf	7
  7831  0596  0870               	movf	??_pollController,w
  7832  0597  0081               	movwf	1
  7833  0598                     i1l1971:
  7834                           
  7835                           ;main.c: 45:         response[10] = analogStateFirst[3];
  7836  0598  0853               	movf	(_analogStateFirst^(0+128)+3),w
  7837  0599  00F0               	movwf	??_pollController
  7838  059A  0871               	movf	pollController@response,w
  7839  059B  3E0A               	addlw	10
  7840  059C  0086               	movwf	6
  7841  059D  0187               	clrf	7
  7842  059E  0870               	movf	??_pollController,w
  7843  059F  0081               	movwf	1
  7844  05A0                     i1l1973:
  7845                           
  7846                           ;main.c: 46:         response[11] = analogStateFirst[1];
  7847  05A0  0851               	movf	(_analogStateFirst^(0+128)+1),w
  7848  05A1  00F0               	movwf	??_pollController
  7849  05A2  0871               	movf	pollController@response,w
  7850  05A3  3E0B               	addlw	11
  7851  05A4  0086               	movwf	6
  7852  05A5  0187               	clrf	7
  7853  05A6  0870               	movf	??_pollController,w
  7854  05A7  0081               	movwf	1
  7855  05A8                     i1l1975:
  7856                           
  7857                           ;main.c: 47:         response[12] = analogStateSecond[3];
  7858  05A8  0020               	movlb	0	; select bank0
  7859  05A9  0869               	movf	_analogStateSecond+3,w
  7860  05AA  00F0               	movwf	??_pollController
  7861  05AB  0871               	movf	pollController@response,w
  7862  05AC  3E0C               	addlw	12
  7863  05AD  0086               	movwf	6
  7864  05AE  0187               	clrf	7
  7865  05AF  0870               	movf	??_pollController,w
  7866  05B0  0081               	movwf	1
  7867  05B1                     i1l1977:
  7868                           
  7869                           ;main.c: 48:         response[13] = analogStateSecond[2];
  7870  05B1  0868               	movf	_analogStateSecond+2,w
  7871  05B2  00F0               	movwf	??_pollController
  7872  05B3  0871               	movf	pollController@response,w
  7873  05B4  3E0D               	addlw	13
  7874  05B5  0086               	movwf	6
  7875  05B6  0187               	clrf	7
  7876  05B7  0870               	movf	??_pollController,w
  7877  05B8  0081               	movwf	1
  7878  05B9                     i1l1979:
  7879                           
  7880                           ;main.c: 49:         response[14] = analogStateSecond[1];
  7881  05B9  0867               	movf	_analogStateSecond+1,w
  7882  05BA  00F0               	movwf	??_pollController
  7883  05BB  0871               	movf	pollController@response,w
  7884  05BC  3E0E               	addlw	14
  7885  05BD  0086               	movwf	6
  7886  05BE  0187               	clrf	7
  7887  05BF  0870               	movf	??_pollController,w
  7888  05C0  0081               	movwf	1
  7889  05C1                     i1l1981:
  7890                           
  7891                           ;main.c: 50:         response[15] = analogStateSecond[0];
  7892  05C1  0866               	movf	_analogStateSecond,w
  7893  05C2  00F0               	movwf	??_pollController
  7894  05C3  0871               	movf	pollController@response,w
  7895  05C4  3E0F               	addlw	15
  7896  05C5  0086               	movwf	6
  7897  05C6  0187               	clrf	7
  7898  05C7  0870               	movf	??_pollController,w
  7899  05C8  0081               	movwf	1
  7900  05C9                     i1l1983:
  7901                           
  7902                           ;main.c: 51:         response[16] = analogStateSecond[5];
  7903  05C9  086B               	movf	_analogStateSecond+5,w
  7904  05CA  00F0               	movwf	??_pollController
  7905  05CB  0871               	movf	pollController@response,w
  7906  05CC  3E10               	addlw	16
  7907  05CD  0086               	movwf	6
  7908  05CE  0187               	clrf	7
  7909  05CF  0870               	movf	??_pollController,w
  7910  05D0  0081               	movwf	1
  7911  05D1                     i1l1985:
  7912                           
  7913                           ;main.c: 52:         response[17] = analogStateSecond[4];
  7914  05D1  086A               	movf	_analogStateSecond+4,w
  7915  05D2  00F0               	movwf	??_pollController
  7916  05D3  0871               	movf	pollController@response,w
  7917  05D4  3E11               	addlw	17
  7918  05D5  0086               	movwf	6
  7919  05D6  0187               	clrf	7
  7920  05D7  0870               	movf	??_pollController,w
  7921  05D8  0081               	movwf	1
  7922  05D9                     i1l1987:
  7923                           
  7924                           ;main.c: 53:         response[18] = analogStateSecond[7];
  7925  05D9  086D               	movf	_analogStateSecond+7,w
  7926  05DA  00F0               	movwf	??_pollController
  7927  05DB  0871               	movf	pollController@response,w
  7928  05DC  3E12               	addlw	18
  7929  05DD  0086               	movwf	6
  7930  05DE  0187               	clrf	7
  7931  05DF  0870               	movf	??_pollController,w
  7932  05E0  0081               	movwf	1
  7933  05E1                     i1l1989:
  7934                           
  7935                           ;main.c: 54:         response[19] = analogStateSecond[6];
  7936  05E1  086C               	movf	_analogStateSecond+6,w
  7937  05E2  00F0               	movwf	??_pollController
  7938  05E3  0871               	movf	pollController@response,w
  7939  05E4  3E13               	addlw	19
  7940  05E5  0086               	movwf	6
  7941  05E6  0187               	clrf	7
  7942  05E7  0870               	movf	??_pollController,w
  7943  05E8  0081               	movwf	1
  7944  05E9                     i1l82:
  7945  05E9  0008               	return
  7946  05EA                     __end_of_pollController:
  7947  007E                     btemp	set	126	;btemp
  7948  007E                     int$flags	set	126
  7949  007E                     wtemp0	set	126
  7950  23F0                     
  7951                           	psect	config
  7952                           
  7953                           ;Config register CONFIG1 @ 0x8007
  7954                           ;	External Oscillator mode selection bits
  7955                           ;	FEXTOSC = OFF, Oscillator not enabled
  7956                           ;	Power-up default value for COSC bits
  7957                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  7958                           ;	Clock Out Enable bit
  7959                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  7960                           ;	Clock Switch Enable bit
  7961                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7962                           ;	Fail-Safe Clock Monitor Enable bit
  7963                           ;	FCMEN = ON, FSCM timer enabled
  7964  8007                     	org	32775
  7965  8007  3F8C               	dw	16268
  7966                           
  7967                           ;Config register CONFIG2 @ 0x8008
  7968                           ;	Master Clear Enable bit
  7969                           ;	MCLRE = OFF, MCLR pin function is port defined function
  7970                           ;	Power-up Timer Enable bit
  7971                           ;	PWRTE = OFF, PWRT disabled
  7972                           ;	Low-Power BOR enable bit
  7973                           ;	LPBOREN = OFF, ULPBOR disabled
  7974                           ;	Brown-out reset enable bits
  7975                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  7976                           ;	Brown-out Reset Voltage Selection
  7977                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  7978                           ;	Zero-cross detect disable
  7979                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  7980                           ;	Peripheral Pin Select one-way control
  7981                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly by software
  7982                           ;	Stack Overflow/Underflow Reset Enable bit
  7983                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  7984                           ;	Background Debugger
  7985                           ;	DEBUG = 0x1, unprogrammed default
  7986  8008                     	org	32776
  7987  8008  37FE               	dw	14334
  7988                           
  7989                           ;Config register CONFIG3 @ 0x8009
  7990                           ;	WDT Period Select bits
  7991                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7992                           ;	WDT operating mode
  7993                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  7994                           ;	WDT Window Select bits
  7995                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7996                           ;	WDT input clock selector
  7997                           ;	WDTCCS = SC, Software Control
  7998  8009                     	org	32777
  7999  8009  3F9F               	dw	16287
  8000                           
  8001                           ;Config register CONFIG4 @ 0x800A
  8002                           ;	UserNVM self-write protection bits
  8003                           ;	WRT = OFF, Write protection off
  8004                           ;	Scanner Enable bit
  8005                           ;	SCANE = available, Scanner module is available for use
  8006                           ;	Low Voltage Programming Enable bit
  8007                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8008  800A                     	org	32778
  8009  800A  3FFF               	dw	16383
  8010                           
  8011                           ;Config register CONFIG5 @ 0x800B
  8012                           ;	UserNVM Program memory code protection bit
  8013                           ;	CP = OFF, Program Memory code protection disabled
  8014                           ;	DataNVM code protection bit
  8015                           ;	CPD = OFF, Data EEPROM code protection disabled
  8016  800B                     	org	32779
  8017  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        29
    BSS         68
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     44      80
    BANK1            80      4      60
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13            0      0       0
    BANK14            0      0       0
    BANK15            0      0       0
    BANK16            0      0       0
    BANK17            0      0       0
    BANK18            0      0       0
    BANK19            0      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    pollController@response	PTR unsigned char  size(1) Largest target is 20
		 -> response(BANK0[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _PS2Command in COMMON

    _PS2Command->_pollController

Critical Paths under _main in BANK0

    _main->_lutInit
    _readControllerAnalog->_readADC
    _picInit->_spiInit
    _lutInit->_Map
    _Map->___awdiv
    ___awdiv->___wmul

Critical Paths under _PS2Command in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PS2Command in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PS2Command in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PS2Command in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _PS2Command in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _PS2Command in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _PS2Command in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _PS2Command in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _PS2Command in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _PS2Command in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _PS2Command in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _PS2Command in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _PS2Command in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _PS2Command in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _PS2Command in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _PS2Command in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _PS2Command in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _PS2Command in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _PS2Command in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _PS2Command in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _PS2Command in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _PS2Command in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _PS2Command in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _PS2Command in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _PS2Command in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _PS2Command in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8341
                                              0 BANK1      4     4      0
                            _adcInit
                            _lutInit
                            _picInit
                     _readController
               _readControllerAnalog
 ---------------------------------------------------------------------------------
 (1) _readControllerAnalog                                 3     3      0    1697
                                              9 BANK0      3     3      0
                            _readADC
                        _reversebyte
 ---------------------------------------------------------------------------------
 (2) _reversebyte                                          4     4      0     226
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _readADC                                              9     7      2    1471
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _readController                                       3     3      0     124
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _picInit                                              2     2      0     456
                                              4 BANK0      2     2      0
                            _ppsLock
                          _ppsUnlock
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ppsUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ppsLock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lutInit                                             19    19      0    5891
                                             25 BANK0     19    19      0
                                _Map
                         _eepromRead
                        _eepromWrite
 ---------------------------------------------------------------------------------
 (2) _eepromWrite                                          3     2      1    1536
                                              0 BANK0      3     2      1
                          _nvmUnlock
 ---------------------------------------------------------------------------------
 (3) _nvmUnlock                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           3     3      0      65
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Map                                                 10     0     10    2958
                                             15 BANK0     10     0     10
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     625
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _PS2Command                                           3     3      0     705
                                              2 COMMON     3     3      0
                     _pollController
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (6) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _pollController                                       2     2      0     462
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
   _lutInit
     _Map
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _eepromRead
     _eepromWrite
       _nvmUnlock
   _picInit
     _ppsLock
     _ppsUnlock
     _spiInit
   _readController
   _readControllerAnalog
     _readADC
     _reversebyte

 _PS2Command (ROOT)
   _pollController
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4      3C       7       75.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      96      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      96      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13               0      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14               0      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15               0      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16               0      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17               0      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18               0      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               0      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Apr 01 13:46:10 2021

                 ___awdiv@sign 002C            ___wmul@multiplicand 0022                            l144 06DB  
                          l251 052A                            l243 047E                            l421 07C2  
                          l253 0547                            l247 04E2                            l256 07E4  
                          l424 0FCB                            l280 077B                            l417 07B5  
                          l249 0506                            l427 0F88                            l419 07BA  
                          l283 079D                            l372 0FA1                            l277 0403  
                          l366 0F8F                            l286 0772                            l375 073B  
                          l369 0F97                            l289 0657                            l387 0FDA  
                          l732 06B7                            l388 0FDF                            l581 0FFF  
                          l579 0FEB                            _RA0 0060                            _RA1 0061  
                          _RB0 0068                            _RA2 0062                            _RB1 0069  
                          _RA3 0063                            _RA4 0064                            _RB2 006A  
                          _RA5 0065                            _RB3 006B                            _RA6 0066  
                          _RD0 0078                            _RC2 0072                            _RB4 006C  
                          _RA7 0067                            _RB5 006D                            _RB6 006E  
                          _RB7 006F                            _RD4 007C                            _Map 07C3  
                          wreg 0009                 eepromRead@data 0022                           ?_Map 002F  
                         l2611 0F87                           l2621 0FF5                           l2613 0FE0  
                         l2631 065E                           l2623 0FFB                           l2615 0FE3  
                         l2711 077F                           l2703 0773                           l2641 0672  
                         l2633 0663                           l2617 0FE7                           l2609 0F82  
                         l2801 0255                           l2721 0F89                           l2705 0777  
                         l2651 0686                           l2643 0674                           l2635 0665  
                         l2627 0658                           l2619 0FF0                           l2811 02BD  
                         l2803 0263                           l2723 0F8E                           l2731 0FD6  
                         l2707 0778                           l2715 073E                           l2661 06A3  
                         l2653 068A                           l2645 067A                           l2637 0669  
                         l2629 065A                           l2821 0324                           l2813 02CA  
                         l2805 0270                           l2725 0F90                           l2741 0712  
                         l2733 0701                           l2709 077A                           l2717 0771  
                         l2901 06CC                           l2655 0699                           l2647 067D  
                         l2663 06A9                           l2639 066E                           l2671 07C3  
                         l2831 038B                           l2823 0331                           l2815 02D7  
                         l2807 027C                           l2727 0FCE                           l2751 072D  
                         l2743 071B                           l2735 070C                           l2911 06E6  
                         l2903 06D2                           l2665 06AE                           l2657 069D  
                         l2649 0682                           l2681 07A7                           l2841 03F2  
                         l2833 0398                           l2825 033E                           l2817 02E3  
                         l2809 028E                           l2729 0FD2                           l2761 0738  
                         l2753 0730                           l2745 071C                           l2737 070E  
                         l2921 06FB                           l2913 06EC                           l2905 06D7  
                         l2771 0F9D                           l2667 06B3                           l2659 069E  
                         l2691 07BB                           l2683 07A8                           l2675 07A0  
                         l2843 03F6                           l2835 03A5                           l2827 034A  
                         l2819 02F5                           l2763 073A                           l2755 0733  
                         l2747 072A                           l2739 0711                           l2851 046C  
                         l2915 06ED                           l2907 06E1                           l2773 0F9E  
                         l2765 0F98                           l2693 07C1                           l2685 07AA  
                         l2677 07A4                           l2837 03B1                           l2829 035C  
                         l2781 021B                           l2757 0736                           l2749 072C  
                         l2861 04A3                           l2853 0475                           l2845 0406  
                         l2917 06F2                           l2909 06E2                           l2775 0FA0  
                         l2767 0F9B                           l2695 0FBC                           l2687 07AE  
                         l2679 07A5                           l2839 03C3                           l2791 0243  
                         l2783 0223                           l2759 0737                           l2871 04CC  
                         l2863 04AF                           l2855 0487                           l2847 0465  
                         l2919 06F7                           l2769 0F9C                           l2697 0FBE  
                         l2689 07B2                           l2793 024B                           l2785 022B  
                         l2777 01CB                           l2881 0510                           l2873 04D8  
                         l2865 04B4                           l2857 0490                           l2849 046B  
                         l2699 0FC4                           l2795 0253                           l2787 0233  
                         l2779 0213                           l2883 0522                           l2875 04DD  
                         l2859 049E                           l2867 04B9                           l2891 06BE  
                         l2789 023B                           l2885 0543                           l2877 04EC  
                         l2869 04C7                           l2893 06C1                           l2879 04FE  
                         l2887 05EA                           l2895 06C7                           l2897 06C9  
                         l2889 06B8                           l2899 06CA                           u2000 04FE  
                         u2001 04FD                           u2010 0510                           u2011 050F  
                         u2030 0522                           u2031 0521                           u2024 0516  
                         u2040 06D7                           u2025 0515                           u2041 06D6  
                         u2050 06E1                           u2051 06E0                           u2060 06EC  
                         u2061 06EB                           u1600 0669                           u1601 0668  
                         u1610 067A                           u1611 0679                           u1700 07C1  
                         u1701 07C0                           u1630 068A                           u1550 0FE7  
                         u1710 077F                           u1631 0689                           u1551 0FE6  
                         u1711 077E                           u1800 0263                           u1625 067E  
                         u1801 0262                           u1650 0699                           u1810 027C  
                         u1651 0698                           u1811 027B                           u1580 0FFB  
                         u1820 02CA                           u1900 0475                           u1645 068B  
                         u1581 0FFA                           u1565 0FEC                           u1821 02C9  
                         u1805 025F                           u1901 0474                           u1725 0783  
                         u1670 06A9                           u1590 065E                           u1830 02E3  
                         u1910 0487                           u1671 06A8                           u1655 0695  
                         u1591 065D                           u1575 0FF1                           u1831 02E2  
                         u1815 0278                           u1911 0486                           u1735 078F  
                         u1680 06AE                           u1840 0331                           u1920 049E  
                         u1681 06AD                           u1665 069F                           u1841 0330  
                         u1825 02C6                           u1921 049D                           u1745 0742  
                         u1690 07BA                           u1850 034A                           u1691 07B9  
                         u1851 0349                           u1835 02DF                           u1755 0748  
                         u1860 0398                           u1940 04B4                           u1861 0397  
                         u1845 032D                           u1941 04B3                           u1765 0755  
                         u1870 03B1                           u1790 0FD2                           u1950 04C7  
                         u1934 04A9                           u1871 03B0                           u1855 0346  
                         u1791 0FD1                           u1951 04C6                           u1935 04A8  
                         u1775 075B                           u1880 0403                           u1881 0402  
                         u1865 0394                           u1785 0768                           u1970 04DD  
                         u1890 046B                           u1875 03AD                           u1971 04DC  
                         u1891 046A                           u1980 04EC                           u1964 04D2  
                         u1885 03FF                           u1981 04EB                           u1965 04D1  
                         u1994 04F2                           u1995 04F1                           i1l82 05E9  
                         i1l92 001A                           Map@x 002F                           _WPUA 0F39  
                         _WPUB 0F44                           _WPUC 0F4F                           _WPUD 0F5A  
                         _WPUE 0F65                           _main 06B8                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                         start 0188                    ?_PS2Command 0070                lutInit@position 004A  
                        ??_Map 0039                          _ADACQ 009D                          ?_main 0070  
                        _ADCLK 0098                          _ADPCH 009E                __end_of_adcInit 0FA2  
                        _ADREF 009A                __end_of___awdiv 06B8                          _ADPRE 009C  
              ___awdiv@divisor 0026       main@slaveSelectStatePrev 00D9                          i1l400 0F81  
                        i1l138 0186                          i1l391 0F76                          i1l394 0F7B  
                        i1l397 0F75                ___awdiv@counter 002B                          _TRISA 0011  
                        _TRISB 0012                          _TRISC 0013                          _TRISD 0014  
                        _TRISE 0015                __end_of_readADC 079E                __end_of_picInit 073C  
                        _index 0079  __size_of_readControllerAnalog 006E                          _lutLX 26F0  
                        _lutLY 25F0                          _lutRX 24F0                          _lutRY 23F0  
              __end_of_lutInit 0404                __end_of_ppsLock 0F98                __end_of_spiInit 0FE0  
              __end_of_spiRead 0F82                          status 0003                          wtemp0 007E  
                PS2Command@cmd 0074                __initialization 018A                   __end_of_main 0701  
                       ??_main 00D8            __size_of_PS2Command 0184                         _ADCON0 0093  
                       _ADCON1 0094                         _ADCON2 0095                         _ADRESH 008D  
                       _ADRESL 008C               ___awdiv@dividend 0028                         _ANSELA 0F38  
                       _ANSELB 0F43                         _ANSELC 0F4E                         _ANSELD 0F59  
                       _ANSELE 0F64           _PreviousDigitalByte1 00B8           _PreviousDigitalByte2 00B0  
                       u103_20 0F7B                         u103_21 0F7A                         i1l2211 0089  
                       i1l2203 0065                         _RC5PPS 0F25                         i1l2213 008F  
                       i1l2205 0076                         i1l2311 0161                         i1l2231 00A4  
                       i1l2215 0095                         i1l2207 007B                         i1l2303 0141  
                       u104_20 0583                         u104_21 0582                         i1l2321 017D  
                       i1l2313 0166                         i1l2241 00B7                         i1l2233 00AA  
                       i1l2217 009A                         i1l2209 0088                         i1l2305 0151  
                       i1l2161 0018                         i1l2323 017E                         i1l2315 016A  
                       i1l2307 0157                         i1l2251 00CF                         i1l2243 00C0  
                       i1l2171 002D                         i1l2163 001C                         i1l2155 0006  
                       i1l2325 0182                         i1l2317 0172                         i1l2309 015C  
                       i1l3141 011E                         i1l2261 00E4                         i1l2253 00D5  
                       i1l2245 00C5                         i1l2237 00AF                         i1l2229 00A0  
                       i1l2181 003F                         i1l2173 0030                         i1l2165 0022  
                       i1l2157 000B                         i1l2327 0184                         i1l2319 0179  
                       i1l3143 0149                         i1l2271 00F6                         i1l2263 00E9  
                       i1l2255 00D8                         i1l2247 00CA                         i1l2183 0040  
                       i1l2175 0032                         i1l2167 0025                         i1l2159 0012  
                       i1l2281 0101                         i1l2273 00FA                         i1l2265 00EC  
                       i1l2257 00DC                         i1l2249 00CB                         i1l3137 0053  
                       i1l2177 0038                         i1l2185 0042                         i1l2169 0027  
                       i1l2291 0111                         i1l2283 0103                         i1l2275 00FE  
                       i1l2267 00F0                         i1l2259 00E0                         i1l3139 006E  
                       i1l2195 004A                         i1l2187 0045                         i1l2179 003B  
                       i1l2285 0105                         i1l2277 00FF                         i1l2197 0064  
                       i1l2287 0109                         u130_20 0018                         i1l2289 010D  
                       u130_21 0017                         i1l2299 0116                         i1l1951 054E  
                       u131_20 0022                         i1l1961 0576                         i1l1953 0556  
                       u131_21 0021                         i1l1971 0598                         i1l1963 057E  
                       i1l1955 055E                         i1l1947 0F76                         i1l1981 05C1  
                       i1l1973 05A0                         i1l1965 0583                         i1l1957 0566  
                       i1l1949 0549                         i1l1983 05C9                         i1l1975 05A8  
                       i1l1967 0587                         i1l1959 056E                         i1l1991 0F7C  
                       u132_20 002D                         i1l1985 05D1                         i1l1977 05B1  
                       i1l1969 0590                         i1l1993 0F7F                         u132_21 002C  
                       i1l1987 05D9                         i1l1979 05B9                         i1l1989 05E1  
                       i1l1997 0F72                         u133_20 0038                         u133_21 0037  
                       u134_20 007B                         u134_21 007A                         u135_20 009F  
                       u135_21 009E                         u136_20 00C5                         u136_21 00C4  
                       u137_20 0157                         u129_20 000B                         u137_21 0156  
                       u129_21 000A                         u138_20 0161                         u138_21 0160  
                       u139_20 0179                         u139_21 0178                         _SSP1IE 38C8  
                       _SSP1IF 3878           __size_of_eepromWrite 0025                         ___wmul 0FE0  
                    ??_adcInit 0020                      ??___awdiv 002A        __size_of_pollController 00A2  
                       _lxData 004F                         _lyData 004E                eepromWrite@data 0020  
                       _rxData 0051               ___awdiv@quotient 002D                         _ryData 0050  
                 ?_reversebyte 0070                      ??_readADC 0022                      ??_picInit 0024  
                 __pdataCOMMON 0075                      ??_lutInit 0039               __end_of_spiWrite 0F76  
                    ??_ppsLock 0020                      ??_spiInit 0023                      ??_spiRead 0070  
            _IndexDigitalByte1 00A8              _IndexDigitalByte2 00A0        __end_of__initialization 01C7  
               __pcstackCOMMON 0070                   __pidataBANK0 07E5         _DigitalControllerByte1 00C8  
       _DigitalControllerByte2 00C0              eepromRead@address 0021        __size_of_readController 0144  
                   _cmdCounter 0078                     __pbssBANK0 0066                     __pbssBANK1 00A0  
                   _analogMode 0075                   ??_PS2Command 0072                     __pmaintext 06B8  
                      ?___wmul 0020                     __pintentry 0004        __size_of_spiReceiveWait 0006  
           __size_of_nvmUnlock 0007             __size_of_ppsUnlock 0007                     _eepromRead 0FBA  
   eepromWrite@interruptStatus 0022                        _NVMADRH 081B                        _NVMADRL 081A  
                      _NVMDATL 081C                        _NVMCON2 081F             __end_of_PS2Command 0188  
                      _PPSLOCK 0E8F                        _SSP1BUF 018C                     _escapeMode 006F  
     readController@analogMode 0022   __end_of_readControllerAnalog 0658                      ?_spiWrite 0070  
                      _adcInit 0F98                        ___awdiv 0658                 _pollController 0548  
              __size_of___wmul 0020                        __ptext1 05EA                        __ptext2 073C  
                      __ptext3 0773                        __ptext4 0404                        __ptext5 0701  
                      __ptext6 0FCC                        __ptext7 0F89                        __ptext8 0F90  
                      __ptext9 01CB                        _readADC 0773                   __size_of_Map 0022  
                      _picInit 0701           __size_of_reversebyte 0037                        _lutInit 01CB  
                      _ppsLock 0F90                        _spiInit 0FCC                        _spiRead 0F7C  
                      clrloop0 0FA3           end_of_initialization 01C7                        init_ram 0FAE  
                      initloop 0FAF              __end_of_nvmUnlock 0F89              __end_of_ppsUnlock 0F90  
       __end_of_pollController 05EA                     ??_spiWrite 0070                reversebyte@byte 0023  
                    Map@outMax 0037                      Map@outMin 0035                    ?_eepromRead 0070  
               _readController 0404                      _TRISAbits 0011                      _TRISCbits 0013  
                  spiWrite@dat 0070             _digitalStateSecond 0076                  ??_eepromWrite 0021  
              ?_pollController 0070                 _spiReceiveWait 0F76                 __end_of___wmul 1000  
                __pidataCOMMON 0F6E         __end_of_readController 0548            start_initialization 018A  
                  __end_of_Map 07E5           _readControllerAnalog 05EA                  _debounceLoops 004D  
          __size_of_eepromRead 0012         __end_of_spiReceiveWait 0F7C            __end_of_eepromWrite 07C3  
                     ??___wmul 0024                    __pdataBANK0 004C                ?_readController 0070  
                  __pbssBIGRAM 23F0                    __pbssCOMMON 0078                      ___latbits 0003  
                __pcstackBANK0 0020                  __pcstackBANK1 00D8          ?_readControllerAnalog 0070  
               _responseLength 004C              _analogStateSecond 0066                ?_spiReceiveWait 0070  
                     ?_adcInit 0070                       ?___awdiv 0026              __size_of_spiWrite 0005  
                     ?_readADC 0020                       ?_picInit 0070                       ?_lutInit 0070  
                     ?_ppsLock 0070                       ?_spiInit 0020                       ?_spiRead 0070  
           eepromWrite@address 0021           spiInit@sTransmitEdge 0022                 ___wmul@product 0024  
                  _eepromWrite 079E                      clear_ram0 0FA2             spiInit@sDataSample 0020  
                    _nvmUnlock 0F82                       Map@inMax 0033                       Map@inMin 0031  
                    _ppsUnlock 0F89                       _SSP1CON1 0190                       _SSP1STAT 018F  
                ??_reversebyte 0020                     _ADCON0bits 0093              ___wmul@multiplier 0020  
                 lutInit@lxMax 0043                   lutInit@lxMin 0042                   lutInit@lyMax 0045  
                 lutInit@lyMin 0044              _digitalStateFirst 0077                   lutInit@rxMax 0047  
                 lutInit@rxMin 0046                   lutInit@ryMax 0049                   lutInit@ryMin 0048  
                 ??_eepromRead 0020                      main@count 00DA         ??_readControllerAnalog 0029  
             ??_pollController 0070             __end_of_eepromRead 0FCC                     ?_nvmUnlock 0070  
                   ?_ppsUnlock 0070               __size_of_adcInit 000A               __size_of___awdiv 0060  
               readADC@channel 0020               _analogStateFirst 00D0               __size_of_readADC 002B  
             __size_of_picInit 003B            __end_of_reversebyte 0773               __size_of_lutInit 0239  
                     __ptext10 079E                       __ptext11 0F82                       __ptext20 0F76  
                     __ptext12 0FBA                       __ptext21 0548                       __ptext13 07C3  
                     __ptext14 0FE0                       __ptext15 0658                       __ptext16 0F98  
                     __ptext18 0F71                       __ptext19 0F7C               __size_of_ppsLock 0008  
             __size_of_spiInit 0014               __size_of_spiRead 0006                  __size_of_main 0049  
                     _response 0052               ??_readController 0020                       _spiWrite 0F71  
                     int$flags 007E                   spiInit@sType 0023                main@slaveSelect 00DB  
                 _SSP1STATbits 018F              spiInit@sClockIdle 0021                     _INTCONbits 000B  
                  _NVMCON1bits 081E         pollController@response 0071                       intlevel1 0000  
             ??_spiReceiveWait 0070                     _PS2Command 0004                    ??_nvmUnlock 0020  
                  ??_ppsUnlock 0020                    _reversebyte 073C                    _previousCmd 006E  
                 ?_eepromWrite 0020  
